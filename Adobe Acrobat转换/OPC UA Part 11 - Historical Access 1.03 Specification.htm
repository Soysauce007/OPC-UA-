<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!-- Created from PDF via Acrobat SaveAsXML -->
<!-- Mapping table version: 28-February-2003 -->
<HTML>
<HEAD>
<META
 name="dc.date"
 content="2015-12-11T15:44:01-05:00" >
<META
 name="dc.date.modified"
 content="2015-12-11T15:44:01-05:00" >
<META
 name="generator"
 content="Adobe Acrobat Exchange-Pro 8.0" >
</HEAD>
<BODY bgcolor=white text=black link=blue vlink=purple alink=fushia >
<HR>
<UL>
<LI>
<A href="#LinkTarget_1341">FIGURES</A>
</LI>
<LI>
<A href="#LinkTarget_1376">TABLES</A>
</LI>
<LI>
<A href="#LinkTarget_2035">1 Scope</A>
</LI>
<LI>
<A href="#LinkTarget_2058">2 Normative references</A>
</LI>
<LI>
<A href="#LinkTarget_2108">3 Terms, definitions, and abbreviations</A>
<UL>
<LI>
<A href="#LinkTarget_2109">3.1 Terms and definitions</A>
</LI>
<LI>
<A href="#LinkTarget_2255">3.2 Abbreviations</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_2260">4 Concepts</A>
<UL>
<LI>
<A href="#LinkTarget_2261">4.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_2263">4.2 Data architecture</A>
</LI>
<LI>
<A href="#LinkTarget_2277">4.3 Timestamps</A>
</LI>
<LI>
<A href="#LinkTarget_2335">4.4 Bounding Values and time domain</A>
</LI>
<LI>
<A href="#LinkTarget_2986">4.5 Changes in AddressSpace over time</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_3031">5 Historical Information Model</A>
<UL>
<LI>
<A href="#LinkTarget_3032">5.1 HistoricalNodes</A>
<UL>
<LI>
<A href="#LinkTarget_3033">5.1.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_3035">5.1.2 Annotations Property</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_3084">5.2 HistoricalDataNodes</A>
<UL>
<LI>
<A href="#LinkTarget_3085">5.2.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_3087">5.2.2 HistoricalDataConfigurationType</A>
</LI>
<LI>
<A href="#LinkTarget_3376">5.2.3 HasHistoricalConfiguration ReferenceType</A>
</LI>
<LI>
<A href="#LinkTarget_3446">5.2.4 Historical Data Configuration Object</A>
</LI>
<LI>
<A href="#LinkTarget_3503">5.2.5 HistoricalDataNodes Address Space Model</A>
</LI>
<LI>
<A href="#LinkTarget_3535">5.2.6 Attributes</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_3547">5.3 HistoricalEventNodes</A>
<UL>
<LI>
<A href="#LinkTarget_3548">5.3.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_3555">5.3.2 HistoricalEventFilter Property</A>
</LI>
<LI>
<A href="#LinkTarget_3596">5.3.3 HistoricalEventNodes Address Space Model</A>
</LI>
<LI>
<A href="#LinkTarget_3640">5.3.4 HistoricalEventNodes Attributes</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_3655">5.4 Exposing supported functions and capabilities</A>
<UL>
<LI>
<A href="#LinkTarget_3656">5.4.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_3687">5.4.2 HistoryServerCapabilitiesType</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_4008">5.5 Annotation DataType</A>
</LI>
<LI>
<A href="#LinkTarget_4060">5.6 Historical Audit Events</A>
<UL>
<LI>
<A href="#LinkTarget_4061">5.6.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_4204">5.6.2 AuditHistoryEventUpdateEventType</A>
</LI>
<LI>
<A href="#LinkTarget_4334">5.6.3 AuditHistoryValueUpdateEventType</A>
</LI>
<LI>
<A href="#LinkTarget_4447">5.6.4 AuditHistoryDeleteEventType</A>
</LI>
<LI>
<A href="#LinkTarget_4562">5.6.5 AuditHistoryRawModifyDeleteEventType</A>
</LI>
<LI>
<A href="#LinkTarget_4679">5.6.6 AuditHistoryAtTimeDeleteEventType</A>
</LI>
<LI>
<A href="#LinkTarget_4768">5.6.7 AuditHistoryEventDeleteEventType</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_4856">6 Historical Access specific usage of Services</A>
<UL>
<LI>
<A href="#LinkTarget_4857">6.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_4873">6.2 Historical Nodes StatusCodes</A>
<UL>
<LI>
<A href="#LinkTarget_4874">6.2.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_4882">6.2.2 Operation level result codes</A>
</LI>
<LI>
<A href="#LinkTarget_5140">6.2.3 Semantics changed</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5148">6.3 Continuation Points</A>
</LI>
<LI>
<A href="#LinkTarget_5155">6.4 HistoryReadDetails parameters</A>
<UL>
<LI>
<A href="#LinkTarget_5156">6.4.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_5277">6.4.2 ReadEventDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_5279">6.4.2.1 ReadEventDetails structure details</A>
</LI>
<LI>
<A href="#LinkTarget_5353">6.4.2.2 Read Event functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5368">6.4.3 ReadRawModifiedDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_5369">6.4.3.1 ReadRawModifiedDetails structure details</A>
</LI>
<LI>
<A href="#LinkTarget_5437">6.4.3.2 Read raw functionality</A>
</LI>
<LI>
<A href="#LinkTarget_5488">6.4.3.3 Read modified functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5513">6.4.4 ReadProcessedDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_5514">6.4.4.1 ReadProcessedDetails structure details</A>
</LI>
<LI>
<A href="#LinkTarget_5651">6.4.4.2 Read processed functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5736">6.4.5 ReadAtTimeDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_5737">6.4.5.1 ReadAtTimeDetails structure details</A>
</LI>
<LI>
<A href="#LinkTarget_5778">6.4.5.2 Read at time functionality</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5802">6.5 HistoryData parameters returned</A>
<UL>
<LI>
<A href="#LinkTarget_5803">6.5.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_5810">6.5.2 HistoryData type</A>
</LI>
<LI>
<A href="#LinkTarget_5835">6.5.3 HistoryModifiedData type</A>
</LI>
<LI>
<A href="#LinkTarget_5892">6.5.4 HistoryEvent type</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5927">6.6 HistoryUpdateType Enumeration</A>
</LI>
<LI>
<A href="#LinkTarget_5966">6.7 PerformUpdateType Enumeration</A>
</LI>
<LI>
<A href="#LinkTarget_6005">6.8 HistoryUpdateDetails parameter</A>
<UL>
<LI>
<A href="#LinkTarget_6006">6.8.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_6171">6.8.2 UpdateDataDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_6172">6.8.2.1 UpdateDataDetails structure details</A>
</LI>
<LI>
<A href="#LinkTarget_6262">6.8.2.2 Insert data functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6266">6.8.2.3 Replace data functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6269">6.8.2.4 Update data functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_6288">6.8.3 UpdateStructureDataDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_6289">6.8.3.1 UpdateStructureDataDetails structure details</A>
</LI>
<LI>
<A href="#LinkTarget_6391">6.8.3.2 Specfied Uniqueness of Structured History Data</A>
</LI>
<LI>
<A href="#LinkTarget_6394">6.8.3.3 Insert functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6398">6.8.3.4 Replace functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6401">6.8.3.5 Update functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6407">6.8.3.6 Remove functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_6410">6.8.4 UpdateEventDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_6411">6.8.4.1 UpdateEventDetails structure detail</A>
</LI>
<LI>
<A href="#LinkTarget_6514">6.8.4.2 Insert event functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6523">6.8.4.3 Replace event functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6528">6.8.4.4 Update event functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_6541">6.8.5 DeleteRawModifiedDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_6542">6.8.5.1 DeleteRawModifiedDetails structure detail</A>
</LI>
<LI>
<A href="#LinkTarget_6608">6.8.5.2 Delete raw functionality</A>
</LI>
<LI>
<A href="#LinkTarget_6611">6.8.5.3 Delete modified functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_6614">6.8.6 DeleteAtTimeDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_6615">6.8.6.1 DeleteAtTimeDetails structure detail</A>
</LI>
<LI>
<A href="#LinkTarget_6657">6.8.6.2 Delete at time functionality</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_6660">6.8.7 DeleteEventDetails structure</A>
<UL>
<LI>
<A href="#LinkTarget_6661">6.8.7.1 DeleteEventDetails structure detail</A>
</LI>
<LI>
<A href="#LinkTarget_6702">6.8.7.2 Delete event functionality</A>
</LI>
</UL>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_6705">Annex A  (informative)  Client conventions</A>
<UL>
<LI>
<A href="#LinkTarget_6707">A.1 How clients may request timestamps</A>
</LI>
<LI>
<A href="#LinkTarget_6840">A.2 Determining the first historical data point</A>
</LI>
</UL>
</LI>
</UL>
</HR>
<DIV class="Part" 

><P 

><FONT size="+1" color="#000000"></B> </P
><P 

><FONT size="+1"> <DIV class="Sect" 
 Alt=""
>  F  O  U  N  D  A  T  I  O  N &reg; </DIV
></P
><FONT size="+1"> <P 

><FONT size="+3"><B>OPC Unified Architecture </P
><P 

>Specification </P
><P 

>Part 11:  Historical Access </P
><P 

>Release  1.03 </P
><P 

>December 11, 2015 </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"></B>Specification Type </P
></TD
><TD  
 valign="top"
><P 

>Industry Standard Specification </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Title: </P
></TD
><TD  
 valign="top"
><P 

>OPC Unified Architecture  Historical Access </P
></TD
><TD  
 valign="top"
><P 

>Date: </P
></TD
><TD  
 valign="top"
><P 

>December 11, 2015 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Version: </P
></TD
><TD  
 valign="top"
><P 

>Release 1.03 </P
></TD
><TD  
 valign="top"
><P 

>Software </P
></TD
><TD  
 valign="top"
><P 

>MS-Word </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Source: </P
></TD
><TD  
 valign="top"
><P 

>OPC UA Part 11 - Historical Access 1.03 Specification.docx </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Author: </P
></TD
><TD  
 valign="top"
><P 

>OPC Foundation </P
></TD
><TD  
 valign="top"
><P 

>Status: </P
></TD
><TD  
 valign="top"
><P 

>Release </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><B>CONTENTS </P
><DIV class="TOC" 

><FONT size="+1"></B> <DIV class="TOCI" 

><FONT size="+1"><B> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1341" href="#">
FIGURES</B> ............................................................................................................................... iv</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1376" href="#">
<FONT size="+1"><B>TABLES</B> ................................................................................................................................. iv</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2035" href="#">
<FONT size="+1">1<FONT size="+1"> <FONT size="+1">Scope ............................................................................................................................. 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2058" href="#">
<FONT size="+1">2<FONT size="+1"> <FONT size="+1">Normative references ...................................................................................................... 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2108" href="#">
<FONT size="+1">3<FONT size="+1"> <FONT size="+1">Terms, definitions, and abbreviations .............................................................................. 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2109" href="#">
<FONT size="+1">3.1<FONT size="+1"> <FONT size="+1">Terms and definitions ............................................................................................. 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2255" href="#">
<FONT size="+1">3.2<FONT size="+1"> <FONT size="+1">Abbreviations ......................................................................................................... 3</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2260" href="#">
<FONT size="+1">4<FONT size="+1"> <FONT size="+1">Concepts ........................................................................................................................ 3</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2261" href="#">
<FONT size="+1">4.1<FONT size="+1"> <FONT size="+1">General .................................................................................................................. 3</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2263" href="#">
<FONT size="+1">4.2<FONT size="+1"> <FONT size="+1">Data architecture .................................................................................................... 3</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2277" href="#">
<FONT size="+1">4.3<FONT size="+1"> <FONT size="+1">Timestamps ............................................................................................................ 4</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2335" href="#">
<FONT size="+1">4.4<FONT size="+1"> <FONT size="+1">Bounding Values and time domain ......................................................................... 5</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2986" href="#">
<FONT size="+1">4.5<FONT size="+1"> <FONT size="+1">Changes in AddressSpace over time ...................................................................... 6</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3031" href="#">
<FONT size="+1">5<FONT size="+1"> <FONT size="+1">Historical Information Model ............................................................................................ 6</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3032" href="#">
<FONT size="+1">5.1<FONT size="+1"> <FONT size="+1">HistoricalNodes ...................................................................................................... 6</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">General ........................................................................................................... 6</DIV
></DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Annotations Property....................................................................................... 7</DIV
></DIV
><DIV class="Sect" 

><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
></DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3084" href="#">
5.2<FONT size="+1"> <FONT size="+1">HistoricalDataNodes ............................................................................................... 7</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">General ........................................................................................................... 7</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoricalDataConfigurationType ..................................................................... 7</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HasHistoricalConfiguration ReferenceType ..................................................... 8</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Historical Data Configuration Object ............................................................... 9</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoricalDataNodes Address Space Model ................................................... 10</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Attributes ...................................................................................................... 10</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3547" href="#">
5.3<FONT size="+1"> <FONT size="+1">HistoricalEventNodes ........................................................................................... 10</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">General ......................................................................................................... 10</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoricalEventFilter Property ........................................................................ 11</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoricalEventNodes Address Space Model ................................................. 11</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoricalEventNodes<I> </I>Attributes .................................................................... 12</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3655" href="#">
5.4<FONT size="+1"> <FONT size="+1">Exposing supported functions and capabilities ..................................................... 12</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">General ......................................................................................................... 12</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoryServerCapabilitiesType ...................................................................... 13</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4008" href="#">
5.5<FONT size="+1"> <FONT size="+1">Annotation DataType ............................................................................................ 15</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4060" href="#">
<FONT size="+1">5.6<FONT size="+1"> <FONT size="+1">Historical Audit Events ......................................................................................... 16</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">General ......................................................................................................... 16</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AuditHistoryEventUpdateEventType .............................................................. 16</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AuditHistoryValueUpdateEventType .............................................................. 17</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AuditHistoryDeleteEventType ........................................................................ 17</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AuditHistoryRawModifyDeleteEventType ....................................................... 18</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AuditHistoryAtTimeDeleteEventType ............................................................. 18</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AuditHistoryEventDeleteEventType ............................................................... 19</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4856" href="#">
6<FONT size="+1"> <FONT size="+1">Historical Access specific usage of Services ................................................................. 19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4857" href="#">
<FONT size="+1">6.1<FONT size="+1"> <FONT size="+1">General ................................................................................................................ 19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4873" href="#">
<FONT size="+1">6.2<FONT size="+1"> <FONT size="+1">Historical Nodes StatusCodes .............................................................................. 19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ....................................................................................................... 19</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Operation level result codes .......................................................................... 20</DIV
><DIV class="TOC" 

><FONT size="+1"> <DIV class="TOCI" 

> <FONT size="+1">Semantics changed ....................................................................................... 21</DIV
></DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5148" href="#">
6.3<FONT size="+1"> <FONT size="+1">Continuation Points .............................................................................................. 21</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5155" href="#">
<FONT size="+1">6.4<FONT size="+1"> <FONT size="+1">HistoryReadDetails parameters ............................................................................ 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ....................................................................................................... 22</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ReadEventDetails structure ........................................................................... 22</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ReadRawModifiedDetails structure ................................................................ 23</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ReadProcessedDetails structure ................................................................... 26</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ReadAtTimeDetails structure ......................................................................... 27</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5802" href="#">
6.5<FONT size="+1"> <FONT size="+1">HistoryData parameters returned .......................................................................... 28</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ....................................................................................................... 28</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoryData type ........................................................................................... 28</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoryModifiedData type .............................................................................. 28</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HistoryEvent type .......................................................................................... 28</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5927" href="#">
6.6<FONT size="+1"> <FONT size="+1">HistoryUpdateType Enumeration .......................................................................... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5966" href="#">
<FONT size="+1">6.7<FONT size="+1"> <FONT size="+1">PerformUpdateType Enumeration ......................................................................... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6005" href="#">
<FONT size="+1">6.8<FONT size="+1"> <FONT size="+1">HistoryUpdateDetails parameter ........................................................................... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ....................................................................................................... 29</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">UpdateDataDetails structure ......................................................................... 31</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">UpdateStructureDataDetails structure ........................................................... 32</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">UpdateEventDetails structure ........................................................................ 33</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">DeleteRawModifiedDetails structure .............................................................. 35</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">DeleteAtTimeDetails structure ....................................................................... 35</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">DeleteEventDetails structure ......................................................................... 36</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6705" href="#">
Annex A (informative)  Client conventions ............................................................................ 37</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6707" href="#">
<FONT size="+1">A.1<FONT size="+1"> <FONT size="+1">How clients may request timestamps .................................................................... 37</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6840" href="#">
<FONT size="+1">A.2<FONT size="+1"> <FONT size="+1">Determining the first historical data point .............................................................. 38</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">  </DIV
><H1 
 ID="LinkTarget_1341"
><B>FIGURES </H1
><DIV class="TOC" 

><DIV class="TOCI" 

></B> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2275" href="#">
Figure 1 &ndash; Possible OPC UA Server supporting Historical Access .......................................... 4</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3393" href="#">
<FONT size="+1">Figure 2 &ndash; ReferenceType hierarchy ....................................................................................... 9</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3513" href="#">
<FONT size="+1">Figure 3 &ndash; Historical<I> </I>Variable<I> </I>with Historical Data Configuration and Annotations ................ 10</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3639" href="#">
<FONT size="+1">Figure 4 &ndash; Representation of an Event with History in the AddressSpace ............................. 12</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3686" href="#">
<FONT size="+1">Figure 5 &ndash; Server and HistoryServer Capabilities ................................................................. 13</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">  </DIV
></DIV
><H1 
 ID="LinkTarget_1376"
><B>TABLES </H1
><DIV class="TOC" 

><DIV class="TOCI" 

></B> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2362" href="#">
Table 1 &ndash; Bounding Value examples ...................................................................................... 5</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3043" href="#">
<FONT size="+1">Table 2 &ndash; Annotations Property .............................................................................................. 7</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3100" href="#">
<FONT size="+1">Table 3 &ndash; HistoricalDataConfigurationType definition ............................................................. 7</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3327" href="#">
<FONT size="+1">Table 4 &ndash; ExceptionDeviationFormat Values .......................................................................... 8</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3394" href="#">
<FONT size="+1">Table 5 &ndash; HasHistoricalConfiguration ReferenceType ............................................................. 9</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3457" href="#">
<FONT size="+1">Table 6 &ndash; Historical Access configuration definition ................................................................ 9</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3562" href="#">
<FONT size="+1">Table 7 &ndash; Historical Events Properties .................................................................................. 11</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3701" href="#">
<FONT size="+1">Table 8 &ndash; HistoryServerCapabilitiesType Definition .............................................................. 14</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4016" href="#">
<FONT size="+1">Table 9 &ndash; Annotation Structure ............................................................................................. 16</A>
<FONT size="+1"> </DIV
></DIV
><DIV class="TOC" 

><DIV class="TOCI" 

><A href="#LinkTarget_4211" href="#">
<FONT size="+1">Table 10 &ndash; AuditHistoryEventUpdateEventType definition .................................................... 16</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4341" href="#">
<FONT size="+1">Table 11 &ndash; AuditHistoryValueUpdateEventType definition .................................................... 17</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4454" href="#">
<FONT size="+1">Table 12 &ndash; AuditHistoryDeleteEventType definition .............................................................. 17</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4569" href="#">
<FONT size="+1">Table 13 &ndash; AuditHistoryRawModifyDeleteEventType definition ............................................. 18</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4686" href="#">
<FONT size="+1">Table 14 &ndash; AuditHistoryAtTimeDeleteEventType definition ................................................... 18</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4776" href="#">
<FONT size="+1">Table 15 &ndash; AuditHistoryEventDeleteEventType definition ..................................................... 19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4921" href="#">
<FONT size="+1">Table 16 &ndash; Bad operation level result codes ......................................................................... 20</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5079" href="#">
<FONT size="+1">Table 17 &ndash; Good operation level result codes ....................................................................... 20</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5171" href="#">
<FONT size="+1">Table 18 &ndash; HistoryReadDetails parameterTypeIds ................................................................ 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5289" href="#">
<FONT size="+1">Table 19 &ndash; ReadEventDetails ............................................................................................... 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5375" href="#">
<FONT size="+1">Table 20 &ndash; ReadRawModifiedDetails .................................................................................... 24</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5520" href="#">
<FONT size="+1">Table 21 &ndash; ReadProcessedDetails ........................................................................................ 26</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5743" href="#">
<FONT size="+1">Table 22 &ndash; ReadAtTimeDetails ............................................................................................. 27</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5816" href="#">
<FONT size="+1">Table 23 &ndash; HistoryData Details ............................................................................................. 28</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5841" href="#">
<FONT size="+1">Table 24 &ndash; HistoryModifiedData Details ................................................................................ 28</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5900" href="#">
<FONT size="+1">Table 25 &ndash; HistoryEvent Details ........................................................................................... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5933" href="#">
<FONT size="+1">Table 26 &ndash; HistoryUpdateType Enumeration ......................................................................... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5972" href="#">
<FONT size="+1">Table 27 &ndash; PerformUpdateType Enumeration ....................................................................... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6022" href="#">
<FONT size="+1">Table 28 &ndash; HistoryUpdateDetails parameter TypeIds ............................................................ 30</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6178" href="#">
<FONT size="+1">Table 29 &ndash; UpdateDataDetails .............................................................................................. 31</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6296" href="#">
<FONT size="+1">Table 30 &ndash; UpdateStructureDataDetails................................................................................ 32</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6417" href="#">
<FONT size="+1">Table 31 &ndash; UpdateEventDetails ............................................................................................ 33</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6548" href="#">
<FONT size="+1">Table 32 &ndash; DeleteRawModifiedDetails .................................................................................. 35</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6621" href="#">
<FONT size="+1">Table 33 &ndash; DeleteAtTimeDetails ........................................................................................... 35</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6667" href="#">
<FONT size="+1">Table 34 &ndash; DeleteEventDetails ............................................................................................. 36</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6730" href="#">
<FONT size="+1">Table A.1 &ndash; Time keyword definitions ................................................................................... 38</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6788" href="#">
<FONT size="+1">Table A.2 &ndash;Time offset definitions ........................................................................................ 38</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1"> </DIV
></DIV
><P 

><FONT size="+1"><B>OPC FOUNDATION </P
><P 

><FONT size="+1"></B>____________ </P
><P 

><FONT size="+1"><B> </P
><P 

>UNIFIED ARCHITECTURE &ndash;  </P
><P 

><FONT size="+1">FOREWORD </P
><P 

><FONT size="+1"></B>This specification is for developers of OPC UA clients and servers. The specification is a result of an analysis and design process to develop a standard interface to facilitate the development of servers and clients by multiple vendors that shall inter-operate seamlessly together.  </P
><P 

><B>Copyright &copy; 2006-2015, OPC Foundation, Inc. </P
><P 

><FONT size="+1">AGREEMENT OF USE </P
><P 

><FONT size="+1"></B>COPYRIGHT RESTRICTIONS </P
><P 

>Any unauthorized use of this specification may violate copyright laws, trademark laws, and communications regulations and statutes. This document contains information which is protected by copyright. All Rights Reserved. No part of this work covered by copyright herein may be reproduced or used in any form or by any means--graphic, electronic, or mechanical, including photocopying, recording, taping, or information storage and retrieval systems--without permission of the copyright owner. </P
><P 

>OPC Foundation members and non-members are prohibited from copying and redistributing this specification. All copies must be obtained on an individual basis, directly from the OPC Foundation Web site <A href="https://opcfoundation.org/">
<FONT color="#0000FF">https://opcfoundation.org/</A>
<FONT color="#000000">. </P
><P 

>PATENTS </P
><P 

>The attention of adopters is directed to the possibility that compliance with or adoption of OPC specifications may require use of an invention covered by patent rights. OPC shall not be responsible for identifying patents for which a license may be required by any OPC specification, or for conducting legal inquiries into the legal validity or scope of those patents that are brought to its attention. OPC specifications are prospective and advisory only. Prospective users are responsible for protecting themselves against liability for infringement of patents. </P
><P 

>WARRANTY AND LIABILITY DISCLAIMERS </P
><P 

>WHILE THIS PUBLICATION IS BELIEVED TO BE ACCURATE, IT IS PROVIDED &quot;AS IS&quot; AND MAY CONTAIN ERRORS OR MISPRINTS. THE OPC FOUDATION MAKES NO WARRANTY OF ANY KIND, EXPRESSED OR IMPLIED, WITH REGARD TO THIS PUBLICATION, INCLUDING BUT NOT LIMITED TO ANY WARRANTY OF TITLE OR OWNERSHIP, IMPLIED WARRANTY OF MERCHANTABILITY OR WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE OR USE. IN NO EVENT SHALL THE OPC FOUNDATION BE LIABLE FOR ERRORS CONTAINED HEREIN OR FOR DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, RELIANCE OR COVER DAMAGES, INCLUDING LOSS OF PROFITS, REVENUE, DATA OR USE, INCURRED BY ANY USER OR ANY THIRD PARTY IN CONNECTION WITH THE FURNISHING, PERFORMANCE, OR USE OF THIS MATERIAL, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. </P
><P 

>The entire risk as to the quality and performance of software developed using this specification is borne by you.  </P
><P 

>RESTRICTED RIGHTS LEGEND </P
><P 

>This Specification is provided with Restricted Rights. Use, duplication or disclosure by the U.S. government is subject to restrictions as set forth in (a) this Agreement pursuant to DFARs 227.7202-3(a); (b) subparagraph (c)(1)(i) of the Rights in Technical Data and Computer Software clause at DFARs 252.227-7013; or (c) the Commercial Computer Software Restricted Rights clause at FAR 52.227-19 subdivision (c)(1) and (2), as applicable. Contractor / manufacturer are the OPC Foundation,. 16101 N. 82nd Street, Suite 3B, Scottsdale, AZ, 85260-1830 </P
><P 

>COMPLIANCE </P
><P 

>The OPC Foundation shall at all times be the sole entity that may authorize developers, suppliers and sellers of hardware and software to use certification marks, trademarks or other special designations to indicate compliance with these materials. Products developed using this specification may claim compliance or conformance with this specification if and only if the software satisfactorily meets the certification requirements set by the OPC Foundation. Products that do not meet these requirements may claim only that the product was based on this specification and must not claim compliance or conformance with this specification.  </P
><P 

>TRADEMARKS </P
><P 

>Most computer and software brand names have trademarks or registered trademarks. The individual trademarks have not been listed here. </P
><P 

>GENERAL PROVISIONS </P
><P 

>Should any provision of this Agreement be held to be void, invalid, unenforceable or illegal by a court, the validity and enforceability of the other provisions shall not be affected thereby.  </P
><P 

>This Agreement shall be governed by and construed under the laws of the State of Minnesota, excluding its choice or law rules. </P
><P 

>This Agreement embodies the entire understanding between the parties with respect to, and supersedes any prior understanding or agreement (oral or written) relating to, this specification. </P
><P 

>ISSUE REPORTING </P
><P 

>The OPC Foundation strives to maintain the highest quality standards for its published specifications, hence they undergo constant review and refinement. Readers are encouraged to report any issues and view any existing errata here: <A href="https://opcfoundation.org/developer-tools/specifications-unified-architecture/errata/">
<FONT color="#0000FF">https://opcfoundation.org/developer-tools/specifications-unified-architecture/errata/</A>
<FONT color="#000000">.</P
><P 

><FONT size="+1"><B>Revision 1.03 Highlights </P
><P 

><FONT size="+1"></B>The following table includes the Mantis issues resolved with this revision. </P
><P 

><FONT size="+1"> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1"><B>Mantis ID </P
></TH
><TH 
 valign="top"
><P 

>Summary </P
></TH
><TH 
 valign="top"
><P 

>Resolution </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2373">
<FONT color="#0000FF"></B>2373</A>
<FONT color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

>IEC comment: Is A.1 normative? Or informative? </P
></TD
><TD  
 valign="top"
><P 

>Added informative identifier to Annex A. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2425">
<FONT color="#0000FF">2425</A>
<FONT color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

>HistoricalDataConfigurationType: AggregateFunctions is Optional, should be Mandatory? </P
></TD
><TD  
 valign="top"
><P 

>The text has been changed to remove the requirement for an empty folder when aggregates do not exist. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2431">
<FONT color="#0000FF">2431</A>
<FONT color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

>In Subclause 6.4.3.2 what is &quot;format&quot;? </P
></TD
><TD  
 valign="top"
><P 

>&ldquo;Format&rdquo; has been replaced with the correct term &ldquo;TimestampToReturn&rdquo;. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2444">
<FONT color="#0000FF">2444</A>
<FONT color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

>UpdateEventDetails only allows one event message </P
></TD
><TD  
 valign="top"
><P 

>UpdateEventDetails has been changed to allow more than one event message. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2445">
<FONT color="#0000FF">2445</A>
<FONT color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

>Timestamps: Client requests TimestampsToReturn.Both, what if server supports Source only? </P
></TD
><TD  
 valign="top"
><P 

>Explicitly stated that the server shall return an error when the TimestampsToReturn Both selection is used and the server only supports the source timestamp. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2446">
<FONT color="#0000FF">2446</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">6.4.3.3 Read Modified Functionality: Para 1 is confusing; should original value be returned? </P
></TD
><TD  
 valign="top"
><P 

>Added that only modified values are returned and added a link to where the upateTypes are defined. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2469">
<FONT color="#0000FF">2469</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">ServerTimestamp support, possibly make available as a property for clients to discover? </P
></TD
><TD  
 valign="top"
><P 

>Changed HistoryServerCapabilitiesType to have the optional global indication. Changed historicalDataConfigurationType to have the optional individual indication. Added descriptions for each. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2471">
<FONT color="#0000FF">2471</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">Validation on inserting records exceeding the bounds of the database </P
></TD
><TD  
 valign="top"
><P 

>Text was added stating what result codes are returned when the vendor defined limits are exceeded. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2477">
<FONT color="#0000FF">2477</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">ReadAtTime when SimpleBounds=TRUE/FALSE </P
></TD
><TD  
 valign="top"
><P 

>Text was added to clarify the useSimpleBounds parameter. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2517">
<FONT color="#0000FF">2517</A>
<FONT color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

>&quot;Subtype of&quot; for &quot;Inherit the properties&quot; </P
></TD
><TD  
 valign="top"
><P 

>Text changed to &quot;Subtype of&quot;. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2531">
<FONT color="#0000FF">2531</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">Uniqueness of Annotation records - do not include message for uniqueness </P
></TD
><TD  
 valign="top"
><P 

>Removed message from the formula for uniqueness of the structured data key. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2584">
<FONT color="#0000FF">2584</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">6.8.7.2 DeleteAtTimeDetails &quot;all entries&quot; clarification </P
></TD
><TD  
 valign="top"
><P 

>The text &ldquo;all entries&rdquo; was replaced with &ldquo;all raw values, modified values, and annotations&rdquo; </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2667">
<FONT color="#0000FF">2667</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">Description of Continuation Point (6.3) does not match general concept </P
></TD
><TD  
 valign="top"
><P 

>Changed the continuation point text to be correct with how continuation points are used in the rest of the UA specification. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2784">
<FONT color="#0000FF">2784</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">What does 'ProcessingInterval=0' mean </P
></TD
><TD  
 valign="top"
><P 

>Added clarification text subclause 6.4.4.2 describing the meaning of the value 0. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2887">
<FONT color="#0000FF">2887</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">Continuation point handling for large HistoryRead requests </P
></TD
><TD  
 valign="top"
><P 

>Continuation points have been added as valid replies for all read requests when the time needed to reply is longer than the timeout hint. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=2985">
<FONT color="#0000FF">2985</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">Typo in 5.6.4 AuditHistoryDeleteEventType </P
></TD
><TD  
 valign="top"
><P 

>Incorrect &ldquo;NodeID&rdquo; was changed to &ldquo;UpdateNode&rdquo; to match the property name. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=3091">
<FONT color="#0000FF">3091</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">OperationLimitsType - MaxNodesPerHistoryUpdateXxx issues </P
></TD
><TD  
 valign="top"
><P 

>The text was clarified when both Events and Data are included in the same call when using the UpdateHistory Service. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="https://www.opcfoundation.org/mantis/view.php?id=3236">
<FONT color="#0000FF">3236</A>
<FONT size="+1" color="#000000"> </P
></TD
><TD  
 valign="top"
><P 

><FONT size="+1">Aggregate Configuration type missing from Historical capabilities </P
></TD
><TD  
 valign="top"
><P 

>Added an instance of AggreagteConfigurationType to the HistoricalServerCapabilities. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><P 

><FONT size="+1"><B>OPC Unified Architecture </P
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><P 

> </P
><P 

>Part 11: Historical Access </P
><P 

> </P
><P 

> </P
><P 

> </P
><P 

> </P
><H1 
 ID="LinkTarget_2035"
><FONT size="+1">1 Scope </H1
><P 

><FONT size="+1"></B>This specification is part of the overall OPC Unified Architecture standard series and defines the <I>information model</I> associated with Historical Access (HA). It particularly includes additional and complementary descriptions of the <I>NodeClass</I>es and <I>Attributes</I> needed for Historical Access, additional standard <I>Properties</I>, and other information and behaviour. </P
><P 

>The complete <I>AddressSpace </I>Model including all <I>NodeClass</I>es and <I>Attributes</I> is specified in <A href="#LinkTarget_2066" href="#">
Part 3</A>
. The predefined <I>Information</I> <I>Model</I> is defined in <A href="#LinkTarget_2078" href="#">
Part 5</A>
. The <I>Services</I> to detect and access historical data and events, and description of the <I>ExtensibleParameter</I> types are specified in <A href="#LinkTarget_2072" href="#">
Part 4</A>
. </P
><P 

>This part includes functionality to compute and return <I>Aggregates</I> like minimum, maximum, average etc. The <I>Information</I> <I>Model</I> and the concrete working of <I>Aggregates</I> are defined in<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1">. </P
><H1 
 ID="LinkTarget_2058"
><FONT size="+1"><B>2 Normative references </H1
><P 

><FONT size="+1"></B>The following documents, in whole or in part, are normatively referenced in this document and are indispensable for its application. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies. </P
><P 

><FONT size="+1">Part 1: OPC UA Specification: Part 1 &ndash; Overview and Concepts </P
><P 

><A href="http://www.opcfoundation.org/UA/Part1/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part1/</A>
<FONT color="#000000"> </P
><P 

>Part 3: OPC UA Specification: Part 3 &ndash; Address Space Model </P
><P 

><A href="http://www.opcfoundation.org/UA/Part3/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part3/</A>
<FONT color="#000000"> </P
><P 

>Part 4: OPC UA Specification: Part 4 &ndash; Services </P
><P 

><A href="http://www.opcfoundation.org/UA/Part4/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part4/</A>
<FONT color="#000000"> </P
><P 

>Part 5: OPC UA Specification: Part 5 &ndash; Information Model </P
><P 

><A href="http://www.opcfoundation.org/UA/Part5/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part5/</A>
 </P
><P 

><FONT color="#000000">Part 6: OPC UA Specification: Part 6 &ndash; Mapping </P
><P 

><A href="http://www.opcfoundation.org/UA/Part5/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part6/</A>
<FONT color="#000000"> </P
><P 

>Part 7: OPC UA Specification: Part 7 &ndash; Profiles </P
><P 

><A href="http://www.opcfoundation.org/UA/Part7/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part7/</A>
 </P
><P 

><FONT color="#000000">Part 8: OPC UA Specification: Part 8 &ndash; Data Access </P
><P 

><A href="http://www.opcfoundation.org/UA/Part8/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part8/</A>
<FONT color="#000000"> </P
><P 

> Part 13:OPC UA Specification: Part 13 &ndash; Aggregates </P
><P 

><A href="http://www.opcfoundation.org/UA/Part13/">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/Part13/</A>
<FONT color="#000000"> </P
><H1 
 ID="LinkTarget_2108"
><FONT size="+1"><B>3 Terms, definitions, and abbreviations </H1
><H2 
 ID="LinkTarget_2109"
><FONT size="+1">3.1 Terms and definitions </H2
><P 

></B>For the purposes of this document, the terms and definitions given in <A href="#LinkTarget_2060" href="#">
<FONT size="+1">Part 1</A>
<FONT size="+1">, <A href="#LinkTarget_2066" href="#">
<FONT size="+1">Part 3</A>
<FONT size="+1">, <A href="#LinkTarget_2072" href="#">
<FONT size="+1">Part 4</A>
<FONT size="+1">, and<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1"> as well as the following apply. </P
><DL 

><DL 

><DL 

><DD 

><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">Annotation<FONT size="+1"> </P
><P 

></B>metadata associated with an item at a given instance in time </P
><P 

><FONT size="+1">Note 1 to entry: An <I>Annotation</I> is metadata that is associated with an item at a given instance in time. There does not have to be a value stored at that time.  </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">BoundingValues<FONT size="+1"> </P
><P 

></B>values associated with the starting and ending time </P
><P 

><FONT size="+1">Note 1 to entry: <I>BoundingValues</I> are the values that are associated with the starting and ending time of a <I>ProcessingInterval</I> specified when reading from the historian. <I>BoundingValues</I> may be required by <I>Clients</I> to determine the starting and ending values when requesting <I>raw data</I> over a time range. If a <I>raw data</I> value exists at the start or end point, it is considered the bounding value even though it is part of the data request. If no <I>raw data</I> value exists at the start or end point, then the <I>Server</I> will determine the boundary value, which may require data from a data point outside of the requested range. See <A href="#LinkTarget_2335" href="#">
4.4</A>
 for details on using <I>BoundingValues</I>. </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">HistoricalNode<FONT size="+1"> </P
><P 

></B><I>Object</I>, <I>Variable</I>, <I>Property</I> or <I>View</I> in the<I> AddressSpace</I> where a <I>Client</I> can access historical data or <I>Events</I> </P
><P 

><FONT size="+1">Note 1 to entry: A <I>HistoricalNode</I> is a term used in this document to represent any <I>Object</I>, <I>V</I><I>ariable</I><I>, Property</I> or <I>View</I> in the <I>AddressSpace</I> for which a <I>Client</I> may read and/or update historical data or <I>E</I><I>vents</I>. The terms &ldquo;<I>HistoricalNode</I><I>&rsquo;s</I> history&rdquo; or &ldquo;history of a <I>HistoricalNode</I>&rdquo; will refer to the time series data or <I>E</I><I>vents</I> stored for this <I>HistoricalNode</I>. The term <I>HistoricalNode</I> refers to both <I>HistoricalDataNode</I><I>s</I> and <I>HistoricalEventNode</I><I>s</I><FONT size="+1">. </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">HistoricalDataNode<FONT size="+1"> </P
><P 

></B><I>Variable</I> or <I>Property</I> in the <I>AddressSpace</I> where a <I>Client</I> can access historical data </P
><P 

><FONT size="+1">Note 1 to entry: A <I>HistoricalDataNode</I> represents any Variable or Property in the <I>AddressSpace </I>for which a <I>Clie</I><I>nt</I> may read and/or update historical data. &ldquo;<I>HistoricalDataNode</I>&rsquo;s history&rdquo; or &ldquo;history of a <I>HistoricalDataNode</I>&rdquo; refers to the time series data stored for this <I>HistoricalNode</I>. Examples of such data are: </P
><DL 

><DD 

>&#61623; device data (like temperature sensors) </DD
><DD 

>&#61623; calculated data </DD
><DD 

>&#61623; status information (open/closed, moving) </DD
><DD 

>&#61623; dynamically changing system data (like stock quotes) </DD
><DD 

>&#61623; diagnostic data </DD
></DL
><P 

>The term <I>HistoricalDataNode</I><I>s</I> is used when referencing aspects of the standard that apply to accessing historical data only. </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">HistoricalEventNode<FONT size="+1"> </P
><P 

></B><I>Object</I> or <I>View</I> in the <I>AddressSpace</I> for which a <I>Client</I> can access historical <I>Events</I> </P
><P 

><FONT size="+1">Note 1 to entry: &ldquo;<I>HistoricalEventNode</I>&rsquo;s history&rdquo; or &ldquo;history of a <I>HistoricalEventNode</I>&rdquo; refers to the time series <I>E</I><I>vents</I> stored in some historical system. Examples of such data are: </P
><DL 

><DD 

>&#61623; <I>Notifications</I> </DD
><DD 

>&#61623; system <I>Alarms</I> </DD
><DD 

>&#61623; operator action <I>Events</I> </DD
><DD 

>&#61623; system triggers (such as new orders to be processed) </DD
></DL
><P 

>The term <I>Histori</I><I>calEventNode</I> is used when referencing aspects of the standard that apply to accessing historical <I>E</I><I>vents</I> only. </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">modified values<FONT size="+1"> </P
><P 

></B><I>HistoricalDataNode</I><I>&rsquo;s</I> value that has been changed (or manually inserted or deleted) after it was stored in the historian </P
><P 

><FONT size="+1">Note 1 to entry: For some <I>Servers</I>, a lab data entry value is not a <I>modified value</I>, but if a user corrects a lab value, the original value would be considered a <I>modified value</I>, and would be returned during a request for <I>modified values</I>. Also manually inserting a value that was missed by a standard collection system may be considered a <I>modified value</I>. Unless specified otherwise, all historical <I>Services</I> operate on the current, or most recent, value for the specified <I>HistoricalDataNode</I> at the specified timestamp. Requests for <I>modified values</I> are used to access values that have been superseded, deleted or inserted. It is up to a system to determine what is </P
><P 

>considered a <I>modified value</I>. Whenever a <I>Server</I> has modified data available for an entry in the historical collection it shall set the<I> ExtraData </I>bit in the <I>StatusCode</I><FONT size="+1"><I>.</I>  </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">raw data<FONT size="+1"> </P
><P 

></B>data that is stored within the historian for a <I>HistoricalDataNode</I>  </P
><P 

><FONT size="+1">Note 1 to entry: The data may be all data collected for the <I>DataValue</I> or it may be some subset of the data depending on the historian and the storage rules invoked when the item&rsquo;s values were saved.  </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">StartTime/EndTime<FONT size="+1"> </P
><P 

></B>bounds of a history request which define the time domain </P
><P 

><FONT size="+1">Note 1 to entry: For all requests, a value falling at the end time of the time domain is not included in the domain, so that requests made for successive, contiguous time domains will include every value in the historical collection exactly once.  </P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">TimeDomain<FONT size="+1"> </P
><P 

></B>interval of time covered by a particular request, or response  </P
><P 

><FONT size="+1">Note 1 to entry: In general, if the start time is earlier than or the same as the end time, the time domain is considered to begin at the start time and end just before the end time; if the end time is earlier than the start time, the time domain still begins at the start time and ends just before the end time, with time &quot;running backward&quot; for the particular request and response. In both cases, any value which falls exactly at the end time of the <I>TimeDomain</I> is not included in the <I>TimeDomain</I>. See the examples in <A href="#LinkTarget_2335" href="#">
4.4</A>
. <I>BoundingValues</I> effect the time domain as described in <A href="#LinkTarget_2335" href="#">
4.4</A>
.  </P
><P 

>All timestamps which can legally be represented in a <I>UtcTime</I> <I>DataType</I> are valid timestamps, and the <I>Server</I> may not return an invalid argument result code due to the timestamp being outside of the range for which the <I>Server</I> has data. See <A href="#LinkTarget_2066" href="#">
Part 3</A>
 for a description of the range and granularity of this <I>DataType</I>. <I>Servers</I> are expected to handle out-of-bounds timestamps gracefully, and return the proper <I>StatusCodes</I> to the <I>Client. </I></P
><DL 

><DL 

><DL 

><DD 

><FONT size="+1"><B>  </DD
></DL
></DL
></DL
><P 

><FONT size="+1">Structured History Data<FONT size="+1"> </P
><P 

></B>structured data stored in a history collection where parts of the structure are used to uniquely identify the data within the data collection  </P
><P 

><FONT size="+1">Note 1 to entry: Most historical data applications assume only one current value per timestamp. Therefore the timestamp of the data is considered the unique identifier for that value. Some data or meta data such as <I>Annotations</I> may permit multiple values to exist at a single timestamp.  In such cases the <I>Server </I>would use one or more parameters of the <I>Structured History Data</I> entry to uniquely identifiy each element within the history collection. <I>Annotations</I> are examples of <I>Structured History Data</I>. </P
><H2 
 ID="LinkTarget_2255"
><FONT size="+1"><B>3.2 Abbreviations  </H2
><P 

></B>DA Data Access </P
><P 

>HA Historical Access </P
><P 

>HDA Historical Data Access </P
><P 

>UA  Unified Architecture </P
><H1 
 ID="LinkTarget_2260"
><FONT size="+1"><B>4 Concepts </H1
><H2 
 ID="LinkTarget_2261"
><FONT size="+1">4.1 General </H2
><P 

></B>This part defines the handling of historical time series data and historical <I>Event</I> data in the OPC Unified Architecture. Included is the specification of the representation of historical data and <I>Events</I> in the <I>AddressSpace. </I> </P
><H2 
 ID="LinkTarget_2263"
><B>4.2 Data architecture </H2
><P 

></B>A <I>Server</I> supporting Historical Access provides <I>Clients</I> with transparent access to different historical data and/or historical <I>Event</I> sources (e.g. process historians, event historians, etc.).  </P
><P 

>The historical data or <I>Events</I> may be located in a proprietary data collection, database or a short term buffer within the memory. A <I>Server</I> supporting Historical Access will provide historical data and <I>Events</I> for all or a subset of the available <I>Variables</I>, <I>Objects, Properties</I> or <I>Views</I> within the <I>Server</I> <I>AddressSpace</I>. </P
><P 

><A href="#LinkTarget_2275" href="#">
Figure 1</A>
 illustrates how the <I>AddressSpace </I>of a UA <I>Server </I>might consist of a broad range of different historical data and/or historical <I>Event</I> sources. </P
><P 

> <DIV class="Sect" 
 Alt=""
>OperatorStation 2OperatorDisplayEventLogger, etc.OPC UAHistorical AccessServerserverclientOPC UAHistorical AccessServerOPC-COM  Server(DA or A&amp;E)Other data sourceProprietary Data ServerOPC UA Server</DIV
></P
><P 

><B>Figure 1 &ndash; Possible OPC UA Server supporting Historical Access  </P
><P 

></B>The <I>Server</I> may be implemented as a standalone OPC UA <I>Server</I> that collects data from another OPC UA <I>Server</I> or another data source. The <I>Client</I> that references the OPC UA <I>Server</I> supporting Historical Access for historical data may be simple trending packages that just desire values over a given time frame or they may be complex reports that require data in multiple formats. </P
><H2 
 ID="LinkTarget_2277"
><B>4.3 Timestamps </H2
><P 

></B>The nature of OPC UA Historical Access requires that a single timestamp reference be used to relate the multiple data points, and the <I>Client</I> may request which timestamp will be used as the reference. <FONT size="+1">See <A href="#LinkTarget_2072" href="#">
<FONT size="+1">Part 4</A>
<FONT size="+1"> <FONT size="+1">for details on the <I>TimestampsToReturn</I> enumeration.<FONT color="#FF00FF"><B> <FONT color="#000000"></B>An OPC UA <I>Server</I> supporting Historical Access will treat the various timestamp settings as described below. A HistoryRead with invalid settings will be rejected with Bad_TimestampsToReturnInvalid (see <A href="#LinkTarget_2072" href="#">
Part 4</A>
). </P
><P 

>For <I>HistoricalDataNode</I><I>s</I>, the SourceTimestamp is used to determine which historical data values are to be returned. </P
><P 

>The request is in terms of <I>SourceTimestamp</I> but the reply could be in <I>SourceTimestamp</I>, <I>ServerTimestamp</I> or both timestamps.  If the reply has the <I>Server</I> timestamp the timestamps could fall outside of the range of the requested time.<FONT size="+1"> </P
><P 

>SOURCE_0 <FONT size="+1">Return the <I>SourceTimestamp</I>.  </P
><P 

>SERVER_1 Return the <I>ServerTimestamp</I>.  </P
><P 

>BOTH_2 Return both the <I>SourceTimestamp</I> and <I>ServerTimestamp</I>.  </P
><P 

>NEITHER_3 This is not a valid setting for any HistoryRead accessing <I>HistoricalDataNodes</I><FONT size="+1"><I>.</I><FONT size="+1"> </P
><P 

><FONT size="+1">Any reference to timestamps in this context throughout this part will represent either <I>ServerTimestamp</I> or <I>SourceTimestamp</I> as dictated by the type requested in the HistoryRead <I>Service</I>. Some <I>Servers</I> may not support historizing both <I>SourceTimestamp</I> and <I>ServerTimestamp</I>, but it is expected that all <I>Servers</I> will support historizing <I>SourceTimestamp</I> (see Part 7 for details on <I>Server</I> <I>Profiles</I>). </P
><P 

>If a request is made requesting both <I>ServerTimestamp</I> and <I>SourceTimestamp</I> and the <I>Server</I> is only collecting the <I>SourceTimestamp</I> the <I>Server</I> shall return Bad_TimestampsToReturnInvalid. </P
><P 

>For <I>HistoricalEventNodes</I> this parameter does not apply. This parameter is ignored since the entries returned are dictated by the <I>Event</I> Filter. See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for details. </P
><H2 
 ID="LinkTarget_2335"
><B>4.4 Bounding Values and time domain  </H2
><P 

></B>When accessing <I>HistoricalDataNodes via </I>the<I> HistoryRead Service</I>, requests can set a flag, returnBounds, indicating that <I>BoundingValues</I> are requested. For a complete description of the <I>Extensible</I> <I>Parameter</I> <I>HistoryReadDetails </I>that include <I>StartTime</I>, <I>EndTime</I> and NumValuesPerNode, see <A href="#LinkTarget_5155" href="#">
6.4</A>
. The concept of Bounding Values and how they affect the time domain that is requested as part of the <I>HistoryRead</I> request is further explained in 4.4. 4.4 also provides examples of <I>TimeDomains</I> to further illustrate the expected behaviour. </P
><P 

>When making a request for historical data using the <I>HistoryRead</I> <I>Service</I>, the required parameters include at least 2 of these three parameters: <I>startTime</I>, <I>endTime</I> and numValuesPerNode. What is returned when Bounding Values are requested varies according to which of these parameters are provided. For a historian that has values stored at 5:00, 5:02, 5:03, 5:05 and 5:06, the data returned when using the Read <I>Raw</I> functionality is given by <A href="#LinkTarget_2362" href="#">
Table 1</A>
. In the table, FIRST stands for a tuple with a value of null, a timestamp of the specified <I>StartTime</I>, and a <I>StatusCode</I> of <I>Bad_BoundNotFound</I>. LAST stands for a tuple with a value of null, a timestamp of the specified <I>EndTime</I>, and a <I>StatusCode</I> of <FONT size="+1"><I>Bad_BoundNotFound</I><I>.</I><I> </I></P
><P 

><FONT size="+1">In some cases, attempting to locate bounds, particularly FIRST or LAST points, may be resource intensive for <I>Server</I><I>s</I>. Therefore how far back or forward to look in history for Bounding Values is <I>Server</I> dependent, and the <I>Server</I> search limits may be reached before a bounding value can be found. There are also cases, such as reading <I>Annotations</I> or <I>Attribute</I> data where Bounding Values may not be appropriate. For such use cases it is permissible for the <I>Server</I> to return a <I>StatusCode</I> of <I>Bad_BoundNotSupported</I><I>.</I><I> </I></P
><P 

><B>Table 1 &ndash; Bounding Value examples </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">Start Time </P
></TH
><TH 
 valign="top"
><P 

>End Time </P
></TH
><TH 
 valign="top"
><P 

>numValuesPerNode </P
></TH
><TH 
 valign="top"
><P 

>Bounds </P
></TH
><TH 
 valign="top"
><P 

>Data Returned </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03, 5:05 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03, 5:05 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:05, 5:03, 5:02, 5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:05, 5:03, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:05, 5:03, 5:02, 5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:03, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:59 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>FIRST, 5:00, 5:02, 5:03, 5:05 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:59 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:07 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03, 5:05, 5:06, LAST </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:07 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:02, 5:03, 5:05, 5:06 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:05, 5:03, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:05, 5:03, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:05, 5:03, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:04 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:03, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:59 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>FIRST, 5:00, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:59 </P
></TD
><TD  
 valign="top"
><P 

>5:05 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:07 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:07 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:02, 5:03, 5:05 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><B>Start Time </P
></TH
><TH 
 valign="top"
><P 

>End Time </P
></TH
><TH 
 valign="top"
><P 

>numValuesPerNode </P
></TH
><TH 
 valign="top"
><P 

>Bounds </P
></TH
><TH 
 valign="top"
><P 

>Data Returned </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>5:00 </P
></TD
><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03, 5:05, 5:06, LAST<FONT size="+1">a<FONT size="+1"> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02, 5:03, 5:05, 5:06 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:07 </P
></TD
><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:06, LAST </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:07 </P
></TD
><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>NODATA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>5:06 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:06,5:05,5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>5:06 </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:06,5:05,5:03 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>5:06 </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:06,5:05,5:03,5:02,5:00,FIRSTb </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>5:06 </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:06, 5:05, 5:03, 5:02, 5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, FIRST </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UNSPECIFIED </P
></TD
><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>NODATA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>FIRST,5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>NODATA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>FIRST </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>NODATA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>4:48 </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>FIRST,5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00,5:02c </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00, 5:02 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>NODATA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>Yes </P
></TD
><TD  
 valign="top"
><P 

>5:00 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>5:01 </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>No </P
></TD
><TD  
 valign="top"
><P 

>NODATA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>a The timestamp of LAST cannot be the specified End Time because there is no specified End Time. In this situation the timestamp for LAST will be equal to the previous timestamp returned plus one second. </P
><P 

>b  The timestamp of FIRST cannot be the specified End Time because there is no specified Start Time. In this situation the timestamp for FIRST will be equal to the previous timestamp returned minus one second. </P
><P 

>c  When the Start Time = End Time (there is data at that time), and Bounds is set to True, the start bounds will equal the Start Time and the next data point will be used for the end bounds. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_2986"
><FONT size="+1"><B>4.5 Changes in AddressSpace over time </H2
><P 

></B><I>Clients</I> use the browse <I>Services</I> of the <I>View</I> <I>Service</I> <I>Set</I> to navigate through the <I>AddressSpace</I> to discover the<I> HistoricalNodes</I> and their characteristics. These <I>Services</I> provide the most current information about the <I>AddressSpace</I>. It is possible and probable that the <I>AddressSpace</I> of a <I>Server</I> will change over time (i.e. <I>TypeDefinitions</I> may change; <I>NodeIds</I><FONT size="+1"> may be modified, added or deleted). </P
><P 

><FONT size="+1"><I>Server</I> developers and administrators need to be aware that modifying the <I>AddressSpace</I> may impact a <I>Client</I><I>&rsquo;</I><I>s</I> ability to access historical information. If the history for a <I>HistoricalNode</I> is still required, but the <I>HistoricalNode</I> is no longer historized, then the <I>O</I><I>bject</I> should be maintained in the AddressSpace, with the appropriate <I>AccessLevel</I> <I>A</I><I>ttribute</I> and <I>Historizing</I> <I>A</I><I>ttribute</I> settings (see <A href="#LinkTarget_2066" href="#">
Part 3</A>
 for details on access levels). </P
><H1 
 ID="LinkTarget_3031"
><FONT size="+1"><B>5 Historical Information Model </H1
><H2 
 ID="LinkTarget_3032"
><FONT size="+1">5.1 HistoricalNodes </H2
><H3 
 ID="LinkTarget_3033"
> General </H3
><P 

></B>The Historical Access model defines additional <I>Properties</I> that are applicable for both <I>HistoricalDataNodes </I>and <I>HistoricalEventNodes. </I></P
><H3 
 ID="LinkTarget_3035"
><B> Annotations Property </H3
><P 

></B>The <I>DataVariable</I> or <I>Object</I> that has <I>Annotation</I> data will add the <I>Annotations Property</I> as shown in <A href="#LinkTarget_3043" href="#">
Table 2</A>
. </P
><P 

><B>Table 2 &ndash; Annotations Property </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Use </P
></TD
><TD  
 valign="top"
><P 

>Data Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Standard Properties </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Annotations </P
></TD
><TD  
 valign="top"
><P 

>O </P
></TD
><TD  
 valign="top"
><P 

>Annotation </P
></TD
><TD  
 valign="top"
><P 

>The <I>Annotations</I> <I>Property</I> is used to indicate that <I>A</I><I>nnotation</I> data exists for the history collection exposed by a <I>HistoricalDataNode</I>. <I>Annotation</I> <I>DataType</I> is defined in<A href="#LinkTarget_4008" href="#">
5.5</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>Since it is not allowed for <I>Properties</I> to have <I>Properties</I>, the <I>Annotation</I> <I>Property</I> is only available for <I>DataVariables</I> or <I>Objects</I>. </P
><P 

>Not every <I>HistoricalDataNode</I> in the <I>AddressSpace </I>might contain <I>Annotation</I> data. The <I>Annotations</I> <I>Property</I> indicates whether or not a <I>HistoricalDataNode</I> supports <I>Annotations</I>. <I>Annotation</I> data is accessed using the standard <I>HistoryRead</I> functions. <I>Annotations</I> are modified, inserted or deleted using the standard <I>HistoryUpdate</I> functions.  </P
><P 

>As with all <I>HistoricalNodes</I>, modifications, deletions or additions of <I>Annotations</I> will raise the appropriate Historical Audit Event with the corresponding <I>NodeId</I>. </P
><H2 
 ID="LinkTarget_3084"
><B>5.2 HistoricalDataNodes </H2
><H3 
 ID="LinkTarget_3085"
> General </H3
><P 

></B>The Historical Data model defines additional <I>ObjectTypes and Objects</I>. These descriptions also include required use cases for <I>HistoricalDataNodes. </I></P
><H3 
 ID="LinkTarget_3087"
><B> HistoricalDataConfigurationType </H3
><P 

></B>The Historical Access Data model extends the standard type model by defining the <I>HistoricalDataConfigurationType.</I> This <I>Object</I> defines the general characteristics of a <I>Node </I>that defines the historical configuration of any <I>HistoricalDataNode</I> that is defined to contain history. It is formally defined in <A href="#LinkTarget_3100" href="#">
Table 3</A>
. </P
><P 

>All <I>Instances</I> of the <I>HistoricalDataConfigurationType</I> use the standard <I>BrowseName</I> as defined in <A href="#LinkTarget_3457" href="#">
Table 6</A>
. </P
><P 

><B>Table 3 &ndash; HistoricalDataConfigurationType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>HistoricalDataConfigurationType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>AggregateConfiguration </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
><TD  
 valign="top"
><P 

>AggregateConfigurationType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>AggregateFunctions </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
><TD  
 valign="top"
><P 

>FolderType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>Stepped </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>Definition </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxTimeInterval </P
></TD
><TD  
 valign="top"
><P 

>Duration </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MinTimeInterval </P
></TD
><TD  
 valign="top"
><P 

>Duration </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ExceptionDeviation </P
></TD
><TD  
 valign="top"
><P 

>Double </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ExceptionDeviationFormat </P
></TD
><TD  
 valign="top"
><P 

>Enum </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>StartOfArchive </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>StartOfOnlineArchive </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ServerTimestampSupported </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><I>AggregateConfiguration Object</I> represents the browse entry point for information on how the <I>Server</I> treats <I>Aggregate</I> specific functionality such as handling <I>Uncertain data</I>. This <I>Object</I> is required to be present even if it contains no <I>Aggregate</I> configuration <I>Objects</I>. <I>Aggregates</I> are defined in<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1">. </P
><P 

><I>AggregateFunctions </I>is an entry point to browse to all <I>Aggregate</I> capabilities supported by the <I>Server</I> for Historical Access. All <I>HistoryAggregates </I>supported by the <I>Server</I> should be able to be browsed starting from this <I>Object</I>. <I>Aggregates</I> are defined in <FONT size="+1">Part 13<FONT size="+1">.   </P
><P 

>The<I> Stepped Variable</I> specifies whether the historical data was collected in such a manner that it should be displayed as <I>SlopedInterpolation</I> (sloped line between points) or as <I>SteppedInterpolation</I> (vertically-connected horizontal lines between points) when <I>raw data</I> is examined. This <I>Property</I> also effects how some <I>Aggregates</I> are calculated. A value of True indicates the stepped interpolation mode. A value of False indicates <I>SlopedInterpolation</I> mode. The default value is False. </P
><P 

>The<I> Definition Variable</I> is a vendor-specific, human readable string that specifies how the value of this <I>HistoricalDataNode</I> is calculated. Definition is non-localized and will often contain an equation that can be parsed by certain <I>Clients</I>. </P
><P 

> Example: <I>Definition</I>::= &ldquo;(TempA &ndash; 25) + TempB&rdquo; </P
><P 

>The <I>MaxTimeInterval</I> <I>Variable</I> specifies the maximum interval between data points in the history repository regardless of their value change (see <A href="#LinkTarget_2066" href="#">
Part 3</A>
 for definition of <I>Duration</I>). </P
><P 

>The <I>MinTimeInterval</I> <I>Variable</I> specifies the minimum interval between data points in the history repository regardless of their value change (see <A href="#LinkTarget_2066" href="#">
Part 3</A>
 for definition of <I>Duration</I>). </P
><P 

>The <I>ExceptionDeviation</I> <I>Variable</I> specifies the minimum amount that the data for the <I>HistoricalDataNode</I> shall change in order for the change to be reported to the history database.  </P
><P 

>The <I>ExceptionDeviationFormat</I> <I>Variable</I> specifies how the ExceptionDeviation is determined. Its values are defined in <A href="#LinkTarget_3327" href="#">
Table 4</A>
. </P
><P 

>The <I>StartOfArchive</I> <I>Variable</I> specifies the date before which there is no data in the archive either online or offline. </P
><P 

>The <I>StartOfOnlineArchive</I> <I>Variable</I> specifies the date of the earliest data in the online archive.   </P
><P 

>The <I>ServerTimestampSupported</I> <I>Variable</I> indicates support for the <I>ServerTimestamp</I> capability.  A value of True indicates the <I>Server</I> supports <I>ServerTimestamps</I> in addition to <I>SourceTimestamp</I>.  The default is False.   </P
><P 

><B>Table 4 &ndash; ExceptionDeviationFormat Values </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Value </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>ABSOLUTE_VALUE_0 </P
></TD
><TD  
 valign="top"
><P 

>ExceptionDeviation is an absolute Value. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>PERCENT_OF_VALUE_1 </P
></TD
><TD  
 valign="top"
><P 

>ExceptionDeviation is a percentage of Value. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>PERCENT_OF_RANGE_2 </P
></TD
><TD  
 valign="top"
><P 

>ExceptionDeviation is a percentage of InstrumentRange (see <A href="#LinkTarget_2096" href="#">
Part 8</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>PERCENT_OF_EU_RANGE_3 </P
></TD
><TD  
 valign="top"
><P 

>ExceptionDeviation is a percentage of EURange (see <A href="#LinkTarget_2096" href="#">
Part 8</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UNKNOWN_4 </P
></TD
><TD  
 valign="top"
><P 

>ExceptionDeviation type is Unknown or not specified. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_3376"
><B> HasHistoricalConfiguration ReferenceType </H3
><P 

></B>This <I>ReferenceType</I> is a concrete <I>ReferenceType</I> that can be used directly. It is a subtype of the <I>Aggregates ReferenceType</I> and will be used to refer from a Historical <I>Node </I>to one or more <I>HistoricalDataConfigurationType Objects</I>.  </P
><P 

>The semantic indicates that the target <I>Node </I>is &ldquo;used&rdquo; by the source <I>Node</I> of the <I>Reference</I>. <A href="#LinkTarget_3393" href="#">
Figure 2</A>
 informally describes the location of this <I>ReferenceType</I> in the OPC UA hierarchy. Its representation in the <I>AddressSpace</I> is specified in <A href="#LinkTarget_3394" href="#">
Table 5</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>ReferencesHierarchicalReferencesNonHierarchicalReferencesHasHistoricalConfigurationHasChildAggregates</DIV
></P
><P 

><B>Figure 2 &ndash; ReferenceType hierarchy </P
><P 

>Table 5 &ndash; HasHistoricalConfiguration ReferenceType  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attributes </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>HasHistoricalConfiguration </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>InverseName </P
></TD
><TD  
 valign="top"
><P 

>HistoricalConfigurationOf </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Symmetric </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Comment </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>The subtype of Aggregates <I>ReferenceType</I> is defined in <A href="#LinkTarget_2078" href="#">
Part 5</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_3446"
><B> Historical Data Configuration Object </H3
><P 

></B>This <I>Object</I> is used as the browse entry point for information about <I>HistoricalDataNode</I> configuration. The content of this <I>Object</I> is already defined by its type definition in <A href="#LinkTarget_3100" href="#">
Table 3</A>
. It is formally defined in <A href="#LinkTarget_3457" href="#">
Table 6</A>
. If a <I>HistoricalDataNode </I>has configuration defined then one instance shall have a <I>BrowseName</I> of &lsquo;HA Configuration&rsquo;. Additional configurations may be defined with different <I>BrowseNames</I>. All Historical Configuration <I>Objects</I> shall be referenced using the <I>HasHistoricalConfiguration</I> <I>ReferenceType</I>. It is also highly recommended that display names are chosen that clearly describe the historical configuration e.g. &ldquo;1 Second Collection&rdquo;, &ldquo;Long Term Configuration&rdquo; etc. </P
><P 

><B>Table 6 &ndash; Historical Access configuration definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>HA Configuration </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>Node Class </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasTypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Object </P
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>HistoricalDataConfigurationType </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_3100" href="#">
Table 3</A>
  </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_3503"
><B> HistoricalDataNodes Address Space Model </H3
><P 

></B><I>HistoricalDataNode</I><I>s</I> are always a part of other <I>N</I><I>odes </I>in the <I>AddressSpace</I><I>.</I> They are never defined by themselves. A simple example of a container for <I>HistoricalDataNode</I><I>s</I> would be a &ldquo;Folder Object&rdquo;.  </P
><P 

><A href="#LinkTarget_3513" href="#">
Figure 3</A>
 illustrates the basic <I>AddressSpace</I> Model of a <I>DataVariable</I> that includes History.  </P
><P 

> <DIV class="Sect" 
 Alt=""
>Boiler_01 (Object)Pressure (Variable)AttributeValueDataTypeAccessLevelHistorizingInstance Type DefinitonsDefinitionAggregateConfigurationTypeMaxTimeIntervalMinTimeIntervalExceptionDeviationExceptionDeviationFormatAnnotationsHA ConfigurationHasHistoricalConfigurationHistoricalDataConfigurationTypeAggregateConfiguration</DIV
></P
><P 

><B>Figure 3 &ndash; Historical<I> </I>Variable<I> </I>with Historical Data Configuration and Annotations </P
><P 

></B>Each <I>HistoricalDataNode</I> with history shall have the <I>Historizing</I> <I>Attribute</I> (<FONT size="+1">see <A href="#LinkTarget_2066" href="#">
<FONT size="+1">Part 3</A>
<FONT size="+1"><I>)</I><FONT size="+1"> defined and may reference a <I>HistoricalAccessConfiguration Object</I>. In the case where the HistoricalDataNode is itself a <I>Property</I> then the <I>HistoricalDataNode</I> inherits the values from the Parent of the <I>Property</I>.  </P
><P 

>Not every <I>Variable</I> in the <I>AddressSpace </I>might contain history data. To see if history data is available, a <I>Client</I> will look for the HistoryRead/Write states in the <I>AccessLevel</I> <I>Attribute</I> (see <A href="#LinkTarget_2066" href="#">
Part 3</A>
 for details on use of this <I>Attribute</I>).<FONT size="+1"> </P
><P 

><A href="#LinkTarget_3513" href="#">
<FONT size="+1">Figure 3</A>
 only shows a subset of <I>Attributes</I> and <I>Properties</I>. Other <I>Attributes</I> that are defined for <I>Variables</I> in <A href="#LinkTarget_2066" href="#">
Part 3</A>
<FONT size="+1">,<FONT size="+1"> may also be available. </P
><H3 
 ID="LinkTarget_3535"
><B> Attributes </H3
><P 

></B>This part lists the <I>Attributes</I> of <I>Variables</I> that have particular importance for historical data. They are specified in detail in <A href="#LinkTarget_2066" href="#">
Part 3</A>
.  </P
><DL 

><DD 

>&#61623; AccessLevel </DD
><DD 

>&#61623; Historizing </DD
></DL
><H2 
 ID="LinkTarget_3547"
><B>5.3 HistoricalEventNodes </H2
><H3 
 ID="LinkTarget_3548"
> General </H3
><P 

></B>The Historical <I>Event</I> model defines additional <I>Properties</I>. These descriptions also include required use cases for <I>HistoricalEventNodes. </I></P
><P 

>Historical Access of <I>Events</I> uses an <I>EventFilter</I>. It is important to understand the differences between applying an <I>EventFilter</I> to current <I>Event</I> <I>Notifications</I>, and historical <I>Event</I> retrieval. </P
><P 

>In real time monitoring <I>Events</I> are received via <I>Notifications </I>when subscribing to an <I>EventNotifier</I>. The <I>EventFilter</I> provides the filtering and content selection of <I>Event</I> <I>Subscriptions</I>. If an <I>Event</I> <I>Notification</I> conforms to the filter defined by the <I>where</I> parameter of the <I>EventFilter</I>, then the <I>Notification</I> is sent to the <I>Client</I>. </P
><P 

>In historical <I>Event</I> retrieval the <I>EventFilter</I> represents the filtering and content selection used to describe what parameters of <I>Events</I> are available in history. These may or may not include all of the parameters of the real-time <I>Event</I>, i.e. not all fields available when the <I>Event</I> was generated may have been stored in history.  </P
><P 

>The <I>HistoricalEventFilter</I> may change over time so a <I>Client</I> may specify any field for any <I>EventType</I> in the <I>EventFilter</I>. If a field is not stored in the historical collection then the field is set to null when it is referenced in the <I>selectClause</I> or the <I>whereClause</I>.  </P
><H3 
 ID="LinkTarget_3555"
><B> HistoricalEventFilter Property </H3
><P 

></B>A <I>HistoricalEventNode</I> that has <I>Event</I> history available will provide the <I>Property</I>. This <I>Property</I> is formally defined in <A href="#LinkTarget_3562" href="#">
Table 7</A>
. </P
><P 

><B>Table 7 &ndash; Historical Events Properties </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Use </P
></TD
><TD  
 valign="top"
><P 

>Data Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Standard Properties </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HistoricalEventFilter </P
></TD
><TD  
 valign="top"
><P 

>M </P
></TD
><TD  
 valign="top"
><P 

>EventFilter  </P
></TD
><TD  
 valign="top"
><P 

>A filter used by the <I>Server</I> to determine which <I>HistoricalEventNode</I> fields are available in history. It may also include a where clause that indicates the types of <I>E</I><I>vents</I> or restrictions on the <I>E</I><I>vents</I> that are available via the <I>HistoricalEventNode</I><I>.</I><I> </I></P
><P 

>The <I>HistoricalEventFilter</I> <I>P</I><I>roper</I><I>t</I><I>y</I> can be used as a guideline for what <I>E</I><I>v</I><I>e</I><I>nt</I> fields the Historian is currently storing. But this field may have no bearing on what <I>Event</I> fields the Historian is capable of storing.  </P
></TD
></TR
></TABLE
><P 

><I> </I></P
><H3 
 ID="LinkTarget_3596"
><FONT size="+1"><B> HistoricalEventNodes Address Space Model </H3
><P 

></B><I>HistoricalEventNode</I><I>s</I> are <I>Objects</I> or <I>Views</I> in the <I>AddressSpace</I> that expose historical <I>Events</I>. These <I>Nodes</I> are identified via the <I>EventNotifier Attribute</I>, and provide some historical subset of the <I>Events</I> generated by the <I>Server</I>.  </P
><P 

>Each <I>HistoricalEventNode</I> is represented by an <I>Object</I> or View with a specific set of Attributes. The <I>HistoricalEventFilter Property</I> specifies the fields available in the history.  </P
><P 

>Not every <I>Object</I> or <I>View</I> in the <I>AddressSpace</I> may be a <I>HistoricalEventNode</I>. To qualify as <I>HistoricalEventNode</I><I>s</I>, a <I>Node</I> has to contain historical <I>E</I><I>vents</I>. To see if historical <I>E</I><I>vents</I> are available, a <I>Client</I> will look for the HistoryRead/Write states in the <I>E</I><I>ventNotifier Attribute</I>. <FONT size="+1">See <A href="#LinkTarget_2066" href="#">
<FONT size="+1">Part 3</A>
<FONT size="+1"> <FONT size="+1">for details on the use of this <I>Attribute. </I></P
><P 

><A href="#LinkTarget_3639" href="#">
Figure 4</A>
 illustrates the basic <I>AddressSpace</I> Model of an <I>Event </I>that includes History. </P
><P 

> <DIV class="Sect" 
 Alt=""
>Area_1 (Object)Instance Type DefinitonsHasNotifierHasEventSourceCondition TypeLimitAlarm TypeHasConditionHasNotifierStatusLevelLevelHasNotifierHasEventSourceHasEventSourceHasConditionBaseEvent TypeLimitAlarm TypeBoiler 2 (Object)AttributeEventNotifier -&gt;subscribToEvent=1EventNotifier -&gt;HistoryRead=1EventNotifier -&gt;HistoryWrite=1Boiler 1 (Object)AttributeEventNotifier -&gt;subscribToEvent=1EventNotifier -&gt;HistoryRead=1EventNotifier -&gt;HistoryWrite=1Valve 1 (Object)AttributeEventNotifier -&gt;subscribToEvent=1EventNotifier -&gt;HistoryRead=1EventNotifier -&gt;HistoryWrite=1HistoricalEventFilter</DIV
></P
><P 

><B>Figure 4 &ndash; Representation of an Event with History in the AddressSpace </P
><H3 
 ID="LinkTarget_3640"
> HistoricalEventNodes<I> </I>Attributes </H3
><P 

></B>This part lists the <I>Attributes</I> of <I>Objects</I> or <I>Views</I> that have particular importance for historical <I>Events</I>. They are specified in detail in <A href="#LinkTarget_2066" href="#">
Part 3</A>
. The following <I>Attributes</I> are particularly important for <I>HistoricalEventNode</I><I>s</I>.  </P
><DL 

><DD 

>&#61623; EventNotifier </DD
></DL
><P 

>The <I>EventNotifier Attribute</I> is used to indicate if the <I>Node</I> can be used to read and/or update historical <I>Events</I>.  </P
><H2 
 ID="LinkTarget_3655"
><B>5.4 Exposing supported functions and capabilities </H2
><H3 
 ID="LinkTarget_3656"
> General </H3
><P 

></B>OPC UA <I>Server</I><I>s</I> can support several different functionalities and capabilities. The following standard <I>Objects</I> are used to expose these capabilities in a common fashion, and there are several standard defined concepts that can be extended by vendors. The <I>Objects</I> are outlined in <A href="#LinkTarget_2060" href="#">
<FONT size="+1">Part 1</A>
<FONT size="+1">.  </P
><P 

> <DIV class="Sect" 
 Alt=""
>AggregateFunctions(Part 13 &ndash; Aggregates)HistoryServer Capabilities(Part 11 &ndash; Historical Access)Server Capabilities(Part 5 &ndash; Information Model)AccessHistoryDataCapabilityInsertDataCapabilityMaxReturnEventValuesAccessEventsCapabilityReplaceDataCapabilityUpdateCapabilityDeleteRawCapabilityDeleteAtTimeCapabilityMaxReturnDataValuesAggregateFunctions(Part 13 &ndash; Aggregates)&lt;Aggregates&gt;&lt;Aggregates&gt;&lt;Aggregates&gt;&lt;Aggregates&gt;&lt;Aggregates&gt;&lt;Aggregates&gt;</DIV
></P
><P 

><B>Figure 5 &ndash; Server and HistoryServer Capabilities </P
><H3 
 ID="LinkTarget_3687"
> HistoryServerCapabilitiesType </H3
><P 

></B>The <I>ServerCapabilitiesType Objects</I> for any OPC UA <I>Server</I> supporting Historical Access shall contain a <I>Reference</I> to a <I>HistoryServerCapabilitiesType</I> <I>Object</I>. </P
><P 

>The content of this <I>BaseObjectType</I> is already defined by its type definition in <A href="#LinkTarget_2078" href="#">
Part 5</A>
. The <I>Object </I>extensions are formally defined in <A href="#LinkTarget_3701" href="#">
Table 8</A>
. </P
><P 

>These properties are intended to inform a <I>Client</I> of the general capabilities of the <I>Server</I>. They do not guarantee that all capabilities will be available for all <I>Nodes</I>. For example not all <I>Nodes</I> will support <I>Events</I>, or in the case of an aggregating <I>Server</I> where underlying <I>Servers</I> may not support <I>Insert</I> or a particular <I>Aggregate</I>. In such cases the <I>HistoryServerCapabilities</I> <I>Property</I> would indicate the capability is supported, and the <I>Server</I> would return appropriate <I>StatusCodes</I> for situations where the capability does not apply. </P
><P 

><B>Table 8 &ndash; HistoryServerCapabilitiesType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>HistoryServerCapabilitiesType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>Browse Name  </P
></TD
><TD  
 valign="top"
><P 

>Data Type </P
></TD
><TD  
 valign="top"
><P 

>Type Definition </P
></TD
><TD  
 valign="top"
><P 

>ModelingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>AccessHistoryDataCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>AccessHistoryEventsCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxReturnDataValues </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxReturnEventValues </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InsertDataCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ReplaceDataCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>UpdateDataCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>DeleteRawCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>DeleteAtTimeCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InsertEventCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ReplaceEventCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>UpdateEventCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>DeleteEventCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InsertAnnotationsCapability </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>AggregateFunctions </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
><TD  
 valign="top"
><P 

>FolderType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>AggregateConfiguration </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
><TD  
 valign="top"
><P 

>AggregateConfigurationType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ServerTimestampSupported </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>All UA <I>Servers</I> that support Historical Access shall include the <I>HistoryServerCapabilities</I> as part of its <I>ServerCapabilities</I>.  </P
><P 

>The <I>AccessHistoryDataCapability</I> <I>Variable</I> defines if the <I>Server</I> supports access to historical data values. A value of True indicates the <I>Server</I> supports access to the history for <I>HistoricalNode</I><I>s</I>, a value of False indicates the <I>Server</I> does not support access to the history for <I>HistoricalN</I><I>ode</I><I>s</I>. The default value is False. At least one of <I>AccessHistoryDataCapability</I> or <I>Access</I><I>History</I><I>EventsCapability</I> shall have a value of True for the <I>Server</I> to be a valid OPC UA <I>Server</I> supporting Historical Access.  </P
><P 

>The <I>AccessHistoryEventCapability</I> <I>Variable</I> defines if the server supports access to historical <I>Events</I>. A value of True indicates the server supports access to the history of<I> Events</I>, a value of False indicates the <I>Server</I> does not support access to the history of <I>Events</I>. The default value is False. At least one of <I>AccessHistoryDataCapability</I> or <I>AccessHistoryEventsCapability</I> shall have a value of True for the <I>Server</I> to be a valid OPC UA <I>Server</I> supporting Historical Access. </P
><P 

>The <I>MaxReturnDataValues</I> <I>Variable</I> defines the maximum number of values that can be returned by the <I>Server</I> for each <I>HistoricalNode</I><I> </I>accessed during a request. A value of 0 indicates that the <I>Server</I> forces no limit on the number of values it can return. It is valid for a <I>Server</I> to limit the number of returned values and return a continuation point even if <I>MaxReturnValues</I> = 0. For example, it is possible that although the <I>Server</I> does not impose any restrictions, the underlying system may impose a limit that the <I>Server</I> is not aware of. The default value is 0. </P
><P 

>Similarily, the <I>MaxReturnEventValues</I> specifies the maximum number of <I>Events</I> that a <I>Server</I> can return for a <I>HistoricalEventNode</I>.  </P
><P 

>The <I>InsertDataCapability</I> <I>Variable</I> indicates support for the Insert capability. A value of True indicates the <I>Server</I> supports the capability to insert new data values in history, but not overwrite existing values. The default value is False. </P
><P 

>The <I>ReplaceDataCapability Variable</I> indicates support for the Replace capability. A value of True indicates the <I>Server</I> supports the capability to replace existing data values in history, but will not insert new values. The default value is False. </P
><P 

>The <I>UpdateDataCapability</I> <I>Variable</I> indicates support for the Update capability. A value of True indicates the <I>Server</I> supports the capability to insert new data values into history if none exists, and replace values that currently exist. The default value is False. </P
><P 

>The <I>DeleteRawCapability</I> <I>Variable</I> indicates support for the delete raw values capability. A value of True indicates the <I>Server</I> supports the capability to delete <I>raw data</I> values in history. The default value is False. </P
><P 

>The <I>DeleteAtTimeCapability</I> <I>Variable</I> indicates support for the delete at time capability. A value of True indicates the <I>Server</I> supports the capability to delete a data value at a specified time. The default value is False. </P
><P 

>The <I>InsertEventCapability</I> <I>Variable</I> indicates support for the Insert capability. A value of True indicates the <I>Server</I> supports the capability to insert new <I>Events</I> in history. An insert is not a replace. The default value is False. </P
><P 

>The <I>ReplaceEventCapability Variable</I> indicates support for the Replace capability. A value of True indicates the <I>Server</I> supports the capability to replace existing <I>Events </I>in history. A replace is not an insert. The default value is False. </P
><P 

>The <I>UpdateEventCapability</I> <I>Variable</I> indicates support for the Update capability. A value of True indicates the <I>Server</I> supports the capability to insert new <I>Events</I> into history if none exists, and replace values that currently exist. The default value is False. </P
><P 

>The <I>DeleteEventCapability</I> <I>Variable</I> indicates support for the deletion of <I>Events</I> capability. A value of True indicates the <I>Server</I> supports the capability to delete <I>Events</I> in history. The default value is False. </P
><P 

>The <I>InsertAnnotationCapability</I> <I>Variable</I> indicates support for <I>Annotations</I>. A value of True indicates the <I>Server</I> supports the capability to insert<I> Annotations</I>. Some <I>Servers</I> that support Inserting of <I>Annotations</I> will also support editing and deleting of <I>Annotations</I>. The default value is False. </P
><P 

><I>AggregateFunctions </I>is an entry point to browse to all <I>Aggregate</I> capabilities supported by the <I>Server</I> for Historical Access. All <I>HistoryAggregates </I>supported by the <I>Server</I> should be able to be browsed starting from this <I>Object</I>. <I>Aggregates</I> are defined in<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1">. If the <I>Server</I> does not support <I>Aggregates</I> the <I>Folder</I> is left empty. </P
><P 

><I>AggregateConfiguration Object</I> represents the browse entry point for information on how the <I>Server</I> treats <I>Aggregate</I> specific functionality such as handling <I>Uncertain data</I>. This <I>Object</I> is listed as optional for backward compatability, but it is required to be present if Aggregates are supported (via <I>Profiles</I>). <I>Aggregates</I> are defined in<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1">. </P
><P 

>The <I>ServerTimestampSupported</I> <I>Variable</I> indicates support for the <I>ServerTimestamp</I> capability.  A value of True indicates the <I>Server</I> supports <I>ServerTimestamps</I> in addition to <I>SourceTimestamp</I>.  The default is False.  This property is optional but it is expected all new <I>Servers</I> include this property. </P
><H2 
 ID="LinkTarget_4008"
><B>5.5 Annotation DataType </H2
><P 

></B>This <I>DataType</I> describes <I>Annotation</I> information for the history data items. Its elements are defined in <A href="#LinkTarget_4016" href="#">
Table 9</A>
. </P
><P 

><B>Table 9 &ndash; Annotation Structure </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Annotation </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> message </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

><I>Annotation</I> message or text. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> username </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>The user that added the <I>Annotation</I>, as supplied by the underlying system. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> annotationTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>The time the <I>Annotation</I> was added. This will probably be different than the <I>SourceTimestamp</I><I>.</I> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_4060"
><FONT size="+1"><B>5.6 Historical Audit Events </H2
><H3 
 ID="LinkTarget_4061"
> General </H3
><P 

></B><I>AuditEvents</I> are generated as a result of an action taken on the <I>Server</I> by a <I>Client</I> of the <I>Server</I>. For example, in response to a <I>Client</I> issuing a write to a <I>Variable</I>, the <I>Server</I> would generate an <I>AuditEvent</I> describing the <I>Variable</I> as the source and the user and <I>Client</I> <I>Session</I> as the initiators of the <I>Event</I>. Not all <I>Server</I><I>s</I> support auditing, but if a <I>Server</I> supports auditing then it shall support audit <I>Events</I> as described in <A href="#LinkTarget_4060" href="#">
5.6</A>
. <I>Profiles</I> (see Part 7) can be used to determine if a <I>Server</I> supports auditing. <I>Server</I><I>s</I> shall generate <I>E</I><I>vents</I> of the <I>AuditHistoryUpdateEventType</I> or a sub-type of this type for all invocations of the <I>HistoryUpdate</I> <I>Service</I> on any <I>HistoricalNode</I>. See <A href="#LinkTarget_2066" href="#">
Part 3</A>
 and <A href="#LinkTarget_2078" href="#">
Part 5</A>
 for details on the <I>AuditHistoryUpdateEventType </I>model<FONT size="+1">. <FONT size="+1">In the case where the <I>HistoryUpdate</I> <I>Service</I> is invoked to insert Historical <I>Events</I>, the <I>AuditHistoryEventUpdateEventType</I> <I>Event</I> shall include the EventId of the inserted <I>Event</I> and a description that indicates that the <I>Event</I> was inserted. In the case where the <I>HistoryUpdate</I> <I>Service</I> is invoked to delete records, the <I>AuditHistoryDeleteEventType</I> or one of its sub-types shall be generated. See <A href="#LinkTarget_5966" href="#">
6.7</A>
 for details on updating historical data or <I>Events</I>. </P
><P 

>In particular using the Delete raw or Delete modified functionality shall generate an <I>AuditHistoryRawModifyDeleteEventType Event</I> or a sub-type of it. Using the Delete at time functionality shall generate an <I>AuditHistoryAtTimeDeleteEventType Event</I> or a sub-type of it. Using the Delete <I>Event</I> functionality shall generate an <I>AuditHistoryEventDeleteEventType Event</I> or a sub-type of it. All other updates shall follow the guidelines provided in the <I>AuditHistoryUpdateEventType</I> model. </P
><H3 
 ID="LinkTarget_4204"
><B> AuditHistoryEventUpdateEventType </H3
><P 

></B>This is a subtype of AuditHistoryUpdateEventType and is used for categorization of History <I>Event</I> update related <I>Events</I>. This type follows all the behaviour of its parent type. Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_4211" href="#">
Table 10</A>
. </P
><P 

><B>Table 10 &ndash; AuditHistoryEventUpdateEventType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryEventUpdateEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditHistoryUpdateEventType</I> defined in Part 3, i.e. it has <I>HasProperty</I> <I>References</I> to the same <I>Nodes</I>.<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>UpdatedNode </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>PerformInsertReplace </P
></TD
><TD  
 valign="top"
><P 

>PerformUpdateType  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>Filter </P
></TD
><TD  
 valign="top"
><P 

>EventFilter </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>NewValues </P
></TD
><TD  
 valign="top"
><P 

>HistoryEventFieldList [ ] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OldValues </P
></TD
><TD  
 valign="top"
><P 

>HistoryEventFieldList [ ] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditHistoryUpdateEventType</I>. Their semantic is defined in <A href="#LinkTarget_2078" href="#">
Part 5</A>
.  </P
><P 

>The <I>UpdateNode</I> identifies the <I>Attribute</I> that was written on the <I>SourceNode</I>. </P
><P 

>The <I>PerformInsertReplace </I>enumeration reflects the parameter on the <I>Service</I> call. </P
><P 

>The <I>Filter</I> reflects the <I>Event</I> filter passed on the call to select the <I>Events</I> that are to be updated. </P
><P 

>The <I>NewValues</I> identify the value that was written to the <I>Event</I>.  </P
><P 

>The <I>OldValues</I> identify the value that the <I>Events</I> contained before the update. It is acceptable for a <I>Server</I> that does not have this information to report a null value. In the case of an insert it is expected to be a null value. </P
><P 

>Both the <I>NewValues</I> and the <I>OldValues</I> will contain <I>Events</I> with the appropriate fields, each with appropriately encoded values. </P
><H3 
 ID="LinkTarget_4334"
><B> AuditHistoryValueUpdateEventType </H3
><P 

></B>This is a subtype of <I>AuditHistoryUpdateEventType</I> and is used for categorization of history value update related <I>Events</I>. This type follows all the behaviour of its parent type. Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_4341" href="#">
Table 11</A>
. </P
><P 

><B>Table 11 &ndash; AuditHistoryValueUpdateEventType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryValueUpdateEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditHistoryUpdateEventType</I> defined in Part 3, i.e. it has <I>HasProperty</I> <I>References</I> to the same <I>Nodes</I>.<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>UpdatedNode </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>PerformInsertReplace </P
></TD
><TD  
 valign="top"
><P 

>PerformUpdateType </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>NewValues </P
></TD
><TD  
 valign="top"
><P 

>DataValue[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OldValues </P
></TD
><TD  
 valign="top"
><P 

>DataValue[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditHistoryUpdateEventType</I>. Their semantic is defined in <A href="#LinkTarget_2078" href="#">
Part 5</A>
.  </P
><P 

>The <I>UpdatedNode</I> identifies the <I>Attribute</I> that was written on the <I>SourceNode</I>. </P
><P 

>The <I>PerformInsertReplace </I>enumeration reflects the parameter on the <I>Service</I> call. </P
><P 

>The <I>NewValues</I> identify the value that was written to the <I>Event</I>.  </P
><P 

>The <I>OldValues</I> identify the value that the <I>Event</I> contained before the write. It is acceptable for a <I>Server</I> that does not have this information to report a null value. In the case of an insert it is expected to be a null value. </P
><P 

>Both the <I>NewValues</I> and the <I>OldValues</I> will contain a value in the <I>DataType</I> and encoding used for writing the value. </P
><H3 
 ID="LinkTarget_4447"
><B> AuditHistoryDeleteEventType </H3
><P 

></B>This is a subtype of <I>AuditHistoryUpdateEventType</I> and is used for categorization of history delete related <I>Events</I>. This type follows all the behaviour of its parent type. Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_4454" href="#">
Table 12</A>
. </P
><P 

><B>Table 12 &ndash; AuditHistoryDeleteEventType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryDeleteEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditHistoryUpdateEventType</I> defined in <A href="#LinkTarget_2066" href="#">
<FONT size="+1">Part 3</A>
<FONT size="+1">, i.e. it has <I>HasProperty</I> <I>References</I> to the same <I>Nodes</I>.<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>UpdatedNode </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasSubtype </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryRawModifyDeleteEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasSubtype </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryAtTimeDeleteEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasSubtype </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryEventDeleteEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditUpdateEventType</I>. Their semantic is defined in <A href="#LinkTarget_2078" href="#">
Part 5</A>
.  </P
><P 

>The <I>UpdatedNode property</I> identifies the <I>NodeId </I>that was used for the delete operation. </P
><H3 
 ID="LinkTarget_4562"
><B> AuditHistoryRawModifyDeleteEventType </H3
><P 

></B>This is a subtype of <I>AuditHistoryDeleteEventType</I> and is used for categorization of history delete related <I>Events</I>. This type follows all the behaviour of its parent type. Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_4569" href="#">
Table 13</A>
. </P
><P 

><B>Table 13 &ndash; AuditHistoryRawModifyDeleteEventType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryRawModifyDeleteEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditHistoryDeleteEventType</I> defined in <A href="#LinkTarget_4454" href="#">
Table 12</A>
, i.e. it has <I>HasProperty</I> <I>References</I> to the same <I>Nodes</I>.<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>IsDeleteModified </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>StartTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>EndTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OldValues </P
></TD
><TD  
 valign="top"
><P 

>DataValue[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditHistoryDeleteEventType</I>. Their semantic is defined in <A href="#LinkTarget_4447" href="#">
5.6.4</A>
.  </P
><P 

>The <I>isDeleteModified</I> reflects the isDeleteModified parameter of the call. </P
><P 

>The <I>StartTime</I> reflects the starting time parameter of the call.  </P
><P 

>The <I>EndTime</I> reflects the ending time parameter of the call.  </P
><P 

>The <I>OldValues</I> identify the value that history contained before the delete. A <I>Server</I> should report all deleted values. It is acceptable for a <I>Server</I> that does not have this information to report a null value. The <I>OldValues</I> will contain a value in the <I>DataType</I> and encoding used for writing the value. </P
><H3 
 ID="LinkTarget_4679"
><B> AuditHistoryAtTimeDeleteEventType </H3
><P 

></B>This is a subtype of <I>AuditHistoryDeleteEventType</I> and is used for categorization of history delete related <I>Events</I>. This type follows all the behaviour of its parent type. Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_4686" href="#">
Table 14</A>
. </P
><P 

><B>Table 14 &ndash; AuditHistoryAtTimeDeleteEventType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryAtTimeDeleteEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditHistoryDeleteEventType</I> defined in <A href="#LinkTarget_4454" href="#">
Table 12</A>
, i.e. it has <I>HasProperty</I> <I>References</I> to the same <I>Nodes</I>.<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ReqTimes </P
></TD
><TD  
 valign="top"
><P 

>UtcTime[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OldValues </P
></TD
><TD  
 valign="top"
><P 

>DataValues[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditHistoryDeleteEventType</I>. Their semantic is defined in <A href="#LinkTarget_4768" href="#">
5.6.7</A>
.  </P
><P 

>The <I>ReqTimes</I> reflect the request time parameter of the call.  </P
><P 

>The <I>OldValues</I> identifies the value that history contained before the delete. A <I>Server</I> should report all deleted values. It is acceptable for a <I>Server</I> that does not have this information to report a null value. The <I>OldValues</I> will contain a value in the <I>DataType</I> and encoding used for writing the value. </P
><H3 
 ID="LinkTarget_4768"
><B> AuditHistoryEventDeleteEventType </H3
><P 

></B>This is a subtype of <I>AuditHistoryDeleteEventType</I> and is used for categorization of history delete related <I>Events</I>. This type follows all the behaviour of its parent type. Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_4776" href="#">
Table 15</A>
. </P
><P 

><B>Table 15 &ndash; AuditHistoryEventDeleteEventType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AuditHistoryEventDeleteEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditHistoryDeleteEventType</I> defined in <A href="#LinkTarget_4454" href="#">
Table 12</A>
, i.e. it has <I>HasProperty</I> <I>References</I> to the same <I>Nodes</I>.<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>EventIds </P
></TD
><TD  
 valign="top"
><P 

>ByteString[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OldValues </P
></TD
><TD  
 valign="top"
><P 

>HistoryEventFieldList </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditHistoryDeleteEventType</I>. Their semantic is defined in <A href="#LinkTarget_4447" href="#">
5.6.4</A>
. </P
><P 

>The <I>EventIds</I> reflect the EventIds parameter of the call. </P
><P 

>The <I>OldValues</I> identify the value that history contained before the delete. A <I>Server</I> should report all deleted values. It is acceptable for a <I>Server</I> that does not have this information to report a null value. The <I>OldValues</I> will contain an <I>Event</I> with the appropriate fields, each with appropriately encoded values. </P
><H1 
 ID="LinkTarget_4856"
><FONT size="+1"><B>6 Historical Access specific usage of Services </H1
><H2 
 ID="LinkTarget_4857"
><FONT size="+1">6.1 General </H2
><P 

><A href="#LinkTarget_2072" href="#">
</B>Part 4</A>
 specifies all <I>Services</I> needed for OPC UA Historical Access. In particular: </P
><DL 

><DD 

>&#61623; The Browse Service Set or Query Service Set to detect <I>HistoricalNodes </I>and their configuration. </DD
><DD 

>&#61623; The <I>HistoryRead</I> and <I>HistoryUpdate </I>Services of the Attribute Service Set to read and update history of <I>HistoricalNode</I><I>s</I><I>.</I> </DD
></DL
><H2 
 ID="LinkTarget_4873"
><B>6.2 Historical Nodes StatusCodes </H2
><H3 
 ID="LinkTarget_4874"
> Overview </H3
><P 

></B>6.2 defines additional codes and rules that apply to the <I>StatusCode</I> when used for <I>HistoricalNodes</I>.  </P
><P 

>The general structure of the <I>StatusCode</I> is specified in <A href="#LinkTarget_2072" href="#">
Part 4</A>
. It includes a set of common operational result codes which also apply to historical data and/or <I>Events</I>. </P
><H3 
 ID="LinkTarget_4882"
><B> Operation level result codes </H3
><P 

></B>In OPC UA Historical Access the <I>StatusCode</I> is used to indicate the conditions under which a <I>Value</I> or <I>Event</I> was stored, and thereby can be used as an indicator of its usability. Due to the nature of historical data and/or <I>Events</I>, additional information beyond the basic quality and call result code needs to be conveyed to the <I>Client</I>, for example, whether the value is actually stored in the data repository, whether the result was <I>Interpolated</I>, whether all data inputs to a calculation were of good quality, etc.  </P
><P 

>In the following, <A href="#LinkTarget_4921" href="#">
Table 16</A>
 contains codes with <I>Bad</I> severity indicating a failure; <A href="#LinkTarget_5079" href="#">
Table 17</A>
 contains <I>G</I><I>ood</I> (success) codes.  </P
><P 

>It is important to note that these are the codes that are specific for OPC UA Historical Access and supplement the codes that apply to all types of data and are therefore defined in <A href="#LinkTarget_2072" href="#">
Part 4</A>
 , <A href="#LinkTarget_2096" href="#">
Part 8</A>
 and<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1">. </P
><P 

><B>Table 16 &ndash; Bad operation level result codes </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">Symbolic Id </P
></TH
><TH 
 valign="top"
><P 

>Description </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NoData </P
></TD
><TD  
 valign="top"
><P 

>No data exists for the requested time range or <I>E</I><I>vent</I> filter. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_BoundNotFound </P
></TD
><TD  
 valign="top"
><P 

>No data found to provide upper or lower bound value. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_BoundNotSupported </P
></TD
><TD  
 valign="top"
><P 

>Bounding Values are not applicable or the <I>Server</I> has reached its search limit and will not return a bound. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_DataLost </P
></TD
><TD  
 valign="top"
><P 

>Data is missing due to collection started/stopped/lost. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_DataUnavailable </P
></TD
><TD  
 valign="top"
><P 

>Expected data is unavailable for the requested time range due to an un-mounted volume, an off-line historical collection, or similar reason for temporary unavailability. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_EntryExists </P
></TD
><TD  
 valign="top"
><P 

>The data or <I>E</I><I>vent</I> was not successfully inserted because a matching entry exists. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_NoEntryExists </P
></TD
><TD  
 valign="top"
><P 

>The data or <I>E</I><I>vent</I> was not successfully updated because no matching entry exists. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_TimestampNotSupported </P
></TD
><TD  
 valign="top"
><P 

>The <I>Client</I><I> </I>requested history using a TimestampsToReturn the <I>Serve</I><I>r</I> does not support (i.e. requested <I>Server</I> Timestamp when <I>Server</I> only supports SourceTimestamp). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>One or more arguments are invalid or missing. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_AggregateListMismatch </P
></TD
><TD  
 valign="top"
><P 

>The list of Aggregates does not have the same length as the list of operations. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_AggregateConfigurationRejected </P
></TD
><TD  
 valign="top"
><P 

>The <I>Server</I> does not support the specified AggregateConfiguration for the Node. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_AggregateNotSupported </P
></TD
><TD  
 valign="top"
><P 

>The specified Aggregate is not valid for the specified <I>N</I><I>ode.</I> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_ArgumentsMissing </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the description of this result code. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_TypeDefinitionInvalid </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the description of this result code. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_SourceNodeIdInvalid </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the description of this result code. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_OutOfRange </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the description of this result code. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_NotSupported </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the description of this result code. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_IndexRangeInvalid </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the description of this result code. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_NotWriteable </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the description of this result code. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Table 17 &ndash; Good operation level result codes </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Symbolic Id </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Good_NoData </P
></TD
><TD  
 valign="top"
><P 

>No data exists for the requested time range or <I>E</I><I>vent</I> filter. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Good_EntryInserted </P
></TD
><TD  
 valign="top"
><P 

>The data or <I>E</I><I>vent</I> was successfully inserted into the historical database </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Good_EntryReplaced </P
></TD
><TD  
 valign="top"
><P 

>The data or <I>E</I><I>vent</I> field was successfully replaced in the historical database </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Good_DataIgnored </P
></TD
><TD  
 valign="top"
><P 

>The <I>Event</I> field was ignored and was not inserted into the historical database. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>It may be noted that there are both Good and Bad Status codes that deal with cases of no data or missing data. In general <I>Good_NoData</I> is used for cases where no data was found when performing a simple &lsquo;Read&rsquo; request. <I>Bad_NoData i</I>s used in cases where some action is requested on an interval and no data could be found. The distinction exists if users are attempting an action on a given interval where they would expect data to exist, or would like to be notified that the requested action could not be performed. </P
><P 

><I>Good_NoData</I> is returned for cases such as: </P
><DL 

><DD 

>&ndash; ReadEvents where <I>startTime</I>=<I>endTime</I> </DD
><DD 

>&ndash; ReadEvent data is requested and does not exist </DD
><DD 

>&ndash; ReadRaw where data is requested and does not exist </DD
></DL
><P 

><I>Bad_NoData</I> is returned for cases such as: </P
><DL 

><DD 

>&ndash; ReadEvent data is requested and underlying historian does not support the requested field </DD
><DD 

>&ndash; ReadProcessed where data is requested and does not exist </DD
><DD 

>&ndash; Any Delete requests where data does not exist </DD
></DL
><P 

>The above use cases are illustrative examples. Detailed explanations on when each status code is returned are found in <A href="#LinkTarget_5155" href="#">
6.4</A>
 and <A href="#LinkTarget_5966" href="#">
6.7</A>
 </P
><H3 
 ID="LinkTarget_5140"
><B> Semantics changed </H3
><P 

></B>The <I>StatusCode</I> in addition contains an informational bit called <I>Semantics Changed</I> (see <A href="#LinkTarget_2072" href="#">
Part 4</A>
). </P
><P 

>UA <I>Server</I><I>s</I> that implement OPC UA Historical Access should not set this bit; rather they should propagate the <I>StatusCode</I> which has been stored in the data repository. The <I>Client</I> should be aware that the returned data values may have this bit set. </P
><H2 
 ID="LinkTarget_5148"
><B>6.3 Continuation Points </H2
><P 

></B>The <I>continuationPoint</I> parameter in the <I>HistoryRead</I> <I>Service</I> is used to mark a point from which to continue the read if not all values could be returned in one response. The value is opaque for the <I>Client</I> and is only used to maintain the state information for the <I>Server</I> to continue from. For <I>HistoricalDataNode</I> requests, a <I>Server</I> may use the timestamp of the last returned data item if the timestamp is unique. This can reduce the need in the <I>Server</I> to store state information for the continuation point. </P
><P 

>The <I>Client</I> specifies the maximum number of results per operation in the request <I>Message</I>. A <I>Server</I> shall not return more than this number of results but it may return fewer results. The <I>Server</I> allocates a <I>ContinuationPoint</I> if there are more results to return. The <I>Server</I> may return fewer results due to buffer issues or other internal constraints. It may also be required to return a <I>continuationPoint</I> due to <I>HistoryRead</I> parameter constraints. If a request is taking a long time to calculate and is approaching the timeout time, the <I>Server</I> may return partial results with a continuation point. This may be done if the calculation is going to take more time than the <I>Client</I> timeout. In some cases it may take longer than the <I>Client</I> timeout to calculate even one result. Then the <I>Server</I> may return zero results with a continuation point that allows the <I>Server</I> to resume the calculation on the next <I>Client</I> read call.  For additional discussions regarding <I>ContinuationPoints</I> and <I>HistoryRead</I> please see the individual extensible <I>HistoryReadDetails</I> parameter in 6.4 </P
><P 

>If the <I>Client</I> specifies a <I>ContinuationPoint</I>, then the <I>HistoryReadDetails</I> parameter and the TimestampsToReturn parameter are ignored, because it does not make sense to request different parameters when continuing from a previous call. It is permissible to change the <I>dataEncoding</I> parameter with each request. </P
><P 

>If the <I>Client</I> specifies a <I>ContinuationPoint</I> that is no longer valid, then the <I>Server</I> shall return a <I>Bad</I>_<I>ContinuationPointInvalid </I>error.  </P
><P 

>If the <I>releaseContinuationPoints</I> parameter is set in the request the <I>Server</I> shall not return any data and shall release all <I>ContinuationPoints</I> passed in the request. If the <I>ContinuationPoint</I> for an operation is missing or invalid then the <I>StatusCode</I> for the operation shall be <I>Bad</I>_<I>ContinuationPointInvalid.</I>  </P
><H2 
 ID="LinkTarget_5155"
><B>6.4 HistoryReadDetails parameters </H2
><H3 
 ID="LinkTarget_5156"
> Overview </H3
><P 

></B>The <I>HistoryRead</I> <I>Service</I> defined in <A href="#LinkTarget_2072" href="#">
Part 4</A>
 can perform several different functions. The <I>HistoryReadDetails</I> parameter is an <I>Extensible Parameter</I> that specifies which function to perform and the details that are specific to that function. See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the definition of <I>Extensible</I> <I>Parameter</I>. <A href="#LinkTarget_5171" href="#">
Table 18</A>
 lists the symbolic names of the valid <I>Extensible Parameter</I> structures. Some structures will perform different functions based on the setting of its associated parameters. For simplicity a functionality of each structure is listed. For example, text such as &lsquo;using the Read modified functionality&rsquo; refers to the function the <I>HistoryRead</I> <I>Service</I> performs using the <I>Extensible</I> <I>Parameter</I> structure ReadRawModifiedDetails with the isReadModified Boolean parameter set to TRUE.  </P
><P 

><B>Table 18 &ndash; HistoryReadDetails parameterTypeIds  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Symbolic Name </P
></TD
><TD  
 valign="top"
><P 

>Functionality </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>ReadEventDetails  </P
></TD
><TD  
 valign="top"
><P 

>Read event </P
></TD
><TD  
 valign="top"
><P 

>This structure selects a set of <I>E</I><I>vents</I> from the history database by specifying a filter and a time domain for one or more <I>Objects </I>or<I> </I><I>Views</I>. See <A href="#LinkTarget_5279" href="#">
6.4.2.1</A>
. </P
><P 

>When this parameter is specified the <I>S</I><I>erve</I><I>r</I> returns a <I>HistoryEvent </I>structure for each operation (see <A href="#LinkTarget_5892" href="#">
6.5.4</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadRawModifiedDetails </P
></TD
><TD  
 valign="top"
><P 

>Read raw </P
></TD
><TD  
 valign="top"
><P 

>This structure selects a set of values from the history database by specifying a time domain for one or more <I>Variables</I>. See <A href="#LinkTarget_5369" href="#">
6.4.3.1</A>
. </P
><P 

>When this parameter is specified the <I>Server</I> returns a <I>HistoryData </I>structure for each operation (see <A href="#LinkTarget_5810" href="#">
6.5.2</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadRawModifiedDetails </P
></TD
><TD  
 valign="top"
><P 

>Read modified </P
></TD
><TD  
 valign="top"
><P 

>This parameter selects a set of <I>modified values</I> from the history database by specifying a time domain for one or more <I>Variables. </I>See <A href="#LinkTarget_5369" href="#">
6.4.3.1</A>
.  </P
><P 

>When this parameter is specified the <I>Server</I> returns a <I>HistoryModifiedData </I>structure for each operation (see <A href="#LinkTarget_5835" href="#">
6.5.3</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadProcessedDetails </P
></TD
><TD  
 valign="top"
><P 

>Read processed </P
></TD
><TD  
 valign="top"
><P 

>This structure selects a set of <I>Aggregate</I> values from the history database by specifying a time domain for one or more <I>Variables</I>. See <A href="#LinkTarget_5514" href="#">
6.4.4.1</A>
.  </P
><P 

>When this parameter is specified the <I>Server</I> returns a <I>HistoryData </I>structure for each operation (see <A href="#LinkTarget_5810" href="#">
6.5.2</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadAtTimeDetails  </P
></TD
><TD  
 valign="top"
><P 

>Read at time </P
></TD
><TD  
 valign="top"
><P 

>This structure selects a set of raw or interpolated values from the history database by specifying a series of timestamps for one or more <I>Variables</I>. See <A href="#LinkTarget_5737" href="#">
6.4.5.1</A>
.  </P
><P 

>When this parameter is specified the <I>Server</I> returns a <I>HistoryData </I>structure for each operation (see <A href="#LinkTarget_5810" href="#">
6.5.2</A>
). </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5277"
><FONT size="+1"><B> ReadEventDetails structure </H3
><H4 
 ID="LinkTarget_5279"
>6.4.2.1 ReadEventDetails structure details </H4
><P 

><A href="#LinkTarget_5289" href="#">
</B>Table 19</A>
 defines the <I>ReadEventDetails</I> structure. This parameter is only valid for <I>Objects</I> that have the <I>EventNotifier Attribute</I> set to TRUE (see <A href="#LinkTarget_2066" href="#">
Part 3</A>
). Two of the three parameters, <I>numValuesPerNode</I>, <I>startTime</I>, and <I>endTime</I> shall be specified.  </P
><P 

><B>Table 19 &ndash; ReadEventDetails </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>ReadEventDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>Specifies the details used to perform an <I>E</I><I>vent</I> history read. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> numValuesPerNode </P
></TD
><TD  
 valign="top"
><P 

>Counter </P
></TD
><TD  
 valign="top"
><P 

>The maximum number of values returned for any <I>Node </I>over the time range. If only one time is specified, the time range shall extend to return this number of values. The default value of 0 indicates that there is no maximum.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> startTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>Beginning of period to read. The default value of <I>DateTime.Min</I><I>Value</I> </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
></TD><TD  
 valign="top"
></TD><TD  
 valign="top"
><P 

>indicates that the <I>startTime</I> is Unspecified. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> endTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>End of period to read. The default value of <I>DateTime.Min</I><I>Value</I> indicates that the endTime is Unspecified. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Filter </P
></TD
><TD  
 valign="top"
><P 

>EventFilter </P
></TD
><TD  
 valign="top"
><P 

>A filter used by the <I>Server </I>to determine which HistoricalEventNode should be included. This parameter shall be specified and at least one <I>E</I><I>vent</I><I>F</I><I>ield</I> is required. The <I>EventF</I><I>ilter</I> parameter type is an <I>E</I><I>xten</I><I>sible </I><I>parameter </I>type. It is defined and used in the same manner as defined for monitored data items which are specified in <A href="#LinkTarget_2072" href="#">
Part 4</A>
. This filter also specifies the <I>E</I><I>ventField</I><I>s</I> that are to be returned as part of the request. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_5353"
><FONT size="+1"><B>6.4.2.2 Read Event functionality </H4
><P 

></B>The <I>ReadEventDetails</I> structure is used to read the <I>Events</I> from the history database for the specified time domain for one or more <I>HistoricalEventNodes</I>. The <I>Events</I> are filtered based on the filter structure provided. This filter includes the <I>EventFields</I> that are to be returned. For a complete description of filter refer to <A href="#LinkTarget_2072" href="#">
Part 4</A>
. </P
><P 

>The <I>startTime</I> and <I>endTime</I> are used to filter on the Time field for <I>Events</I>. </P
><P 

>The time domain of the request is defined by <I>startTime</I>, <I>endTime</I>, and numValuesPerNode; at least two of these shall be specified. If <I>endTime</I> is less than <I>startTime</I>, or <I>endTime</I> and <I>numValuesPerNode</I> alone are specified then the data will be returned in reverse order with later/newer data provided first as if time were flowing backward. If all three are specified then the call shall return up to numValuesPerNode results going from <I>startTime</I> to <I>endTime</I>, in either ascending or descending order depending on the relative values of <I>startTime</I> and <I>endTime</I>. If numValuesPerNode is 0 then all of the values in the range are returned. The default value is used to indicate when <I>startTime</I>, <I>endTime</I> or <I>numValuesPerNode</I> are not specified. </P
><P 

>It is specifically allowed for the <I>startTime</I> and the <I>endTime</I> to be identical. This allows the <I>Client</I> to request the <I>Event</I> at a single instance in time. When the <I>startTime</I> and <I>endTime</I> are identical then time is presumed to be flowing forward. If no data exists at the time specified then the <I>Server</I> shall return the <I>Good_NoData StatusCode</I>. </P
><P 

>If a <I>startTime</I>, <I>endTime</I> and <I>numValuesPerNode</I> are all provided, and if more than <I>numValuesPerNode</I> <I>Events</I> exist within that time range for a given <I>Node</I>, then only <I>numValuesPerNode</I> <I>Events</I> per <I>Node</I> are returned along with a <I>ContinuationPoint</I>. When a <I>ContinuationPoint</I> is returned, a <I>Client</I> wanting the next <I>numValuesPerNode</I> values should call <I>HistoryRead</I> again with the <I>continuationPoin</I>t set.  </P
><P 

>If the request takes a long time to process then the <I>Server</I> can return partial results with a <I>ContinuationPoint</I>. This might be done if the request is going to take more time than the <I>Client</I> timeout hint. It may take longer than the <I>Client</I> timeout hint to retrieve any results. In this case the <I>Server</I> may return zero results with a <I>ContinuationPoint</I>  that allows the <I>Server</I> to resume the calculation on the next <I>Client</I> <I>HistoryRead</I> call.  </P
><P 

>For an interval in which no data exists, the corresponding <I>StatusCode</I> shall be <I>Good_NoData</I>. </P
><P 

><I>The filter </I>parameter<I> </I>is used to determine which historical <I>Events</I> and their corresponding fields are returned. It is possible that the fields of an <I>EventType</I> are available for real time updating, but not available from the historian. In this case a <I>StatusCode</I> value will be returned for any <I>Event</I> field that cannot be returned. The value of the <I>StatusCode</I> shall be <I>Bad_NoData</I>. </P
><P 

>If the requested <I>TimestampsToReturn</I> is not supported for a <I>Node</I> then the operation shall return the <I>Bad_TimestampNotSupported StatusCode</I>. When reading <I>Events</I> this only applies to <I>Event</I> fields that are of type <I>DataValue</I>. </P
><H3 
 ID="LinkTarget_5368"
><B> ReadRawModifiedDetails structure </H3
><H4 
 ID="LinkTarget_5369"
>6.4.3.1 ReadRawModifiedDetails structure details </H4
><P 

><A href="#LinkTarget_5375" href="#">
</B>Table 20</A>
 defines the <I>ReadRawModifiedDetails</I> structure. Two of the three parameters, numValuesPerNode, <I>startTime</I>, and <I>endTime</I> shall be specified. </P
><P 

><B>Table 20 &ndash; ReadRawModifiedDetails </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">Name </P
></TH
><TH 
 valign="top"
><P 

>Type </P
></TH
><TH 
 valign="top"
><P 

>Description </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>ReadRawModifiedDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>Specifies the details used to perform a &ldquo;raw&rdquo; or &ldquo;modified&rdquo; history read. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> isReadModified </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>TRUE for Read Modified functionality, FALSE for Read Raw functionality. Default value is FALSE. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> startTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>Beginning of period to read. Set to default value of <I>DateTime.Min</I><I>Value </I>if no specific start time is specified.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> endTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>End of period to read. Set to default value of <I>DateTime.Min</I><I>Value</I> if no specific end time is specified.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> numValuesPerNode </P
></TD
><TD  
 valign="top"
><P 

>Counter </P
></TD
><TD  
 valign="top"
><P 

>The maximum number of values returned for any <I>Node </I>over the time range. If only one time is specified, the time range shall extend to return this number of values. The default value 0 indicates that there is no maximum.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> returnBounds </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>A Boolean parameter with the following values: </P
><P 

> TRUE Bounding Values should be returned </P
><P 

> FALSE All other cases  </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_5437"
><FONT size="+1"><B>6.4.3.2 Read raw functionality </H4
><P 

></B>When this structure is used for reading <I>Raw</I> Values (isReadModified is set to FALSE), it reads the values, qualities, and timestamps from the history database for the specified time domain for one or more <I>HistoricalDataNodes</I>. This parameter is intended for use by a <I>Client</I> that wants the actual data saved within the historian. The actual data may be compressed or may be all raw data collected for the item depending on the historian and the storage rules invoked when the item values were saved. When returnBounds is TRUE, the Bounding Values for the time domain are returned. The optional Bounding Values are provided to allow the <I>Client</I> to interpolate values for the start and end times when trending the actual data on a display.  </P
><P 

>The time domain of the request is defined by <I>startTime</I>, <I>endTime</I>, and <I>numValuesPerNode</I>; at least two of these shall be specified. If endTime is less than <I>startTime</I>, or <I>endTime</I> and <I>numValuesPerNode</I> alone are specified then the data will be returned in reverse order, with later data coming first as if time were flowing backward. If all three are specified then the call shall return up to <I>numValuesPerNode</I> results going from <I>startTime</I> to <I>endTime</I>, in either ascending or descending order depending on the relative values of <I>startTime</I> and <I>endTime</I>. If <I>numValuesPerNode</I> is 0, then all the values in the range are returned. A default value of <I>DateTime.MinValue</I> (see Part 6) is used to indicate when <I>startTime</I> or <I>endTime</I> is not specified. </P
><P 

>It is specifically allowed for the <I>startTime</I> and the <I>endTime</I> to be identical. This allows the <I>Client</I> to request just one value. When the <I>startTime</I> and <I>endTime</I> are identical then time is presumed to be flowing forward. It is specifically not allowed for the <I>Server</I> to return a <I>Bad_InvalidArgument</I><I> </I><I>StatusCode</I> if the requested time domain is outside of the <I>Server</I>'s range. Such a case shall be treated as an interval in which no data exists. </P
><P 

>If a <I>startTime</I>, <I>endTime</I> and <I>numValuesPerNode</I> are all provided and if more than <I>numValuesPerNode</I> values exist within that time range for a given <I>Node</I> then only <I>numValuesPerNode</I> values per <I>Node </I>are returned along with a <I>continuationPoint</I>. When <I>a </I><I>continuationPoint</I> is returned, a <I>Client</I> wanting the next numValuesPerNode values should call ReadRaw again with the <I>continuationPoint</I> set.  </P
><P 

>If the request takes a long time to process then the <I>Server</I> can return partial results with a <I>ContinuationPoint</I>. This might be done if the request is going to take more time than the <I>Client</I> timeout hint. It may take longer than the <I>Client</I> timeout hint to retrieve any results. In this case the <I>Server</I> may return zero results with a <I>ContinuationPoint</I>  that allows the <I>Server</I> to resume the calculation on the next <I>Client</I> <I>HistoryRead</I> call.  </P
><P 

>If Bounding Values are requested and a non-zero <I>numValuesPerNode</I> was specified then any Bounding Values returned are included in the <I>numValuesPerNode</I> count. If <I>numValuesPerNode</I> is 1 then only the start bound is returned (the end bound if the reverse order is needed). If <I>numValuesPerNode</I> is 2 then the start bound and the first data point are </P
><P 

>returned (the end bound if reverse order is needed). When Bounding Values are requested and no bounding value is found then the corresponding <I>StatusCode</I> entry will be set to <I>Bad_BoundNotFound</I>, a timestamp equal to the start or end time as appropriate, and a value of null. How far back or forward to look in history for Bounding Values is <I>Server</I> dependent. </P
><P 

>For an interval in which no data exists, if Bounding Values are not requested, then the corresponding <I>StatusCode</I> shall be <I>Good</I><I>_</I><I>NoData</I>. If Bounding Values are requested and one or both exist, then the result code returned is Success and the bounding value(s) are returned.  </P
><P 

>For cases where there are multiple values for a given timestamp, all but the most recent are considered to be <I>Modified values</I> and the <I>Server</I> shall return the most recent value. If the <I>Server</I> returns a value which hides other values at a timestamp then it shall set the <I>ExtraData</I> bit in the <I>StatusCode</I> associated with that value. If the <I>Server</I> contains additional information regarding a value then the ExtraData bit shall also be set. It indicates that ModifiedValues are available for retrieval, see <A href="#LinkTarget_5488" href="#">
6.4.3.3</A>
. </P
><P 

>If the requested TimestampsToReturn is not supported for a <I>Node</I>, the operation shall return the <I>Bad_TimestampNotSupported StatusCode</I>. </P
><H4 
 ID="LinkTarget_5488"
><B>6.4.3.3 Read modified functionality </H4
><P 

></B>When this structure is used for reading <I>Modified</I> Values (isReadModified is set to TRUE), it reads the modified values, <I>StatusCodes</I>, timestamps, modification type, the user identifier, and the timestamp of the modification from the history database for the specified time domain for one or more <I>HistoricalDataNodes</I>. If there are multiple replaced values the <I>Server</I> shall return all of them. The updateType specifies what value is returned in the modification record. If the updateType is INSERT the value is the new value that was inserted. If the updateType is anything else the value is the old value that was changed. See <A href="#LinkTarget_6005" href="#">
6.8</A>
 <I>HistoryUpdateDetails</I> parameter for details on what updateTypes are available. </P
><P 

>The purpose of this function is to read values from history that have been <I>Modified.</I> The returnBounds parameter shall be set to FALSE for this case, otherwise the <I>Server</I> returns a <I>Bad_InvalidArgument </I><I>StatusC</I><I>ode</I>. </P
><P 

>The domain of the request is defined by <I>startTime</I>, <I>endTime</I>, and <I>numValuesPerNode</I>; at least two of these shall be specified. If endTime is less than <I>startTime</I>, or <I>endTime</I> and <I>numValuesPerNode</I> alone are specified, then the data shall be returned in reverse order with the later data coming first. If all three are specified then the call shall return up to numValuesPerNode results going from StartTime to <I>EndTime</I>, in either ascending or descending order depending on the relative values of <I>StartTime</I> and <I>EndTime</I>. If more than <I>numValuesPerNode</I> values exist within that time range for a given <I>Node </I>then only <I>numValuesPerNode</I> values per <I>Node </I>are returned along with a <I>continuationPoint</I>. When <I>a </I><I>continuationPoint</I> is returned, a <I>Client</I> wanting the next <I>numValuesPerNode</I> values should call <I>ReadRaw</I> again with the <I>continuationPoint</I> set. If <I>numValuesPerNode</I> is 0 then all of the values in the range are returned. If the <I>Server</I> cannot return all <I>modified values</I> for a given timestamp in a single response then it shall return modified values with the same timestamp in subsequent calls. </P
><P 

>If the request takes a long time to process then the <I>Server</I> can return partial results with a <I>ContinuationPoint</I>. This might be done if the request is going to take more time than the <I>Client</I> timeout hint. It may take longer than the <I>Client</I> timeout hint to retrieve any results. In this case the <I>Server</I> may return zero results with a <I>ContinuationPoint</I>  that allows the <I>Server</I> to resume the calculation on the next <I>Client</I> <I>HistoryRead</I> call.  </P
><P 

>If a value has been modified multiple times then all values for the time are returned. This means that a timestamp can appear in the array more than once. The order of the returned values with the same timestamp should be from the most recent to oldest modification timestamp, if <I>startTime</I> is less than or equal to <I>endTime</I>. If <I>endTime</I> is less than <I>startTime</I>, then the order of the returned values will be from the oldest modification timestamp to the most recent. It is <I>Server</I> dependent whether multiple modifications are kept or only the most recent.  </P
><P 

>A <I>Server</I> does not have to create a modification record for data when it is first added to the historical collection. If it does then it shall set the ExtraData bit and the <I>Client</I> can read the modification record using a ReadModified call. If the data is subsequently modified the <I>Server</I> shall create a second modification record which is returned along with the original modification record whenever a <I>Client</I> uses the ReadModified call if the <I>Server</I> supports multiple modification records per timestamp. </P
><P 

>If the requested TimestampsToReturn is not supported for a <I>Node</I> then the operation shall return the <I>Bad_TimestampNotSupported StatusCode</I>. </P
><H3 
 ID="LinkTarget_5513"
><B> ReadProcessedDetails structure  </H3
><H4 
 ID="LinkTarget_5514"
>6.4.4.1 ReadProcessedDetails structure details </H4
><P 

><A href="#LinkTarget_5520" href="#">
</B>Table 21</A>
 defines the structure of the ReadProcessedDetails structure.  </P
><P 

><B>Table 21 &ndash; ReadProcessedDetails </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>ReadProcessedDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>Specifies the details used to perform a &ldquo;processed&rdquo; history read. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> startTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>Beginning of period to read.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> endTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>End of period to read.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> ProcessingInterval </P
></TD
><TD  
 valign="top"
><P 

>Duration </P
></TD
><TD  
 valign="top"
><P 

>Interval between returned <I>Aggregate</I> values. The value 0 indicates that there is no <I>Processing</I><I>Interval</I> defined. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> aggregateType[] </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId </I>of the HistoryAggregate object that indicates the list of <I>Aggregate</I><I>s </I>to be used when retrieving the processed history. See <FONT size="+1">Part 13<FONT size="+1"> for details. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> aggregateConfiguration </P
></TD
><TD  
 valign="top"
><P 

>Aggregate </P
><P 

>Configuration </P
></TD
><TD  
 valign="top"
><P 

><I>Aggregate</I> configuration structure. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>         useSeverCapabilitiesDefaults </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>As described in <A href="#LinkTarget_2072" href="#">
Part 4</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>  TreatUncertainAsBad </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>As described in<A href="#LinkTarget_2102" href="#">
 Part 13</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>  PercentDataBad </P
></TD
><TD  
 valign="top"
><P 

>UInt8 </P
></TD
><TD  
 valign="top"
><P 

>As described in<A href="#LinkTarget_2102" href="#">
 Part 13</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>  PercentDataGood </P
></TD
><TD  
 valign="top"
><P 

>UInt8 </P
></TD
><TD  
 valign="top"
><P 

>As described in<A href="#LinkTarget_2102" href="#">
 Part 13</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>  UseSlopedExtrapolation </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>As described in<A href="#LinkTarget_2102" href="#">
 Part 13</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">See<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1"> for details on possible <I>NodeId</I> values for the <I>aggregateType</I> parameter.  </P
><H4 
 ID="LinkTarget_5651"
><B>6.4.4.2 Read processed functionality </H4
><P 

></B>This structure is used to compute <I>Aggregate</I> values, qualities, and timestamps from data in the history database for the specified time domain for one or more <I>HistoricalDataNodes</I>. The time domain is divided into intervals of duration <I>ProcessingInterval</I>. The specified <I>Aggregate </I>Type is calculated for each interval<I> </I>beginning with <I>startTime</I> by using the data within the next <I>ProcessingInterval</I>. </P
><P 

>For example, this function can provide hourly statistics such as Maximum, Minimum, and Average for each item during the specified time domain when <I>ProcessingInterva</I>l is 1 hour. </P
><P 

>The domain of the request is defined by <I>startTime</I>, <I>endTime</I>, and <I>ProcessingInterval</I>. All three shall be specified. If <I>endTime</I> is less than <I>startTime</I> then the data shall be returned in reverse order with the later data coming first. If <I>startTime</I> and <I>endTime</I> are the same then the <I>Server</I> shall return <I>Bad_InvalidArgument</I> as there is no meaningful way to interpret such a case. If the <I>ProcessingInteva</I><I>l</I> is specified as 0 then <I>Aggregates</I> shall be calculated using one interval starting at <I>startTime</I> and ending at <I>endTime</I>.  </P
><P 

>The aggregateType[] parameter allows a <I>Client</I> to request multiple <I>Aggregate</I> calculations per requested NodeId. If multiple <I>Aggregates</I> are requested then a corresponding number of entries are required in the NodesToRead array.  </P
><P 

>For example, to request Min <I>Aggregate</I> for <I>NodeId </I>FIC101, FIC102, and both Min and Max <I>Aggregates</I> for <I>NodeId </I>FIC103 would require <I>NodeId </I>FIC103 to appear twice in the NodesToRead array request parameter. </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">aggregateType[] </P
></TD
><TD  
 valign="top"
><P 

>NodesToRead[] </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Min </P
></TD
><TD  
 valign="top"
><P 

> FIC101 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Min </P
></TD
><TD  
 valign="top"
><P 

> FIC102 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Min </P
></TD
><TD  
 valign="top"
><P 

> FIC103 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Max </P
></TD
><TD  
 valign="top"
><P 

> FIC103 </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">If the array of <I>Aggregates</I> does not match the array of <I>NodesToRead</I> then the <I>Server</I> shall return a <I>StatusCode</I> of <I>Bad_AggregateListMismatch</I><I>.</I><I> </I> </P
><P 

>The aggregateConfiguration parameter allows a <I>Client</I> to override the <I>Aggregate</I> configuration settings supplied by the AggregateConfiguration <I>Object</I> on a per call basis. See<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1"> for more information on <I>Aggregate</I> configurations. If the <I>Server</I> does not support the ability to override the <I>Aggregate</I> configuration settings then it shall return a <I>StatusCode</I> of <I>Bad_</I> <I>AggregateConfigurationRejected</I><I>.</I><I> </I>If the <I>Aggregate</I> is not valid for the <I>N</I><I>ode</I> then the <I>StatusCode</I> shall be <I>Bad_AggregateNotSupported.</I> </P
><P 

>The values used in computing the <I>Aggregate</I> for each interval shall include any value that falls exactly on the timestamp at the beginning of the interval, but shall not include any value that falls directly on the timestamp ending the interval. Thus, each value shall be included only once in the calculation. If the time domain is in reverse order then we consider the later timestamp to be the one beginning the subinterval, and the earlier timestamp to be the one ending it. Note that this means that simply swapping the start and end times will not result in getting the same values back in reverse order as the intervals<I> </I>being requested in the two cases are not the same. </P
><P 

>If an <I>Aggregate</I> is taking a long time to calculate then the <I>Server</I> can return partial results with a continuation point. This might be done if the calculation is going to take more time than the <I>Client</I> timeout hint. In some cases it may take longer than the <I>Client</I> timeout hint to calculate even one <I>Aggregate</I> result. Then the <I>Server</I> may return zero results with a continuation point that allows the <I>Server</I> to resume the calculation on the next <I>C</I><I>lient</I> read call. </P
><P 

>Refer to<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1"> for handling of <I>Aggregate</I> specific cases. </P
><H3 
 ID="LinkTarget_5736"
><B> ReadAtTimeDetails structure </H3
><H4 
 ID="LinkTarget_5737"
>6.4.5.1 ReadAtTimeDetails structure details </H4
><P 

><A href="#LinkTarget_5743" href="#">
</B>Table 22</A>
 defines the ReadAtTimeDetails structure.  </P
><P 

><B>Table 22 &ndash; ReadAtTimeDetails </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>ReadAtTimeDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>Specifies the details used to perform an &ldquo;at time&rdquo; history read. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> reqTimes [] </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>The entries define the specific timestamps for which values are to be read.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> useSimpleBounds </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>Use SimpleBounds to determine the value at the specific timestamp. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_5778"
><FONT size="+1"><B>6.4.5.2 Read at time functionality </H4
><P 

></B>The ReadAtTimeDetails structure reads the values and qualities from the history database for the specified timestamps for one or more <I>HistoricalDataNodes</I>. This function is intended to provide values to correlate with other values with a known timestamp. For example, a <I>Client</I> may need to read the values of sensors when lab samples were collected. </P
><P 

>The order of the values and qualities returned shall match the order of the timestamps supplied in the request. </P
><P 

>When no value exists for a specified timestamp, a value shall be <I>Interpolated</I> from the surrounding values to represent the value at the specified timestamp. The interpolation will follow the same rules as the standard <I>Interpolated</I> <I>Aggregate</I> as outlined in<A href="#LinkTarget_2102" href="#">
 <FONT size="+1">Part 13</A>
<FONT size="+1">. </P
><P 

>If the useSimpleBounds flag is True and Interpolation is required then <I>simple bounding values</I> will be used to calculate the data value.  If useSimpleBounds is False and Interpolation is required then <I>interpolated bounding values</I> will be used to calculate the data value.  See<A href="#LinkTarget_2102" href="#">
<FONT size="+1"> Part 13</A>
<FONT size="+1"> for the definition of <I>simple bounding values</I> and <I>interpolated bounding values</I>. </P
><P 

>If a value is found for the specified timestamp, then the <I>Server</I> will set the <I>StatusCode</I><I> </I><I>InfoBits</I> to be <I>Raw</I>. If the value is <I>Interpolated</I> from the surrounding values, then the <I>Server</I> will set the <I>StatusCode InfoBits</I> to be <I>Interpolated.</I>  </P
><P 

>If the read request is taking a long time to calculate then the <I>Server</I> may return zero results with a <I>C</I><I>ontinuation</I><I>P</I><I>oint</I> that allows the <I>Server</I> to resume the calculation on the next <I>Client</I> <I>HistoryR</I><I>ead</I> call. </P
><P 

>If the requested TimestampsToReturn is not supported for a <I>Node</I>, then the operation shall return the <I>Bad_TimestampNotSupported StatusCode</I>. </P
><H2 
 ID="LinkTarget_5802"
><B>6.5 HistoryData parameters returned </H2
><H3 
 ID="LinkTarget_5803"
> Overview </H3
><P 

></B>The <I>HistoryRead</I> <I>Service</I> returns different types of data depending on whether the request asked for the value <I>Attribute</I> of a <I>Node </I>or the history <I>Events</I> of a <I>Node</I>. The historyData is an <I>Extensible Parameter</I> whose structure depends on the functions to perform for the <I>HistoryReadDetails</I> parameter. See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for details on <I>Extensible Parameters</I>.  </P
><H3 
 ID="LinkTarget_5810"
><B> HistoryData type </H3
><P 

><A href="#LinkTarget_5816" href="#">
</B>Table 23</A>
 defines the structure of the <I>HistoryData</I> used for the data to return in a <I>HistoryRead</I>. </P
><P 

><B>Table 23 &ndash; HistoryData Details </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>dataValues[] </P
></TD
><TD  
 valign="top"
><P 

>DataValue </P
></TD
><TD  
 valign="top"
><P 

>An array of values of history data for the <I>N</I><I>ode</I>. The size of the array depends on the requested data parameters. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5835"
><FONT size="+1"><B> HistoryModifiedData type </H3
><P 

><A href="#LinkTarget_5841" href="#">
</B>Table 24</A>
 defines the structure of the <I>HistoryModifiedData</I> used for the data to return in a <I>HistoryRead </I>when IsReadModified = True. </P
><P 

><B>Table 24 &ndash; HistoryModifiedData Details </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>dataValues[] </P
></TD
><TD  
 valign="top"
><P 

>DataValue </P
></TD
><TD  
 valign="top"
><P 

>An array of values of history data for the <I>N</I><I>ode</I>. The size of the array depends on the requested data parameters. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>modificationInfos[] </P
></TD
><TD  
 valign="top"
><P 

>ModificationInfo </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Username </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>The name of the user that made the modification. Support for this field is optional. A null shall be returned if it is not defined. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> modificationTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>The time the modification was made. Support for this field is optional. A null shall be returned if it is not defined. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> updateType </P
></TD
><TD  
 valign="top"
><P 

>HistoryUpdateType </P
></TD
><TD  
 valign="top"
><P 

>The modification type for the item. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5892"
><FONT size="+1"><B> HistoryEvent type </H3
><P 

><A href="#LinkTarget_5900" href="#">
</B>Table 25</A>
 defines the HistoryEvent parameter used for Historical <I>Event</I> reads. </P
><P 

>The HistoryEvent defines a table structure that is used to return <I>Event</I> fields to a <I>Historical Read</I>. The structure is in the form of a table consisting of one or more <I>Events</I>, each containing an array of one or more fields. The selection and order of the fields returned for each <I>Event</I> are identical to the selected parameter of the <I>EventFilter</I>. </P
><P 

><B>Table 25 &ndash; HistoryEvent Details </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Events [] </P
></TD
><TD  
 valign="top"
><P 

>HistoryEventFieldList </P
></TD
><TD  
 valign="top"
><P 

>The list of <I>Events</I> being delivered. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> eventFields [] </P
></TD
><TD  
 valign="top"
><P 

>BaseDataType </P
></TD
><TD  
 valign="top"
><P 

>List of selected <I>Event</I> fields. This will be a one-to-one match with the fields selected in the <I>EventFilter</I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_5927"
><FONT size="+1"><B>6.6 HistoryUpdateType Enumeration </H2
><P 

><A href="#LinkTarget_5933" href="#">
</B>Table 26</A>
 defines the HistoryUpdate enumeration. </P
><P 

><B>Table 26 &ndash; HistoryUpdateType Enumeration </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>INSERT_1 </P
></TD
><TD  
 valign="top"
><P 

>Data was inserted. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>REPLACE_2 </P
></TD
><TD  
 valign="top"
><P 

>Data was replaced. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UPDATE_3 </P
></TD
><TD  
 valign="top"
><P 

>Data was inserted or replaced. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DELETE_4 </P
></TD
><TD  
 valign="top"
><P 

>Data was deleted. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_5966"
><B>6.7 PerformUpdateType Enumeration </H2
><P 

><A href="#LinkTarget_5972" href="#">
</B>Table 27</A>
 defines the PerformUpdateType enumeration. </P
><P 

><B>Table 27 &ndash; PerformUpdateType Enumeration </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>INSERT_1 </P
></TD
><TD  
 valign="top"
><P 

>Data was inserted. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>REPLACE_2 </P
></TD
><TD  
 valign="top"
><P 

>Data was replaced. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UPDATE_3 </P
></TD
><TD  
 valign="top"
><P 

>Data was inserted or replaced. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DELETE_4 </P
></TD
><TD  
 valign="top"
><P 

>Data was deleted. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_6005"
><B>6.8 HistoryUpdateDetails parameter </H2
><H3 
 ID="LinkTarget_6006"
> Overview </H3
><P 

></B>The <I>HistoryUpdate</I> <I>Service</I> defined in <A href="#LinkTarget_2072" href="#">
Part 4</A>
 can perform several different functions. The <I>historyUpdateDetails</I> parameter is an <I>Extensible Parameter</I> that specifies which function to perform and the details that are specific to that function. See <A href="#LinkTarget_2072" href="#">
Part 4</A>
 for the definition of <I>Extensible</I> <I>Parameter</I>. <A href="#LinkTarget_6022" href="#">
Table 28</A>
 lists the symbolic names of the valid <I>Extensible</I> <I>Parameter</I> structures. Some structures will perform different functions based on the setting of its associated parameters. For simplicity a functionality of each structure is listed. For example text such as &lsquo;using the Replace data functionality&rsquo; refers to the function the <I>HistoryUpdate</I> <I>Service</I> performs using the <I>Extensible</I> <I>Parameter</I> structure <I>UpdateDataDetails</I> with the performInsertReplace enumeration parameter set to REPLACE_2. </P
><P 

><B>Table 28 &ndash; HistoryUpdateDetails parameter TypeIds </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Symbolic Name </P
></TD
><TD  
 valign="top"
><P 

>Functionality </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>UpdateDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Insert data </P
></TD
><TD  
 valign="top"
><P 

>This function inserts new values into the history database at the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>.  </P
><P 

>The <I>Variable</I>&rsquo;s value is represented by a composite value defined by the <I>DataValue</I> data type.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Replace data </P
></TD
><TD  
 valign="top"
><P 

>This function replaces existing values into the history database at the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>. </P
><P 

>The <I>Variable</I>&rsquo;s value is represented by a composite value defined by the <I>DataValue</I> data type. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Update data </P
></TD
><TD  
 valign="top"
><P 

>This function inserts or replaces values into the history database at the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>.  </P
><P 

>The <I>Variable</I>&rsquo;s value is represented by a composite value defined by the <I>DataValue</I> data type. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateStructureDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Insert data </P
></TD
><TD  
 valign="top"
><P 

>This function inserts new <I>Structure</I><I>d History</I><I> </I><I>Data</I> or <I>Annotations</I> into the history database at the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>.  </P
><P 

>The <I>Variable</I>&rsquo;s value is represented by a composite value defined by the <I>DataValue</I> data type.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateStructureDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Replace data </P
></TD
><TD  
 valign="top"
><P 

>This function replaces existing <I>Structure</I><I>d History</I><I> </I><I>Data</I> or <I>Annotations</I> into the history database at the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>. </P
><P 

>The <I>Variable</I>&rsquo;s value is represented by a composite value defined by the <I>DataValue</I> data type. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateStructureDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Update data </P
></TD
><TD  
 valign="top"
><P 

>This function inserts or replaces <I>Structure</I><I>d History</I><I> </I><I>Data</I> or <I>Annotations</I> into the history database at the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>. </P
><P 

>The <I>Variable</I>&rsquo;s value is represented by a composite value defined by the <I>DataValue</I> data type. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateStructureDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Remove data </P
></TD
><TD  
 valign="top"
><P 

>This function removes <I>Structure</I><I>d History</I><I> </I><I>Data</I> or <I>Ann</I><I>otations</I> from the history database at the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>. </P
><P 

>The <I>Variable</I>&rsquo;s value is represented by a composite value defined by the <I>DataValue</I> data type. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateEventDetails  </P
></TD
><TD  
 valign="top"
><P 

>Insert events </P
></TD
><TD  
 valign="top"
><P 

>This function inserts new <I>Events</I> into the history database for one or more <I>HistoricalEventNode</I><I>s</I>.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateEventDetails  </P
></TD
><TD  
 valign="top"
><P 

>Replace events </P
></TD
><TD  
 valign="top"
><P 

>This function replaces values of fields in existing <I>Events</I> into the history database for one or more <I>HistoricalEventNode</I><I>s</I>.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UpdateEventDetails  </P
></TD
><TD  
 valign="top"
><P 

>Update events </P
></TD
><TD  
 valign="top"
><P 

>This function inserts new <I>E</I><I>vents</I> or replaces existing <I>Events</I> in the history database for one or more <I>HistoricalEventNode</I><I>s</I>.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DeleteRawModifiedDetails  </P
></TD
><TD  
 valign="top"
><P 

>Delete raw </P
></TD
><TD  
 valign="top"
><P 

>This function deletes all values from the history database for the specified time domain for one or more <I>HistoricalDataNode</I><I>s</I>.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DeleteRawModifiedDetails  </P
></TD
><TD  
 valign="top"
><P 

>Delete modified </P
></TD
><TD  
 valign="top"
><P 

>Some historians may store multiple values at the same Timestamp. This function will delete specified values and qualities for the specified timestamp for one or more <I>HistoricalDataNode</I><I>s</I>.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DeleteAtTimeDetails </P
></TD
><TD  
 valign="top"
><P 

>Delete at time </P
></TD
><TD  
 valign="top"
><P 

>This function deletes all values in the history database for the specified timestamps for one or more <I>HistoricalDataNode</I><I>s</I>.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DeleteEventDetails </P
></TD
><TD  
 valign="top"
><P 

>Delete event </P
></TD
><TD  
 valign="top"
><P 

>This function deletes <I>Events</I> from the history database for the specified filter for one or more <I>HistoricalEventNode</I><I>s</I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The <I>HistoryUpdate</I> <I>Service</I> is used to update or delete both <I>DataValues</I> and <I>Events</I>. For simplicity the term &ldquo;entry&rdquo; will be used to mean either <I>DataValue</I> or <I>Event</I> depending on the context in which it is used. Auditing requirements for History <I>Services</I> are described in <A href="#LinkTarget_2072" href="#">
Part 4</A>
. This description assumes the user issuing the request and the <I>Server</I> that is processing the request support the capability to update entries. See <A href="#LinkTarget_2066" href="#">
Part 3</A>
 for a description of <I>Attributes</I> that expose the support of Historical Updates. </P
><P 

>If the <I>HistoryUpdate</I> <I>Service</I> is called with both <I>DataValues</I> and <I>Events</I> in the same call the <I>Server</I> operational limits <I>MaxNodesPerHistoryUpdateData</I> and<I> </I></P
><P 

><I>MaxNodesPerHistoryUpdateEvents</I> (See <A href="#LinkTarget_2078" href="#">
<FONT size="+1">Part 5</A>
<FONT size="+1">) may be ignored.  The <I>Server</I> may return the service result code <I>Bad_TooManyOperations</I> if it is not able to handle the combination of <I>DataValues</I> and <I>Events</I>.  It is recommended to call the <I>HistoryUpdate</I> <I>Service</I> twice, once with <I>DataValues</I> and then with<I> Events</I>. </P
><H3 
 ID="LinkTarget_6171"
><B> UpdateDataDetails structure </H3
><H4 
 ID="LinkTarget_6172"
>6.8.2.1 UpdateDataDetails structure details </H4
><P 

><A href="#LinkTarget_6178" href="#">
</B>Table 29</A>
 defines the UpdateDataDetails structure.  </P
><P 

><B>Table 29 &ndash; UpdateDataDetails  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>UpdateDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>The details for insert, replace, and insert/replace history updates.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> nodeId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Node id of the <I>Object</I> to be updated. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> performInsertReplace </P
></TD
><TD  
 valign="top"
><P 

>PerformUpdateType </P
></TD
><TD  
 valign="top"
><P 

>Value determines which action of insert, replace, or update is performed.  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><B>Value </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>INSERT_1 </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_6262" href="#">
6.8.2.2</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>REPLACE_2 </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_6266" href="#">
6.8.2.3</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UPDATE_3 </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_6269" href="#">
6.8.2.4</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"> updateValues[] </P
></TD
><TD  
 valign="top"
><P 

>DataValue </P
></TD
><TD  
 valign="top"
><P 

>New values to be inserted or to replace. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_6262"
><FONT size="+1"><B>6.8.2.2 Insert data functionality </H4
><P 

></B>Setting performInsertReplace = INSERT_1 inserts entries into the history database at the specified timestamps for one or more <I>HistoricalDataNodes</I>. If an entry exists at the specified timestamp, then the new entry shall not be inserted; instead the <I>StatusCode</I> shall indicate <I>Bad_EntryExists</I>. </P
><P 

>This function is intended to insert new entries at the specified timestamps, e.g., the insertion of lab data to reflect the time of data collection. </P
><P 

>If the <I>Time</I> does not fall within range that can be stored then the related <I>operationResults entry </I>shall indicate <I>Bad_OutOfRange. </I> </P
><H4 
 ID="LinkTarget_6266"
><B>6.8.2.3 Replace data functionality </H4
><P 

></B>Setting performInsertReplace = REPLACE_2 replaces entries in the history database at the specified timestamps for one or more <I>HistoricalDataNodes</I>. If no entry exists at the specified timestamp, then the new entry shall not be inserted; otherwise the <I>StatusCode</I> shall indicate <I>Bad_NoEntryExists</I>. </P
><P 

>This function is intended to replace existing entries at the specified timestamp, e.g., correct lab data that was improperly processed, but inserted into the history database. </P
><H4 
 ID="LinkTarget_6269"
><B>6.8.2.4 Update data functionality </H4
><P 

></B>Setting performInsertReplace = UPDATE_3 inserts or replaces entries in the history database for the specified timestamps for one or more <I>HistoricalDataNodes</I>. If the item has an entry at the specified timestamp, then the new entry will replace the old one. If there is no entry at that timestamp, then the function will insert the new data.  </P
><P 

>A <I>Server</I> can create a <I>modified value</I> for a value being replaced or inserted (see <A href="#LinkTarget_2201" href="#">
3.1.6</A>
) however it is not required. </P
><P 

>This function is intended to unconditionally insert/replace values and qualities, e.g., correction of values for bad sensors. </P
><P 

><I>Good</I> as a <I>StatusCode</I> for an individual entry is allowed when the <I>Server</I> is unable to say whether there was already a value at that timestamp. If the <I>Server</I> can determine whether the </P
><P 

>new entry replaces an entry that was already there, then it should use <I>Good</I><I>_</I><I>Entry</I><I>Inserted</I> or <I>Good</I><I>_</I><I>Entry</I><I>Replaced</I> to return that information. </P
><P 

>If the <I>Time</I> does not fall within range that can be stored then the related <I>operationResults entry </I>shall indicate <I>Bad_OutOfRange. </I> </P
><H3 
 ID="LinkTarget_6288"
><B> UpdateStructureDataDetails structure </H3
><H4 
 ID="LinkTarget_6289"
>6.8.3.1 UpdateStructureDataDetails structure details </H4
><P 

><A href="#LinkTarget_6178" href="#">
</B>Table 29</A>
 defines the UpdateStructureDataDetails structure.  </P
><P 

><B>Table 30 &ndash; UpdateStructureDataDetails  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>UpdateStructureDataDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>The details for data history updates.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> nodeId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Node id of the <I>Object</I> to be updated. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> performInsertReplace </P
></TD
><TD  
 valign="top"
><P 

>PerformUpdateType </P
></TD
><TD  
 valign="top"
><P 

>Value determines which action of insert, replace, or update is performed.  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><B>Value </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>INSERT_1 </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_6394" href="#">
6.8.3.3</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>REPLACE_2 </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_6398" href="#">
6.8.3.4</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UPDATE_3 </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_6401" href="#">
6.8.3.5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>REMOVE_4 </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_6407" href="#">
6.8.3.6</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"> updateValue[] </P
></TD
><TD  
 valign="top"
><P 

>DataValue </P
></TD
><TD  
 valign="top"
><P 

>New values to be inserted, replaced or removed. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_6391"
><FONT size="+1"><B>6.8.3.2 Specfied Uniqueness of Structured History Data </H4
><P 

></B>S<I>tructured History Data </I>provides metadata describing an entry in the history database. The <I>Server</I> shall define what uniqueness means for each <I>Structured History Data</I> structure type. For example, a <I>Server</I> may only allow one <I>Annotation</I> per timestamp which means the timestamp is the unique key for the structure<I>.</I><I> </I>Another <I>Server</I> may allow <I>Annotations</I> to exist per user, so a combination of a username and timestamp  may be used as the unique key for the structure. In 6.8.3.3, 6.8.3.4, 6.8.3.5, and 6.8.3.6 the terms &lsquo;<I>Structured </I><I>History</I><I> </I><I>Data</I> exists&rsquo; and &lsquo;at the specified parameters&rsquo; means a matching entry has been found at the specified timestamp using the <I>Server&rsquo;s</I> criteria for uniqueness. </P
><P 

>In the case where the Client wishes to Replace a parameter that is part of the uniqueness criteria, then the resulting StatusCode would be <I>Bad_NoEntryExists</I>.  The Client shall Remove the existing structure and then Insert the new structure. </P
><H4 
 ID="LinkTarget_6394"
><B>6.8.3.3 Insert functionality </H4
><P 

></B>Setting performInsertReplace = INSERT_1 inserts <I>Structured History Data</I> such as <I>Annotations </I>into the history database at the specified parameters for one or more <I>Properties</I> of <I>HistoricalDataNodes. </I></P
><P 

>If a <I>Structured History Data</I> entry already exists at the specified parameters the <I>StatusCode</I> shall indicate <I>Bad_EntryExists</I>.  </P
><P 

>If the <I>Time</I> does not fall within range that can be stored then the related <I>operationResults entry </I>shall indicate <I>Bad_OutOfRange. </I> </P
><H4 
 ID="LinkTarget_6398"
><B>6.8.3.4 Replace functionality </H4
><P 

></B>Setting performInsertReplace = REPLACE_2 replaces <I>Structured History Data</I> such as <I>Annotations</I> in the history database at the specified parameters for one or more <I>Properties</I> of <I>HistoricalDataNodes. </I></P
><P 

>If a <I>Structured History Data </I>entry does not already exist at the specified parameters, then the <I>StatusCode</I> shall indicate <I>Bad_NoEntryExists</I>. </P
><H4 
 ID="LinkTarget_6401"
><B>6.8.3.5 Update functionality </H4
><P 

></B>Setting performInsertReplace = UPDATE_3 inserts or replaces <I>Structured History Data</I> such as <I>Annotations</I> in the history database at the specified parameters for one or more <I>Properties</I> of <I>HistoricalDataNodes. </I></P
><P 

>If a <I>Structure History Data</I> entry already exists at the specified parameters then it is deleted and the value provided by the <I>Client</I> is inserted. If no existing entry exists then the new entry is inserted. </P
><P 

>If an existing entry was replaced successfully then the <I>StatusCode</I> shall be <I>Good_Ent</I><I>ryReplaced. </I>If a new entry was created the <I>StatusCode</I> shall be <I>Good_EntryInserted. </I>If the <I>Server</I> cannot determine whether it replaced or inserted an entry then the <I>StatusCode</I> shall be <FONT size="+1"><I>Good.</I><I> </I></P
><P 

><FONT size="+1">If the <I>Time</I> does not fall within range that can be stored then the related <I>operationResults entry </I>shall indicate <I>Bad_OutOfRange. </I> </P
><H4 
 ID="LinkTarget_6407"
><B>6.8.3.6 Remove functionality </H4
><P 

></B>Setting performInsertReplace = REMOVE_4 removes <I>Structured History Data</I> such as <I>Annotations</I> from the history database at the specified parameters for one or more <I>Properties</I> of <I>HistoricalDataNodes. </I></P
><P 

>If a <I>Structure History Data</I> entry exists at the specified parameters it is deleted. If <I>Structured History Data </I>does not already exist at the specified parameters, then the <I>StatusCode</I> shall indicate <I>Bad_NoEntryExists</I>. </P
><H3 
 ID="LinkTarget_6410"
><B> UpdateEventDetails structure </H3
><H4 
 ID="LinkTarget_6411"
>6.8.4.1 UpdateEventDetails structure detail </H4
><P 

><A href="#LinkTarget_6417" href="#">
</B>Table 31</A>
 defines the UpdateEventDetails structure.  </P
><P 

><B>Table 31 &ndash; UpdateEventDetails  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>UpdateEventDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>The details for insert, replace, and insert/replace history <I>E</I><I>vent</I> updates.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> nodeId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Node id of the<I> </I><I>Object</I><I> </I>to be updated. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> performInsertReplace </P
></TD
><TD  
 valign="top"
><P 

>PerformUpdateType </P
></TD
><TD  
 valign="top"
><P 

>Value determines which action of insert, replace, or update is performed.  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><B>Value </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>INSERT_1 </P
></TD
><TD  
 valign="top"
><P 

>Perform Insert<I> </I><I>E</I><I>vent</I> (see <A href="#LinkTarget_6514" href="#">
6.8.4.2</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>REPLACE_2 </P
></TD
><TD  
 valign="top"
><P 

>Perform Replace <I>E</I><I>vent</I> (see <A href="#LinkTarget_6523" href="#">
6.8.4.3</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>UPDATE_3 </P
></TD
><TD  
 valign="top"
><P 

>Perform Update <I>E</I><I>vent</I> (see <A href="#LinkTarget_6528" href="#">
6.8.4.4</A>
). </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">     filter </P
></TD
><TD  
 valign="top"
><P 

>EventFilter </P
></TD
><TD  
 valign="top"
><P 

>If the history of <I>Notification</I> conforms to the <I>EventFilter</I>, the history of the <I>Notification</I> is updated. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>     eventData[] </P
></TD
><TD  
 valign="top"
><P 

>HistoryEventFieldList </P
></TD
><TD  
 valign="top"
><P 

>List of <I>Event</I> <I>Notification</I><I>s</I> to be inserted or updated (see <A href="#LinkTarget_5892" href="#">
6.5.4</A>
 for HistoryEventFieldList definition).  </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_6514"
><FONT size="+1"><B>6.8.4.2 Insert event functionality </H4
><P 

></B>This function is intended to insert new entries, e.g., backfilling of historical <I>Events</I>. </P
><P 

>Setting performInsertReplace = INSERT_1 inserts entries into the <I>Event</I> history database for one or more <I>HistoricalEventNodes</I>. The <I>whereClause</I> parameter of the <I>EventFilter</I> shall be empty.  The <I>SelectClause</I> shall as a minimum provide the following Event fields: <I>EventType</I> and Time. It is also recommended that the <I>SourceNode</I> and the <I>SourceName</I> fields are provided. If one of the required fields is not provided then the <I>statusCode</I> shall indicate <I>Bad_ArgumentsMissing</I>.  If the historian does not support archiving the specified <I>EventType</I> then the <I>statusCode</I> shall indicate <I>Bad_TypeDefinitionInvalid</I>. If the <I>SourceNode</I> is not a valid </P
><P 

>source for <I>Events</I> then the related <I>operationResults entry </I>shall indicate <I>Bad_SourceNodeIdInvalid. </I>If the <I>Time</I> does not fall within range that can be stored then the related <I>operationResults entry </I>shall indicate <I>Bad_OutOfRange. </I>If the <I>selectClause</I> does not include fields which are mandatory for the <I>EventType </I>then the<I> statusCode</I> shall indicate <I>Bad_ArgumentsMissing. </I>If the <I>selectClause</I> specifies fields which are not valid for the <I>EventType</I> or cannot be saved by the historian then the related <I>operationResults entry </I>shall indicate <I>Good_DataIgnored</I>. Additional information about the ignored fields shall be provided through <I>DiagnosticInformation</I> related to the <I>operationResults</I>. The symbolicId contains the index of each ignored field separated with a space and the localizedText contains the symbolic names of the ignored fields. </P
><P 

>The <I>EventId</I> is a <I>Server</I> generated opaque value and a <I>Client</I> cannot assume that it knows how to create valid <I>EventIds</I>. A <I>Server</I> shall be able to generate an appropriate default value for the<I> </I><I>EventId</I> field. If a <I>Client</I> does specify the <I>EventId</I> in the <I>selectClause</I> and it matches an existing <I>Event</I> then the <I>s</I><I>tatusCode</I> shall indicate <I>Bad_EntryExists</I>. A <I>Client</I> shall use a <I>HistoryRead</I> to discover any automatically generated <I>EventIds</I>.<I> </I> </P
><P 

>If any errors occur while processing individual fields then the related o<I>perationResults entry </I>shall indicate <I>Bad_InvalidArgument</I> and the invalid fields shall be indicated in the <I>DiagnosticInformation</I> related to the <I>operationResults entry</I>.  </P
><P 

>The <I>IndexRange</I> parameter of the <I>SimpleAttributeOperand</I> is not valid for insert operations and the <I>StatusCode </I>shall specify Bad_<I>IndexRangeInvalid </I>if one is specified. </P
><P 

>A <I>Client</I> may instruct the <I>Se</I><I>rver</I> to choose a suitable default value for a field by specifying a value of null. If the <I>Server</I> is not able to select a suitable default then the corresponding entry in the operationResults array for the affected <I>Event</I> shall be <I>Bad</I>_<I>InvalidArgument</I>. </P
><H4 
 ID="LinkTarget_6523"
><B>6.8.4.3 Replace event functionality </H4
><P 

></B>This function is intended to replace fields in existing <I>Event</I> entries, e.g., correct <I>Event</I> data that contained incorrect data due to a bad sensor.  </P
><P 

>Setting performInsertReplace = REPLACE_2 replaces entries in the <I>Event</I> history database for the specified <I>EventIds</I> for one or more <I>HistoricalEventNodes</I>. The <I>SelectClause</I> parameter of the <I>EventFilter</I> shall specify the <I>EventId</I> <I>Property</I> and the <I>eventData</I> shall contain the <I>EventId</I> which will be used to find the <I>Event</I> to be replaced. If no entry exists matching the specified <I>EventId</I> then no replace operation will be performed; instead the <I>operationResults</I> <I>entry</I> for the <I>eventData</I> entry shall indicate <I>Bad_NoEntryExists</I>. The <I>whereClause</I> parameter of the <I>EventFilter</I> shall be empty. </P
><P 

>If the <I>selectClause</I> specifies fields which are not valid for the <I>EventType</I> or cannot be saved or changed by the historian then the <I>operationResults entry</I> for the affected <I>Event</I> shall indicate <I>Good_DataIgnored</I>. Additional information about the ignored fields shall be provided through <I>DiagnosticInformation</I> related to the <I>operationResults</I>. The symbolicId contains the index of each ignored field separated with a space and the localizedText contains the symbolic names of the ignored fields.  </P
><P 

>If fatal errors occur while processing individual fields then the <I>operationResults</I> <I>entry</I> for the affected Event shall indicate <I>Bad_InvalidArgument </I>and the invalid fields shall be indicated in the <I>DiagnosticInformation</I> related to the <I>operationResults entry</I>.<I> </I> </P
><H4 
 ID="LinkTarget_6528"
><B>6.8.4.4 Update event functionality </H4
><P 

></B>This function is intended to unconditionally insert/replace <I>Events</I>, e.g., synchronizing a backup <I>Event</I> database.  </P
><P 

>Setting performInsertReplace = UPDATE_3 inserts or replaces entries in the <I>Event</I> history database for the specified filter for one or more <I>HistoricalEventNodes</I>. </P
><P 

>The <I>Server</I> will, based on its own criteria, attempt to determine if the <I>E</I><I>vent</I> already exists; if it does exist then the <I>E</I><I>vent</I> will be deleted and the new <I>E</I><I>vent</I> will be inserted (retaining the <I>E</I><I>ventId</I>). If the <I>EventID</I> was provided then the <I>EventID</I> will be used to determine if the <I>E</I><I>vent</I> </P
><P 

>already exists. If the <I>Event</I> does not exist then a new <I>Event</I> will be inserted, including the generation of a new <I>EventId</I>.  </P
><P 

>All of the restrictions, behaviours, and errors specified for the Insert functionality (see <A href="#LinkTarget_6514" href="#">
6.8.4.2</A>
) also apply to this function.  </P
><P 

>If an existing <I>Event</I> entry was replaced successfully then the related <I>operationResults entry </I>shall be <I>Good_EntryReplaced. </I>If a new <I>Event</I> entry was created then the related <I>operationResult</I><I>s </I><I>entry</I> shall be <I>Good_EntryInserted. </I>If the <I>Server</I> cannot determine whether it replaced or inserted an entry then the related <I>operationResults </I><I>entry</I><I> </I>shall be <I>Good.</I> </P
><H3 
 ID="LinkTarget_6541"
><B> DeleteRawModifiedDetails structure </H3
><H4 
 ID="LinkTarget_6542"
>6.8.5.1 DeleteRawModifiedDetails structure detail </H4
><P 

><A href="#LinkTarget_6548" href="#">
</B>Table 32</A>
 defines the DeleteRawModifiedDetails structure. </P
><P 

><B>Table 32 &ndash; DeleteRawModifiedDetails </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>DeleteRawModifiedDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>The details for delete raw and delete modified history updates. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> nodeId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Node id of the <I>Object</I> for which history values are to be deleted. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> isDeleteModified </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>TRUE for MODIFIED, FALSE for RAW. Default value is FALSE. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> startTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>Beginning of period to be deleted. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> endTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>End of period to be deleted. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">These functions are intended to be used to delete data that has been accidentally entered into the history database, e.g., deletion of data from a source with incorrect timestamps. Both <I>startTime</I> and <I>endTime</I> shall be defined. The <I>startTime</I> shall be less than the <I>endTime</I>, and values up to but not including the <I>endTime</I> are deleted. It is permissible for <I>startTime</I> = <I>endTime</I>, in which case the value at the <I>startTime</I> is deleted. </P
><H4 
 ID="LinkTarget_6608"
><B>6.8.5.2 Delete raw functionality </H4
><P 

></B>Setting isDeleteModified = FALSE deletes all <I>Raw</I> entries from the history database for the specified time domain for one or more <I>HistoricalDataNodes</I>.  </P
><P 

>If no data is found in the time range for a particular <I>HistoricalDataNode</I>, then the <I>StatusCode</I> for that item is <I>Bad_NoData</I><FONT size="+1"><I>.</I><FONT size="+1"> </P
><H4 
 ID="LinkTarget_6611"
><B>6.8.5.3 Delete modified functionality </H4
><P 

></B>Setting isDeleteModified = TRUE deletes all <I>Modified</I> entries from the history database for the specified time domain for one or more <I>HistoricalDataNodes</I>.  </P
><P 

>If no data is found in the time range for a particular HistoricalDataNode, then the <I>StatusCode</I> for that item is <I>Bad</I><I>_</I><I>NoData</I><FONT size="+1"><I>.</I><FONT size="+1"> </P
><H3 
 ID="LinkTarget_6614"
><B> DeleteAtTimeDetails structure </H3
><H4 
 ID="LinkTarget_6615"
>6.8.6.1 DeleteAtTimeDetails structure detail </H4
><P 

><A href="#LinkTarget_6621" href="#">
</B>Table 33</A>
 defines the structure of the DeleteAtTimeDetails structure.  </P
><P 

><B>Table 33 &ndash; DeleteAtTimeDetails </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>DeleteAtTimeDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>The details for delete raw history updates  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> nodeId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Node id of the <I>Object</I> for which history values are to be deleted. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> reqTimes [] </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>The entries define the specific timestamps for which values are to be deleted.  </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_6657"
><B>6.8.6.2 Delete at time functionality </H4
><P 

></B>The DeleteAtTime structure deletes all raw values, modified values, and annotations in the history database for the specified timestamps for one or more <I>HistoricalDataNodes</I>.  </P
><P 

>This parameter is intended to be used to delete specific data from the history database, e.g., lab data that is incorrect and cannot be correctly reproduced. </P
><H3 
 ID="LinkTarget_6660"
><B> DeleteEventDetails structure </H3
><H4 
 ID="LinkTarget_6661"
>6.8.7.1 DeleteEventDetails structure detail </H4
><P 

><A href="#LinkTarget_6667" href="#">
</B>Table 34</A>
 defines the structure of the DeleteEventDetails structure.  </P
><P 

><B>Table 34 &ndash; DeleteEventDetails </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>DeleteEventDetails </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

>The details for delete raw and delete modified history updates. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>  nodeId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Node id of the <I>Object</I> for which history values are to be deleted. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> eventId[] </P
></TD
><TD  
 valign="top"
><P 

>ByteString </P
></TD
><TD  
 valign="top"
><P 

>An array of <I>EventIds</I> to identify which <I>E</I><I>vents</I> are to be deleted. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H4 
 ID="LinkTarget_6702"
><B>6.8.7.2 Delete event functionality </H4
><P 

></B>The DeleteEventDetails structure deletes all <I>Event</I> entries from the history database matching the <I>EventId</I> for one or more <I>HistoricalEventNodes</I>.  </P
><P 

>If no Events are found that match the specified filter for a HistoricalEventNode, then the <I>Sta</I><I>tusCode</I> for that Node is <I>Bad_NoData</I><FONT size="+1"><I>.</I><I> </I></P
><H1 
 ID="LinkTarget_6705"
><FONT size="+1"><B>Annex A </B>(informative)<B>  Client conventions   </H1
><H2 
 ID="LinkTarget_6707"
><FONT size="+1">A.1 How clients may request timestamps </H2
><P 

><FONT size="+1"></B>The OPC HDA COM based specifications allowed a <I>Client</I> to programmatically request historical time periods as absolute time (Jan 01, 2006 12:15:45) or a string representation of relative time (NOW -5M). The OPC UA specification does not allow for using a string representation to pass date/time information using the standard <I>Services</I>. </P
><P 

>OPC UA <I>Client</I> applications that wish to visually represent date/time in a relative string format shall convert this string format to UTC DateTime values before sending requests to the UA <I>Server</I>. It is recommended that all OPC UA <I>Clients</I> use the syntax defined in this clause to represent relative times in their user interfaces.  </P
><P 

>The format for the relative time is: </P
><P 

><FONT size="+1"> keyword+/-offset+/-offset&hellip; </P
><P 

><FONT size="+1">where keyword and offset are as specified in <A href="#LinkTarget_6730" href="#">
Table A.1</A>
 below. Whitespace is ignored. The time string shall begin with a keyword. Each offset shall be preceded by a signed integer that specifies the number and direction of the offset. If the integer preceding the offset is unsigned then the value of the preceding sign is assumed (beginning default sign is positive). The keyword refers to the beginning of the specified time period. DAY means the timestamp at the beginning of the current day (00:00 hours, midnight). MONTH means the timestamp at the beginning of the current month, etc. </P
><P 

>For example, &ldquo;DAY -1D+7H30M&rdquo; could represent the start time for data requested for a daily report beginning at 7:30 in the morning of the previous day (DAY = the first timestamp for today, -1D would make it the first timestamp for yesterday, +7H would take it to 7 a.m. yesterday, +30M would make it 7:30 a.m. yesterday (the + on the last term is carried over from the last term)). </P
><P 

>Similarly, &ldquo;MONTH-1D+5H&rdquo; would be 5 a.m. on the last day of the previous month, &ldquo;NOW-1H15M&rdquo; would be an hour and fifteen minutes ago, and &ldquo;YEAR+3MO&rdquo; would be the first timestamp of April 1 this year. </P
><P 

>Resolving relative timestamps is based upon what Microsoft has done with Excel, thus for various questionable time strings we have these results: </P
><P 

>10-Jan-2001 + 1 MO = 10-Feb-2001 </P
><P 

>29-Jan-1999 + 1 MO = 28-Feb-1999 </P
><P 

>31-Mar-2002 + 2 MO = 30-May-2002 </P
><P 

>29-Feb-2000 + 1 Y = 28-Feb-2001 </P
><P 

>In handling a gap in the calendar (due to different numbers of days in the month, or in the year), when one is adding or subtracting months or years: </P
><P 

>Month: If the answer falls in the gap then it is backed up to the same time of day on the last day of the month.  </P
><P 

>Year: If the answer falls in the gap (February 29) then it is backed up to the same time of day on February 28. </P
><P 

>Note that the above does not hold true for cases of adding or subtracting weeks or days, but only for adding or subtracting months or years which may have different numbers of days in them. </P
><P 

>Note that all keywords and offsets are specified in uppercase. </P
><P 

><B>Table A.1 &ndash; Time keyword definitions </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Keyword  </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>NOW </P
></TD
><TD  
 valign="top"
><P 

>The current UTC time as calculated on the <I>Server</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SECOND </P
></TD
><TD  
 valign="top"
><P 

>The start of the current second. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>MINUTE </P
></TD
><TD  
 valign="top"
><P 

>The start of the current minute. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HOUR </P
></TD
><TD  
 valign="top"
><P 

>The start of the current hour. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DAY </P
></TD
><TD  
 valign="top"
><P 

>The start of the current day. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>WEEK </P
></TD
><TD  
 valign="top"
><P 

>The start of the current week. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>MONTH </P
></TD
><TD  
 valign="top"
><P 

>The start of the current month. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>YEAR </P
></TD
><TD  
 valign="top"
><P 

>The start of the current year. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><B>Table A.2 &ndash;Time offset definitions </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Offset </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>S </P
></TD
><TD  
 valign="top"
><P 

>Offset from time in seconds.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>M </P
></TD
><TD  
 valign="top"
><P 

>Offset from time in minutes. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>H </P
></TD
><TD  
 valign="top"
><P 

>Offset from time in hours. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>D </P
></TD
><TD  
 valign="top"
><P 

>Offset from time in days. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>W </P
></TD
><TD  
 valign="top"
><P 

>Offset from time in weeks. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>MO </P
></TD
><TD  
 valign="top"
><P 

>Offset from time in months. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Y </P
></TD
><TD  
 valign="top"
><P 

>Offset from time in years. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_6840"
><FONT size="+1"><B>A.2 Determining the first historical data point </H2
><P 

><FONT size="+1"></B>In some cases <I>Server</I><I>s</I> are required to return the first available data point for a historical <I>N</I><I>ode</I><I>;</I> this clause recommends the way that a <I>Client</I> should request this information so that Servers can optimize this call, if desired. Although there are multiple calls that could return the first data value, the recommended practice will be to use the <I>StartOfArchive Property</I>.  If this <I>Property</I> isn&rsquo;t available then use the following ReadRawModifiedDetails parameters: </P
><P 

>returnBounds=false </P
><P 

>numValuesPerNode=1 </P
><P 

>startTime=DateTime.MinValue+1 second </P
><P 

>endTime= DateTime.MinValue </P
><P 

><FONT size="+1" color="#0000FF"> </P
><P 

><FONT size="+1" color="#000000">__________ </P
><P 

><FONT size="+1"> </P
></BODY>
</HTML>
