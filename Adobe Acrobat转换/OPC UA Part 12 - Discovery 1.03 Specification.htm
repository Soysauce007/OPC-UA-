<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!-- Created from PDF via Acrobat SaveAsXML -->
<!-- Mapping table version: 28-February-2003 -->
<HTML>
<HEAD>
<META
 name="dc.creator"
 content="Randy Armstrong" >
<META
 name="dc.description"
 content="Industrial Communications" >
<META
 name="dc.title"
 content="OPC Unified Architecture" >
<META
 name="dc.date"
 content="2015-07-19T15:56:40-04:00" >
<META
 name="dc.date.modified"
 content="2015-07-19T15:56:40-04:00" >
<META
 name="generator"
 content="Adobe Acrobat Exchange-Pro 8.0" >
</HEAD>
<BODY bgcolor=white text=black link=blue vlink=purple alink=fushia >
<HR>
<UL>
<LI>
<A href="#LinkTarget_2233">FIGURES</A>
</LI>
<LI>
<A href="#LinkTarget_2349">TABLES</A>
</LI>
<LI>
<A href="#LinkTarget_2599">1 Scope</A>
</LI>
<LI>
<A href="#LinkTarget_2601">2 Normative references</A>
</LI>
<LI>
<A href="#LinkTarget_2702">3 Terms, definitions, and conventions</A>
<UL>
<LI>
<A href="#LinkTarget_2703">3.1 Terms and definitions</A>
<UL>
<LI>
<A href="#LinkTarget_2730">3.1.1 CertificateManagement Server</A>
</LI>
<LI>
<A href="#LinkTarget_2732">3.1.2 Certificate Group</A>
</LI>
<LI>
<A href="#LinkTarget_2734">3.1.3 Certificate Request (CSR)</A>
</LI>
<LI>
<A href="#LinkTarget_2741">3.1.4 DirectoryService</A>
</LI>
<LI>
<A href="#LinkTarget_2743">3.1.5 DiscoveryServer</A>
</LI>
<LI>
<A href="#LinkTarget_2745">3.1.6 DiscoveryUrl</A>
</LI>
<LI>
<A href="#LinkTarget_2747">3.1.7 GlobalDiscoveryServer (GDS)</A>
</LI>
<LI>
<A href="#LinkTarget_2750">3.1.8 IPAddress</A>
</LI>
<LI>
<A href="#LinkTarget_2754">3.1.9 LocalDiscoveryServer (LDS)</A>
</LI>
<LI>
<A href="#LinkTarget_2757">3.1.10 LocalDiscoveryServer-ME (LDS-ME)</A>
</LI>
<LI>
<A href="#LinkTarget_2759">3.1.11 MulticastExtension</A>
</LI>
<LI>
<A href="#LinkTarget_2767">3.1.12 MulticastSubnet</A>
</LI>
<LI>
<A href="#LinkTarget_2770">3.1.13 ServerCapabilityIdentifier</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_2773">3.2 Abbreviations and symbols</A>
</LI>
<LI>
<A href="#LinkTarget_2796">3.3 Conventions for Namespaces</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_2805">4  The Discovery Process</A>
<UL>
<LI>
<A href="#LinkTarget_2807">4.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_2851">4.2 Registration and Announcement of Servers</A>
<UL>
<LI>
<A href="#LinkTarget_2852">4.2.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_2854">4.2.2 Hosts with a LocalDiscoveryServer</A>
</LI>
<LI>
<A href="#LinkTarget_2896">4.2.3 Hosts without a LocalDiscoveryServer</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_2907">4.3 The Discovery Process for Clients</A>
<UL>
<LI>
<A href="#LinkTarget_2908">4.3.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_2935">4.3.2 Security</A>
</LI>
<LI>
<A href="#LinkTarget_2943">4.3.3 Simple Discovery with a DiscoveryUrl</A>
</LI>
<LI>
<A href="#LinkTarget_2956">4.3.4 Local Discovery</A>
</LI>
<LI>
<A href="#LinkTarget_2975">4.3.5 MulticastSubnet Discovery</A>
</LI>
<LI>
<A href="#LinkTarget_2994">4.3.6 Global Discovery</A>
</LI>
<LI>
<A href="#LinkTarget_3026">4.3.7 Combined Discovery Process for Clients</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_3041">5 Local Discovery Server</A>
<UL>
<LI>
<A href="#LinkTarget_3042">5.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_3080">5.2 Security Considerations for Multicast DNS</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_3088">6 Global Discovery Server</A>
<UL>
<LI>
<A href="#LinkTarget_3089">6.1 Overview</A>
<UL>
<LI>
<A href="#LinkTarget_3154">6.1.1 Network Architectures</A>
<UL>
<LI>
<A href="#LinkTarget_3155">6.1.1.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_3167">6.1.1.2 Single MulticastSubnet</A>
</LI>
<LI>
<A href="#LinkTarget_3179">6.1.1.3 Multiple MulticastSubnet</A>
</LI>
<LI>
<A href="#LinkTarget_3194">6.1.1.4 No MulticastSubnets</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_3207">6.2 Information Model</A>
<UL>
<LI>
<A href="#LinkTarget_3208">6.2.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_3220">6.2.2 Directory</A>
</LI>
<LI>
<A href="#LinkTarget_3279">6.2.3 DirectoryType</A>
</LI>
<LI>
<A href="#LinkTarget_3465">6.2.4 FindApplications</A>
</LI>
<LI>
<A href="#LinkTarget_3576">6.2.5 ApplicationRecordDataType</A>
</LI>
<LI>
<A href="#LinkTarget_3667">6.2.6 RegisterApplication</A>
</LI>
<LI>
<A href="#LinkTarget_3789">6.2.7 UpdateApplication</A>
</LI>
<LI>
<A href="#LinkTarget_3894">6.2.8 UnregisterApplication</A>
</LI>
<LI>
<A href="#LinkTarget_3992">6.2.9 GetApplication</A>
</LI>
<LI>
<A href="#LinkTarget_4110">6.2.10 QueryServers</A>
</LI>
<LI>
<A href="#LinkTarget_4301">6.2.11 ApplicationRegistrationChangedAuditEventType</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_4371">7 Certificate Management Overview</A>
<UL>
<LI>
<A href="#LinkTarget_4372">7.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_4397">7.2 Pull Management</A>
</LI>
<LI>
<A href="#LinkTarget_4416">7.3 Push Management</A>
</LI>
<LI>
<A href="#LinkTarget_4442">7.4 Provisioning</A>
</LI>
<LI>
<A href="#LinkTarget_4452">7.5 Common Information Model</A>
<UL>
<LI>
<A href="#LinkTarget_4454">7.5.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_4456">7.5.2 TrustListType</A>
</LI>
<LI>
<A href="#LinkTarget_4621">7.5.3 OpenWithMasks</A>
</LI>
<LI>
<A href="#LinkTarget_4734">7.5.4 CloseAndUpdate</A>
</LI>
<LI>
<A href="#LinkTarget_4866">7.5.5 AddCertificate</A>
</LI>
<LI>
<A href="#LinkTarget_4977">7.5.6 RemoveCertificate</A>
</LI>
<LI>
<A href="#LinkTarget_5084">7.5.7 TrustListDataType</A>
</LI>
<LI>
<A href="#LinkTarget_5151">7.5.8 TrustListMasks</A>
</LI>
<LI>
<A href="#LinkTarget_5203">7.5.9 CertificateGroupType</A>
</LI>
<LI>
<A href="#LinkTarget_5313">7.5.10 CertificateType</A>
</LI>
<LI>
<A href="#LinkTarget_5405">7.5.11 ApplicationCertificateType</A>
</LI>
<LI>
<A href="#LinkTarget_5497">7.5.12 HttpsCertificateType</A>
</LI>
<LI>
<A href="#LinkTarget_5559">7.5.13 RsaMinApplicationCertificateType</A>
</LI>
<LI>
<A href="#LinkTarget_5626">7.5.14 RsaSha256ApplicationCertificateType</A>
</LI>
<LI>
<A href="#LinkTarget_5692">7.5.15 CertificateGroupFolderType</A>
</LI>
<LI>
<A href="#LinkTarget_5828">7.5.16 TrustListUpdatedAuditEventType</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5903">7.6 Information Model for Pull Certificate Management</A>
<UL>
<LI>
<A href="#LinkTarget_5904">7.6.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_5914">7.6.2 CertificateDirectoryType</A>
</LI>
<LI>
<A href="#LinkTarget_6120">7.6.3 StartSigningRequest</A>
</LI>
<LI>
<A href="#LinkTarget_6319">7.6.4 StartNewKeyPairRequest</A>
</LI>
<LI>
<A href="#LinkTarget_6522">7.6.5 FinishRequest</A>
</LI>
<LI>
<A href="#LinkTarget_6691">7.6.6 GetCertificateGroups</A>
</LI>
<LI>
<A href="#LinkTarget_6820">7.6.7 GetTrustList</A>
</LI>
<LI>
<A href="#LinkTarget_6947">7.6.8 GetCertificateStatus</A>
</LI>
<LI>
<A href="#LinkTarget_7086">7.6.9 CertificateRequestedAuditEventType</A>
</LI>
<LI>
<A href="#LinkTarget_7198">7.6.10 CertificateDeliveredAuditEventType</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_7309">7.7 Information Model for Push Certificate Management</A>
<UL>
<LI>
<A href="#LinkTarget_7310">7.7.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_7323">7.7.2 ServerConfiguration</A>
</LI>
<LI>
<A href="#LinkTarget_7381">7.7.3 ServerConfigurationType</A>
</LI>
<LI>
<A href="#LinkTarget_7625">7.7.4 UpdateCertificate</A>
</LI>
<LI>
<A href="#LinkTarget_7808">7.7.5 ApplyChanges</A>
</LI>
<LI>
<A href="#LinkTarget_7870">7.7.6 CreateSigningRequest</A>
</LI>
<LI>
<A href="#LinkTarget_8029">7.7.7 GetRejectedList</A>
</LI>
<LI>
<A href="#LinkTarget_8129">7.7.8 CertificateUpdatedAuditEventType</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_8247">Annex A  (informative)  Deployment and Configuration</A>
<UL>
<LI>
<A href="#LinkTarget_8249">A.1 Firewalls and Discovery</A>
</LI>
<LI>
<A href="#LinkTarget_8292">A.2 Resolving References to Remote Servers</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_8306">Annex B  (normative)  Constants</A>
<UL>
<LI>
<A href="#LinkTarget_8308">B.1 Numeric Node Ids</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_8335">Annex C  (normative)  OPC UA Mapping to mDNS</A>
<UL>
<LI>
<A href="#LinkTarget_8337">C.1 DNS Server (SRV) Record Syntax</A>
</LI>
<LI>
<A href="#LinkTarget_8405">C.2 DNS Text (TXT) Record Syntax</A>
</LI>
<LI>
<A href="#LinkTarget_8444">C.3 DiscoveryUrl Mapping</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_8520">Annex D  (normative)  Server Capability Identifiers</A>
</LI>
<LI>
<A href="#LinkTarget_8653">Annex E  (normative)  DirectoryServices</A>
<UL>
<LI>
<A href="#LinkTarget_8655">E.1 Global Discovery via Other Directory Services</A>
</LI>
<LI>
<A href="#LinkTarget_8667">E.2 UDDI</A>
</LI>
<LI>
<A href="#LinkTarget_8714">E.3 LDAP</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_8806">Annex F  (informative)  Local Discovery Server</A>
<UL>
<LI>
<A href="#LinkTarget_8808">F.1 Certificate Store Directory Layout</A>
</LI>
<LI>
<A href="#LinkTarget_8938">F.2 Installation Directories on Windows</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_8954">Annex G  (normative)  Application Installation Process</A>
<UL>
<LI>
<A href="#LinkTarget_8956">G.1 Provisioning with Pull Management</A>
</LI>
<LI>
<A href="#LinkTarget_8972">G.2 Provisioning with the Push Management</A>
</LI>
<LI>
<A href="#LinkTarget_9012">G.3 Setting Permissions</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_9017">Annex H   (informative)   Comparison with RFC 7030</A>
<UL>
<LI>
<A href="#LinkTarget_9019">H.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_9026">H.2 Obtaining CA Certificates</A>
</LI>
<LI>
<A href="#LinkTarget_9066">H.3 Initial Enrolment</A>
</LI>
<LI>
<A href="#LinkTarget_9106">H.4 Client Certificate Reissuance</A>
</LI>
<LI>
<A href="#LinkTarget_9110">H.5 Server Key Generation</A>
</LI>
<LI>
<A href="#LinkTarget_9114">H.6 Certificate Signing Request (CSR) Attributes Request</A>
</LI>
</UL>
</LI>
</UL>
</HR>
<DIV class="Part" 

><P 

><FONT size="+1" color="#000000"></B> </P
><P 

> <DIV class="Sect" 
 Alt=""
>  F  O  U  N  D  A  T  I  O  N &reg; </DIV
></P
><FONT size="+1"> <P 

><FONT size="+3"><B>OPC Unified Architecture </P
><P 

>Specification </P
><P 

> Part 12:  Discovery  </P
><P 

>Release 1.03 </P
><P 

>July 19th, 2015 </P
><P 

> </P
><P 

><FONT size="+1"></B> <FONT size="+3"><B> </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"></B>Specification Type </P
></TD
><TD  
 valign="top"
><P 

>Industry Standard Specification </P
></TD
><TD  
 valign="top"
><P 

>Comments: </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Title: </P
></TD
><TD  
 valign="top"
><P 

>OPC Unified Architecture Discovery </P
></TD
><TD  
 valign="top"
><P 

>Date: </P
></TD
><TD  
 valign="top"
><P 

>July 19th, 2015 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Version: </P
></TD
><TD  
 valign="top"
><P 

>Release 1.03 </P
></TD
><TD  
 valign="top"
><P 

>Software </P
></TD
><TD  
 valign="top"
><P 

>MS-Word </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Source: </P
></TD
><TD  
 valign="top"
><P 

>OPC UA Part 12 - Discovery 1.03 Specification.docx </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Author: </P
></TD
><TD  
 valign="top"
><P 

>OPC Foundation </P
></TD
><TD  
 valign="top"
><P 

>Status: </P
></TD
><TD  
 valign="top"
><P 

>Release </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+3"><B> </P
><P 

><FONT size="+1"></B> <FONT size="+3"><B> </P
><P 

><FONT size="+1">CONTENTS </P
><DIV class="TOC" 

><FONT size="+1"></B> <DIV class="TOCI" 

><FONT size="+1">Page </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2233" href="#">
<FONT size="+1">FIGURES ............................................................................................................................... vi</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2349" href="#">
<FONT size="+1">TABLES ................................................................................................................................ vii</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2599" href="#">
<FONT size="+1">1<FONT size="+1"> <FONT size="+1">Scope ............................................................................................................................... 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2601" href="#">
<FONT size="+1">2<FONT size="+1"> <FONT size="+1">Normative references ....................................................................................................... 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2702" href="#">
<FONT size="+1">3<FONT size="+1"> <FONT size="+1">Terms, definitions, and conventions .................................................................................. 2</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Terms and definitions .............................................................................................. 2</DIV
></DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CertificateManagement Server .................................................................... 2</DIV
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Certificate Group ......................................................................................... 2</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Certificate Request (CSR) ........................................................................... 2</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">DirectoryService .......................................................................................... 2</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">DiscoveryServer .......................................................................................... 2</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">DiscoveryUrl ................................................................................................ 2</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">GlobalDiscoveryServer (GDS) ..................................................................... 2</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">IPAddress .................................................................................................... 3</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">LocalDiscoveryServer (LDS) ........................................................................ 3</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">LocalDiscoveryServer-ME (LDS-ME) ........................................................... 3</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">MulticastExtension ...................................................................................... 3</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">MulticastSubnet ........................................................................................... 3</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ServerCapabilityIdentifier ............................................................................ 3</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Abbreviations and symbols ...................................................................................... 4</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Conventions for Namespaces .................................................................................. 4</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2805" href="#">
4<FONT size="+1"> <FONT size="+1">The Discovery Process ..................................................................................................... 5</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ................................................................................................................. 5</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Registration and Announcement of Servers ............................................................. 5</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Overview ..................................................................................................... 5</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Hosts with a LocalDiscoveryServer .............................................................. 5</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Hosts without a LocalDiscoveryServer ......................................................... 6</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">The Discovery Process for Clients ........................................................................... 6</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Overview ..................................................................................................... 6</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Security ....................................................................................................... 7</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Simple Discovery with a DiscoveryUrl .......................................................... 7</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Local Discovery ........................................................................................... 7</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">MulticastSubnet Discovery ........................................................................... 8</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Global Discovery ......................................................................................... 8</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Combined Discovery Process for Clients ..................................................... 9</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3041" href="#">
5<FONT size="+1"> <FONT size="+1">Local Discovery Server ................................................................................................... 10</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ............................................................................................................... 10</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Security Considerations for Multicast DNS ............................................................ 10</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3088" href="#">
6<FONT size="+1"> <FONT size="+1">Global Discovery Server ................................................................................................. 10</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ............................................................................................................... 10</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Network Architectures ............................................................................... 11</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Information Model ................................................................................................. 13</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Overview ................................................................................................... 13</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Directory .................................................................................................... 14</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">DirectoryType ............................................................................................ 14</DIV
><DIV class="TOC" 

><FONT size="+1"> <DIV class="TOCI" 

> <FONT size="+1">FindApplications ........................................................................................ 15</DIV
></DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ApplicationRecordDataType ...................................................................... 15</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">RegisterApplication ................................................................................... 16</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">UpdateApplication ..................................................................................... 16</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">UnregisterApplication ................................................................................ 17</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">GetApplication ........................................................................................... 18</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">QueryServers ............................................................................................ 18</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ApplicationRegistrationChangedAuditEventType ....................................... 19</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4371" href="#">
7<FONT size="+1"> <FONT size="+1">Certificate Management Overview .................................................................................. 19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ............................................................................................................... 19</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Pull Management .................................................................................................. 20</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Push Management ................................................................................................ 21</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Provisioning .......................................................................................................... 22</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Common Information Model ................................................................................... 23</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Overview ................................................................................................... 23</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">TrustListType ............................................................................................ 23</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">OpenWithMasks ........................................................................................ 23</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CloseAndUpdate ....................................................................................... 24</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AddCertificate ............................................................................................ 25</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">RemoveCertificate ..................................................................................... 25</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">TrustListDataType ..................................................................................... 26</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">TrustListMasks .......................................................................................... 26</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CertificateGroupType ................................................................................ 26</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CertificateType .......................................................................................... 27</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ApplicationCertificateType ......................................................................... 27</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">HttpsCertificateType .................................................................................. 27</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">RsaMinApplicationCertificateType ............................................................. 27</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">RsaSha256ApplicationCertificateType ....................................................... 28</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CertificateGroupFolderType ....................................................................... 28</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">TrustListUpdatedAuditEventType ............................................................... 28</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Information Model for Pull Certificate Management ................................................ 29</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Overview ................................................................................................... 29</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CertificateDirectoryType ............................................................................ 29</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">StartSigningRequest .................................................................................. 30</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">StartNewKeyPairRequest .......................................................................... 32</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">FinishRequest ........................................................................................... 33</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">GetCertificateGroups ................................................................................. 34</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">GetTrustList............................................................................................... 35</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">GetCertificateStatus .................................................................................. 35</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CertificateRequestedAuditEventType ......................................................... 36</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CertificateDeliveredAuditEventType ........................................................... 37</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Information Model for Push Certificate Management .............................................. 37</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Overview ................................................................................................... 37</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ServerConfiguration ................................................................................... 38</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ServerConfigurationType ........................................................................... 38</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">UpdateCertificate ....................................................................................... 39</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ApplyChanges ........................................................................................... 40</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">CreateSigningRequest ............................................................................... 40</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">GetRejectedList ......................................................................................... 41</DIV
><DIV class="TOC" 

><FONT size="+1"> <DIV class="TOCI" 

> <FONT size="+1">CertificateUpdatedAuditEventType ............................................................ 41</DIV
></DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8247" href="#">
Annex A (informative)  Deployment and Configuration .......................................................... 43</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8249" href="#">
<FONT size="+1">A.1<FONT size="+1"> <FONT size="+1">Firewalls and Discovery......................................................................................... 43</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8292" href="#">
<FONT size="+1">A.2<FONT size="+1"> <FONT size="+1">Resolving References to Remote Servers ............................................................. 45</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8306" href="#">
<FONT size="+1">Annex B (normative)  Constants............................................................................................ 47</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8308" href="#">
<FONT size="+1">B.1<FONT size="+1"> <FONT size="+1">Numeric Node Ids .................................................................................................. 47</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8335" href="#">
<FONT size="+1">Annex C (normative)  OPC UA Mapping to mDNS ................................................................. 48</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8337" href="#">
<FONT size="+1">C.1<FONT size="+1"> <FONT size="+1">DNS Server (SRV) Record Syntax ......................................................................... 48</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8405" href="#">
<FONT size="+1">C.2<FONT size="+1"> <FONT size="+1">DNS Text (TXT) Record Syntax ............................................................................. 48</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8444" href="#">
<FONT size="+1">C.3<FONT size="+1"> <FONT size="+1">DiscoveryUrl Mapping ........................................................................................... 49</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8520" href="#">
<FONT size="+1">Annex D (normative)  Server Capability Identifiers ................................................................ 50</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8653" href="#">
<FONT size="+1">Annex E (normative)  DirectoryServices ................................................................................ 51</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8655" href="#">
<FONT size="+1">E.1<FONT size="+1"> <FONT size="+1">Global Discovery via Other Directory<I> </I>Services ....................................................... 51</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8667" href="#">
<FONT size="+1">E.2<FONT size="+1"> <FONT size="+1">UDDI ..................................................................................................................... 51</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8714" href="#">
<FONT size="+1">E.3<FONT size="+1"> <FONT size="+1">LDAP .................................................................................................................... 52</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8806" href="#">
<FONT size="+1">Annex F (informative)  Local Discovery Server ...................................................................... 54</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8808" href="#">
<FONT size="+1">F.1<FONT size="+1"> <FONT size="+1">Certificate Store Directory Layout .......................................................................... 54</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8938" href="#">
<FONT size="+1">F.2<FONT size="+1"> <FONT size="+1">Installation Directories on Windows ....................................................................... 54</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8954" href="#">
<FONT size="+1">Annex G (normative)  Application Installation Process .......................................................... 56</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8956" href="#">
<FONT size="+1">G.1<FONT size="+1"> <FONT size="+1">Provisioning with Pull Management ....................................................................... 56</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8972" href="#">
<FONT size="+1">G.2<FONT size="+1"> <FONT size="+1">Provisioning with the Push Management ............................................................... 56</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9012" href="#">
<FONT size="+1">G.3<FONT size="+1"> <FONT size="+1">Setting Permissions ............................................................................................... 57</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9017" href="#">
<FONT size="+1">Annex H (informative)   Comparison with RFC 7030 .............................................................. 58</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9019" href="#">
<FONT size="+1">H.1<FONT size="+1"> <FONT size="+1">Overview ............................................................................................................... 58</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9026" href="#">
<FONT size="+1">H.2<FONT size="+1"> <FONT size="+1">Obtaining CA Certificates ...................................................................................... 58</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9066" href="#">
<FONT size="+1">H.3<FONT size="+1"> <FONT size="+1">Initial Enrolment .................................................................................................... 58</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9106" href="#">
<FONT size="+1">H.4<FONT size="+1"> <FONT size="+1">Client Certificate Reissuance ................................................................................ 59</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9110" href="#">
<FONT size="+1">H.5<FONT size="+1"> <FONT size="+1">Server Key Generation .......................................................................................... 59</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_9114" href="#">
<FONT size="+1">H.6<FONT size="+1"> <FONT size="+1">Certificate Signing Request (CSR) Attributes Request ........................................... 59</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1"> </DIV
><P 

>  </P
><H1 
 ID="LinkTarget_2233"
><FONT size="+1"><B>FIGURES </H1
><DIV class="TOC" 

><DIV class="TOCI" 

><A href="#LinkTarget_2889" href="#">
<FONT size="+1"></B>Figure 1 &ndash; The Registration Process with an LDS ................................................................... 6</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2954" href="#">
<FONT size="+1">Figure 2 &ndash; The Simple Discovery Process ............................................................................... 7</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2973" href="#">
<FONT size="+1">Figure 3 &ndash; The Local Discovery Process ................................................................................. 8</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2986" href="#">
<FONT size="+1">Figure 4 &ndash; The MulticastSubnet Discovery Process ................................................................. 8</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3017" href="#">
<FONT size="+1">Figure 5 &ndash; The Global Discovery Process ............................................................................... 9</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3036" href="#">
<FONT size="+1">Figure 6 &ndash; The Discovery Process for Clients .......................................................................... 9</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3111" href="#">
<FONT size="+1">Figure 7 &ndash; The Relationship Between GDS and other components ........................................ 11</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3177" href="#">
<FONT size="+1">Figure 8 &ndash; The Single MulticastSubnet Architecture .............................................................. 12</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3189" href="#">
<FONT size="+1">Figure 9 &ndash; The Multiple MulticastSubnet Architecture ............................................................ 12</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3204" href="#">
<FONT size="+1">Figure 10 &ndash; The No MulticastSubnet Architecture ................................................................. 13</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3219" href="#">
<FONT size="+1">Figure 11 &ndash; The Address Space for the GDS ........................................................................ 14</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4412" href="#">
<FONT size="+1">Figure 12 &ndash; The Pull Certificate Management Model ............................................................. 21</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4433" href="#">
<FONT size="+1">Figure 13 &ndash; The Push Certificate Management Model ........................................................... 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5913" href="#">
<FONT size="+1">Figure 14 &ndash; The Certificate Management AddressSpace for the GlobalDiscoveryServer ....... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_7320" href="#">
<FONT size="+1">Figure 15 &ndash; The AddressSpace for the Server that supports Push Management.................... 37</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8258" href="#">
<FONT size="+1">Figure 16 &ndash; Discovering Servers Outside a Firewall .............................................................. 43</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8270" href="#">
<FONT size="+1">Figure 17 &ndash; Discovering Servers Behind a Firewall ............................................................... 44</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8289" href="#">
<FONT size="+1">Figure 18 &ndash; Using a Discovery Server with a Firewall ............................................................ 45</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8303" href="#">
<FONT size="+1">Figure 19 &ndash; Following References to Remote Servers ........................................................... 46</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8666" href="#">
<FONT size="+1">Figure 20 &ndash; The UDDI or LDAP Discovery Process ............................................................... 51</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8678" href="#">
<FONT size="+1">Figure 21 &ndash; UDDI Registry Structure ..................................................................................... 52</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8725" href="#">
<FONT size="+1">Figure 22 &ndash; Sample LDAP Hierarchy ..................................................................................... 53</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1"> </DIV
></DIV
><P 

> <FONT size="+1"><B> </P
><H1 
 ID="LinkTarget_2349"
>TABLES </H1
><DIV class="TOC" 

><DIV class="TOCI" 

><FONT size="+1"></B>Table 1 &ndash; Directory Object Definition ..................................................................................... <A>
14</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 2 &ndash; DirectoryType Definition ........................................................................................ <A>
14</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 3 &ndash; FindApplications Method AddressSpace Definition ................................................ <A>
15</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 4 &ndash; ApplicationRecordDataType Definition .................................................................. <A>
15</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 5 &ndash; RegisterApplication Method AddressSpace Definition ............................................ <A>
16</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 6 &ndash; UpdateApplication Method AddressSpace Definition ............................................. <A>
17</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 7 &ndash; UnregisterApplication Method AddressSpace Definition ......................................... <A>
17</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 8 &ndash; GetApplication Method AddressSpace Definition ................................................... <A>
18</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 9 &ndash; QueryServers Method AddressSpace Definition .................................................... <A>
19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 10 &ndash; ApplicationRegistrationChangedAuditEventType Definition .................................. <A>
19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 11 &ndash; TrustListType Definition ....................................................................................... <A>
23</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 12 &ndash; OpenWithMasks Method AddressSpace Definition ............................................... <A>
24</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 13 &ndash; CloseAndUpdate Method AddressSpace Definition .............................................. <A>
25</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 14 &ndash; AddCertificate Method AddressSpace Definition .................................................. <A>
25</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 15 &ndash; RemoveCertificate Method AddressSpace Definition ........................................... <A>
26</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 16 &ndash; TrustListDataType Definition ............................................................................... <A>
26</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 17 &ndash; TrustListMasks Values ........................................................................................ <A>
26</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 18 &ndash; CertificateGroupType Definition ........................................................................... <A>
26</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 19 &ndash; CertificateType Definition .................................................................................... <A>
27</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 20 &ndash; ApplicationCertificateType Definition ................................................................... <A>
27</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 21 &ndash; HttpsCertificateType Definition ............................................................................ <A>
27</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 22 &ndash; RsaMinApplicationCertificateType Definition ....................................................... <A>
27</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 23 &ndash; RsaSha256ApplicationCertificateType Definition ................................................. <A>
28</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 24 &ndash; CertificateGroupFolderType Definition ................................................................. <A>
28</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 25 &ndash; TrustListUpdatedAuditEventType Definition ......................................................... <A>
29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 26 &ndash; CertificateDirectoryType ObjectType Definition.................................................... <A>
30</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 27 &ndash; StartSigningRequest Method AddressSpace Definition ........................................ <A>
32</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 28 &ndash; StartNewKeyPairRequest Method AddressSpace Definition ................................. <A>
33</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 29 &ndash; FinishRequest Method AddressSpace Definition .................................................. <A>
34</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 30 &ndash; GetCertificateGroups Method AddressSpace Definition ....................................... <A>
35</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 31 &ndash; GetTrustList Method AddressSpace Definition ..................................................... <A>
35</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 32 &ndash; GetCertificateStatus Method AddressSpace Definition ......................................... <A>
36</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 33 &ndash; CertificateRequestedAuditEventType Definition ................................................... <A>
36</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 34 &ndash; CertificateDeliveredAuditEventType Definition ..................................................... <A>
37</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 35 &ndash; ServerConfiguration Object Definition .................................................................. <A>
38</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 36 &ndash; ServerConfigurationType Definition ..................................................................... <A>
38</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 37 &ndash; UpdateCertificate Method AddressSpace Definition ............................................. <A>
40</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 38 &ndash; ApplyChanges Method AddressSpace Definition ................................................. <A>
40</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 39 &ndash; CreateSigningRequest Method AddressSpace Definition ..................................... <A>
41</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 40 &ndash; GetRejectedList Method AddressSpace Definition ............................................... <A>
41</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 41 &ndash; CertificateUpdatedAuditEventType Definition ...................................................... <A>
42</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 42 &ndash; Allowed mDNS Service Names ............................................................................ <A>
48</A>
<FONT size="+1"> </DIV
></DIV
><DIV class="TOC" 

><DIV class="TOCI" 

><FONT size="+1">Table 43 &ndash; DNS TXT Record String Format........................................................................... <A>
48</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 44 &ndash; DiscoveryUrl to DNS SRV and TXT Record Mapping ........................................... <A>
49</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 45 &ndash; Examples of <I>ServerCapabilityIdentifiers</I> .............................................................. <A>
50</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 46 &ndash; UDDI tModels ...................................................................................................... <A>
52</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 47 &ndash; LDAP Object Class Schema ................................................................................ <A>
53</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 48 &ndash; Application Certificate Store Directory Layout ...................................................... <A>
54</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 49 &ndash; Verifying that a Server is allowed to Provide Certificates ..................................... <A>
58</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1">Table 50 &ndash; Verifying that a Client is allowed to request Certificates ...................................... <A>
58</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1"> </DIV
></DIV
><P 

><FONT size="+1"><B> </P
><P 

>OPC FOUNDATION </P
><P 

><FONT size="+1"></B>____________ </P
><P 

><FONT size="+1"><B> </P
><P 

>UNIFIED ARCHITECTURE &ndash;  </P
><P 

><FONT size="+1">FOREWORD </P
><P 

><FONT size="+1"></B>This specification is the specification for developers of OPC UA applications. The specification is a result of an analysis and design process to develop a standard interface to facilitate the development of applications by multiple vendors that shall inter-operate seamlessly together.  </P
><P 

><B>Copyright &copy; 2006-2015, OPC Foundation, Inc. </P
><P 

><FONT size="+1"></B>U<FONT size="+1"><B>AGREEMENT OF USE </P
><P 

><FONT size="+1"></B>COPYRIGHT RESTRICTIONS </P
><P 

>Any unauthorized use of this specification may violate copyright laws, trademark laws, and communications regulations and statutes. This document contains information which is protected by copyright. All Rights Reserved. No part of this work covered by copyright herein may be reproduced or used in any form or by any means--graphic, electronic, or mechanical, including photocopying, recording, taping, or information storage and retrieval systems--without permission of the copyright owner. </P
><P 

>OPC Foundation members and non-members are prohibited from copying and redistributing this specification. All copies must be obtained on an individual basis, directly from the OPC Foundation Web site <A href="http://www.opcfoundation.org/">
<FONT color="#0000FF">http://www.opcfoundation.org</A>
<FONT color="#000000">. </P
><P 

>PATENTS </P
><P 

>The attention of adopters is directed to the possibility that compliance with or adoption of OPC specifications may require use of an invention covered by patent rights. OPC shall not be responsible for identifying patents for which a license may be required by any OPC specification, or for conducting legal inquiries into the legal validity or scope of those patents that are brought to its attention. OPC specifications are prospective and advisory only. Prospective users are responsible for protecting themselves against liability for infringement of patents. </P
><P 

>WARRANTY AND LIABILITY DISCLAIMERS </P
><P 

>WHILE THIS PUBLICATION IS BELIEVED TO BE ACCURATE, IT IS PROVIDED &quot;AS IS&quot; AND MAY CONTAIN ERRORS OR MISPRINTS. THE OPC FOUDATION MAKES NO WARRANTY OF ANY KIND, EXPRESSED OR IMPLIED, WITH REGARD TO THIS PUBLICATION, INCLUDING BUT NOT LIMITED TO ANY WARRANTY OF TITLE OR OWNERSHIP, IMPLIED WARRANTY OF MERCHANTABILITY OR WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE OR USE. IN NO EVENT SHALL THE OPC FOUNDATION BE LIABLE FOR ERRORS CONTAINED HEREIN OR FOR DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, RELIANCE OR COVER DAMAGES, INCLUDING LOSS OF PROFITS, REVENUE, DATA OR USE, INCURRED BY ANY USER OR ANY THIRD PARTY IN CONNECTION WITH THE FURNISHING, PERFORMANCE, OR USE OF THIS MATERIAL, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. </P
><P 

>The entire risk as to the quality and performance of software developed using this specification is borne by you.  </P
><P 

>RESTRICTED RIGHTS LEGEND </P
><P 

>This Specification is provided with Restricted Rights. Use, duplication or disclosure by the U.S. government is subject to restrictions as set forth in (a) this Agreement pursuant to DFARs 227.7202-3(a); (b) subparagraph (c)(1)(i) of the Rights in Technical Data and Computer Software clause at DFARs 252.227-7013; or (c) the Commercial Computer Software Restricted Rights clause at FAR 52.227-19 subdivision (c)(1) and (2), as applicable. Contractor / manufacturer are the OPC Foundation,. 16101 N. 82nd Street, Suite 3B, Scottsdale, AZ, 85260-1830 </P
><P 

>COMPLIANCE </P
><P 

>The OPC Foundation shall at all times be the sole entity that may authorize developers, suppliers and sellers of hardware and software to use certification marks, trademarks or other special designations to indicate compliance with these materials. Products developed using this specification may claim compliance or conformance with this specification if and only if the software satisfactorily meets the certification requirements set by the OPC Foundation. Products that do not meet these requirements may claim only that the product was based on this specification and must not claim compliance or conformance with this specification.  </P
><P 

>TRADEMARKS </P
><P 

>Most computer and software brand names have trademarks or registered trademarks. The individual trademarks have not been listed here. </P
><P 

>GENERAL PROVISIONS </P
><P 

>Should any provision of this Agreement be held to be void, invalid, unenforceable or illegal by a court, the validity and enforceability of the other provisions shall not be affected thereby.  </P
><P 

>This Agreement shall be governed by and construed under the laws of the State of Minnesota, excluding its choice or law rules. </P
><P 

>This Agreement embodies the entire understanding between the parties with respect to, and supersedes any prior understanding or agreement (oral or written) relating to, this specification.  </P
><P 

>ISSUE REPORTING </P
><P 

>The OPC Foundation strives to maintain the highest quality standards for its published specifications, hence they undergo constant review and refinement. Readers are encouraged to report any issues and view any existing errata here: <A href="http://www.opcfoundation.org/errata">
<FONT color="#0000FF">http://www.opcfoundation.org/errata</A>
<FONT color="#000000">.<FONT size="+1"> </P
><P 

><FONT size="+1"><B> </P
><H1 
 ID="LinkTarget_2599"
><FONT size="+1">1 Scope </H1
><P 

><FONT size="+1"></B>This part specifies how OPC Unified Architecture (OPC UA) <I>Clients</I> and <I>Servers</I> interact with <I>DiscoveryServers</I> when used in different scenarios. It specifies the requirements for the <I>LocalDiscoveryServer, LocalDiscoveryServer-ME, GlobalDiscoveryServer </I>and the<I> CertificateManager</I>.  </P
><H1 
 ID="LinkTarget_2601"
><FONT size="+1"><B>2 Normative references </H1
><P 

><FONT size="+1"></B>The following referenced documents are indispensable for the application of this document. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies. </P
><P 

>Part 1: OPC UA Specification: Part 1 &ndash; Overview and Concepts </P
><P 

>Part 2: OPC UA Specification: Part 2 &ndash; Security Model </P
><P 

>Part 3: OPC UA Specification: Part 3 &ndash; Address Space Model </P
><P 

>Part 4: OPC UA Specification: Part 4 &ndash; Services </P
><P 

>Part 5: OPC UA Specification: Part 5 &ndash; Information Model  </P
><P 

>Part 6: OPC UA Specification: Part 6 &ndash; Mappings </P
><P 

>Part 7: OPC UA Specification: Part 7 &ndash; Profiles  </P
><P 

>Part 9: OPC UA Specification: Part 9 &ndash; Alarms and Conditions </P
><P 

>Auto-IP: Dynamic Configuration of IPv4 Link-Local Addresses </P
><P 

><A href="http://www.ietf.org/rfc/rfc3927.txt">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc3927.txt</A>
<FONT color="#000000"> </P
><P 

>DNS-Name: Domain Names &ndash; Implementation and Specification  </P
><P 

><A href="http://www.ietf.org/rfc/rfc1035.txt">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc1035.txt</A>
<FONT color="#000000"> </P
><P 

>DHCP: Dynamic Host Configuration Protocol </P
><P 

><A href="http://www.ietf.org/rfc/rfc2131.txt">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc2131.txt</A>
<FONT color="#000000">  </P
><P 

>mDNS: Multicast DNS </P
><P 

><A href="http://www.ietf.org/rfc/rfc6762.txt">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc6762.txt</A>
 </P
><P 

><FONT color="#000000">DNS-SD: DNS Based Service Discovery </P
><P 

><A href="http://www.ietf.org/rfc/rfc6763.txt">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc6763.txt</A>
 </P
><P 

><FONT color="#000000">RFC 5958: Asymmetric Key Packages </P
><P 

><A href="http://tools.ietf.org/search/rfc5208">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc5208.txt</A>
<FONT color="#000000">  </P
><P 

>PKCS #10: Certification Request Syntax Specification </P
><P 

><A href="http://www.ietf.org/rfc/rfc2986.txt">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc2986.txt</A>
<FONT color="#000000"> </P
><P 

>PKCS #12: Personal Information Exchange Syntax </P
><P 

><A href="http://www.emc.com/emc-plus/rsa-labs/pkcs/files/h11301-wp-pkcs-12v1-1-personal-information-exchange-syntax.pdf">
<FONT color="#0000FF">http://www.emc.com/emc-plus/rsa-labs/pkcs/files/h11301-wp-pkcs-12v1-1-personal-information-exchange-syntax.pdf</A>
<FONT color="#000000"> <FONT color="#0000FF"> </P
><P 

><FONT color="#000000">RFC 7030: Enrollment over Secure Transport </P
><P 

><A href="http://tools.ietf.org/search/rfc7030">
<FONT color="#0000FF">http://www.ietf.org/rfc/rfc7030.txt</A>
<FONT color="#000000">  </P
><P 

>DI: OPC Unified Architecture for Devices (DI)  </P
><P 

><A href="https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-for-devices-di/">
<FONT color="#0000FF">https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-for-devices-di/</A>
<FONT color="#000000"> </P
><P 

>ADI: OPC Unified Architecture for Analyzer Devices (ADI) </P
><P 

><A href="https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-for-analyzer-devices-adi/">
<FONT color="#0000FF">https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-for-analyzer-devices-adi/</A>
<FONT color="#000000">  </P
><P 

>PLCopen: OPC Unified Architecture / PLCopen Information Model </P
><P 

><A href="https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-plcopen-information-model/">
<FONT color="#0000FF">https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-plcopen-information-model/</A>
<FONT color="#000000"> <FONT color="#0000FF"> </P
><P 

><FONT color="#000000">FDI: OPC Unified Architecture for FDI </P
><P 

><A href="https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-for-fdi/">
<FONT color="#0000FF">https://opcfoundation.org/developer-tools/specifications-unified-architecture/opc-unified-architecture-for-fdi/</A>
<FONT color="#000000"> <FONT color="#0000FF"> </P
><P 

><FONT color="#000000">ISA-95: ISA-95 Common Object Model </P
><P 

><A href="https://opcfoundation.org/developer-tools/specifications-unified-architecture/isa-95-common-object-model/">
<FONT color="#0000FF">https://opcfoundation.org/developer-tools/specifications-unified-architecture/isa-95-common-object-model/</A>
<FONT color="#000000">  </P
><H1 
 ID="LinkTarget_2702"
><FONT size="+1"><B>3 Terms, definitions, and conventions </H1
><H2 
 ID="LinkTarget_2703"
><FONT size="+1"> Terms and definitions </H2
><P 

></B>For the purposes of this document the following terms and definitions as well as the terms and definitions given in <A href="#LinkTarget_2603" href="#">
Part 1</A>
, <A href="#LinkTarget_2604" href="#">
Part 2</A>
, <A href="#LinkTarget_2605" href="#">
Part 3</A>
, <A href="#LinkTarget_2606" href="#">
Part 4</A>
, <A href="#LinkTarget_2608" href="#">
Part 6</A>
 and <A href="#LinkTarget_2610" href="#">
Part 9</A>
 apply.  </P
><H3 
 ID="LinkTarget_2730"
><B> CertificateManagement Server </H3
><P 

></B>a software application that manages the <I>Certificates</I> used by <I>Applications</I> in an administrative domain.  </P
><H3 
 ID="LinkTarget_2732"
><B> Certificate Group </H3
><P 

></B>a context used to describe the <I>Trust List</I> and <I>Certificate(s)</I> associated with an <I>Application</I>.   </P
><H3 
 ID="LinkTarget_2734"
><B> Certificate Request (CSR) </H3
><P 

></B>a <A href="#LinkTarget_2647" href="#">
PKCS #10</A>
 encoded structure used to request a new <I>Certificate</I> from a <I>Certificate Authority</I>.   </P
><H3 
 ID="LinkTarget_2741"
><B> DirectoryService </H3
><P 

></B>a software application, or a set of applications, that stores and organizes information about network resources such as computers or services.  </P
><H3 
 ID="LinkTarget_2743"
><B> DiscoveryServer </H3
><P 

></B>an <I>Application</I> that maintains a list of OPC UA <I>Servers</I> that are available on the network and provides mechanisms for Clients to obtain this list. </P
><H3 
 ID="LinkTarget_2745"
><B> DiscoveryUrl </H3
><P 

></B>a URL for a network <I>Endpoint</I> that provides the information required to connect to a <I>Server</I>. </P
><H3 
 ID="LinkTarget_2747"
><B> GlobalDiscoveryServer (GDS) </H3
><P 

></B>a <I>DiscoveryServer </I>that maintains a list of OPC UA <I>Applications</I> available in an administrative domain. </P
><P 

>Note: a GDS may also provide certificate management services. </P
><H3 
 ID="LinkTarget_2750"
><B> IPAddress </H3
><P 

></B>a unique number assigned to a network interface that allows Internet Protocol (IP) requests to be routed to that interface.  </P
><P 

>Note: An <I>IPAddress </I>for a host may change over time. </P
><H3 
 ID="LinkTarget_2754"
><B> LocalDiscoveryServer (LDS) </H3
><P 

></B>a <I>DiscoveryServer </I>that maintains a list of all <I>Servers</I> that have registered with it. </P
><P 

>Note: <I>Servers</I> normally register with the LDS on the same host.  </P
><H3 
 ID="LinkTarget_2757"
><B> LocalDiscoveryServer-ME (LDS-ME) </H3
><P 

></B>a Local<I>DiscoveryServer </I>that includes the MulticastExtension. </P
><H3 
 ID="LinkTarget_2759"
><B> MulticastExtension </H3
><P 

></B>an extension to a <I>LocalDiscoveryServer</I> that adds support for the <A href="#LinkTarget_2629" href="#">
mDNS</A>
 protocol.<I> </I></P
><H3 
 ID="LinkTarget_2767"
><B> MulticastSubnet </H3
><P 

></B>a network that allows multicast packets to be sent to all nodes connected to the network.  </P
><P 

>Note: a <I>MulticastSubnet</I> is not necessarily the same as a TCP/IP subnet. </P
><H3 
 ID="LinkTarget_2770"
><B> ServerCapabilityIdentifier </H3
><P 

></B>a short identifier which uniquely identifies a set of discoverable capabilities supported by a <I>Server</I>. </P
><P 

>Note: the OPC Foundation maintains a list of the currently defined <I>ServerCapabilityIdentifiers</I>. </P
><H2 
 ID="LinkTarget_2773"
><B> Abbreviations and symbols </H2
><P 

></B>API Application Programming Interface  </P
><P 

>CA Certificate Authority  </P
><P 

>CRL Certificate Revocation List </P
><P 

>CSR Certificate Signing Request  </P
><P 

>DER Distinguished Encoding Rules  </P
><P 

>DHCP Dynamic Host Configuration Protocol </P
><P 

>DNS Domain Name System </P
><P 

>EST Enrolment over Secure Transport </P
><P 

>GDS Global Discovery Server </P
><P 

>IANA  The Internet Assigned Numbers Authority  </P
><P 

>LDAP Lightweight Directory Access Protocol </P
><P 

>LDS Local Discovery Server  </P
><P 

>LDS-ME Local Discovery Server with the Multicast Extension </P
><P 

>mDNS Multicast Domain Name System </P
><P 

>PEM      Privacy Enhanced Mail </P
><P 

>PFX Personal Information Exchange  </P
><P 

>SHA1 Secure Hash Algorithm </P
><P 

>TLS Transport Layer Security </P
><P 

>UA  Unified Architecture  </P
><P 

>UDDI Universal Description, Discovery and Integration </P
><P 

> </P
><H2 
 ID="LinkTarget_2796"
><B> Conventions for Namespaces </H2
><P 

></B> </P
><P 

>This standard uses multiple namespaces to define <I>Nodes</I>. The following abbreviations are used in the definitions for these <I>Nodes</I>: </P
><P 

> </P
><P 

> CORE  http://opcfoundation.org/UA/ </P
><P 

> GDS http://opcfoundation.org/UA/GDS/<FONT size="+1" color="#0000FF"> </P
><P 

><FONT size="+1" color="#000000"> </P
><P 

>The default namespace for each <I>Node</I> is defined at the top of the table. All of the <I>BrowseNames</I> in the table use the default namespace unless the <I>BrowseName</I> is preceded by one of the above abbreviations. </P
><H1 
 ID="LinkTarget_2805"
><FONT size="+1"><B>4 The Discovery Process </H1
><H2 
 ID="LinkTarget_2807"
><FONT size="+1"> Overview </H2
><P 

></B>The discovery process allows <I>Clients</I> to find <I>Servers</I> on the network and then discover how to connect to the <I>Server</I>. Note that this discussion builds on the discovery related concepts defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. </P
><P 

><I>Clients</I> and <I>Servers</I> can be on the same host, on different hosts in the same subnet, or even on completely different locations in an administrative domain. The following clauses describe the different configurations and how discovery can be accomplished. </P
><P 

>The mechanisms for <I>Clients</I> to discover <I>Servers</I> are specified in <A href="#LinkTarget_2907" href="#">
4.3</A>
. </P
><P 

>The mechanisms for <I>Servers</I> to make themselves discoverable are specified in <A href="#LinkTarget_2851" href="#">
4.2</A>
. </P
><P 

>The <I>Discovery</I> <I>Services</I> are specified in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. They are implemented by individual <I>Servers</I> and by dedicated <I>DiscoveryServers</I>.  The following dedicated <I>DiscoveryServers</I> provide a way for <I>Clients</I> to discover registered OPC UA <I>Servers</I> in different situations: </P
><DL 

><DD 

>&#61623; A <I>LocalDiscoveryServer</I> (LDS) maintains discovery information for all <I>Servers</I> that have registered with it, usually all <I>Servers</I> available on the host that it runs on. </DD
><DD 

>&#61623; A <I>LocalDiscoveryServer</I> with the <I>MulticastExtension</I> (LDS-ME) maintains discovery information for all <I>Servers</I> that have been announced on the local <I>MulticastSubnet.</I> </DD
><DD 

>&#61623; A <I>GlobalDiscoveryServer</I> (GDS) maintains discovery information for OPC UA <I>Applications</I> available in an administrative domain. </DD
></DL
><P 

>LDS and LDS-ME are specified in Clause <A href="#LinkTarget_3041" href="#">
5</A>
. The GDS is specified in Clause <A href="#LinkTarget_3088" href="#">
6</A>
. </P
><P 

>The OPC Foundation provides a standard LDS-ME server implementation.  This LDS-ME implementation is also the standard LDS implementation, just with the <I>MulticastExtension</I> enabled. </P
><H2 
 ID="LinkTarget_2851"
><B> Registration and Announcement of Servers </H2
><H3 
 ID="LinkTarget_2852"
> Overview </H3
><P 

></B>The clause describes how a <I>Server</I> registers itself so it can be discovered. Most <I>Servers</I> will want <I>Clients</I> to discover them. <I>Servers</I> that do not wish to be discovered will only publish a <I>DiscoveryUrl</I> via some out-of-band mechanism and will not register with a <I>DiscoveryServer</I>. </P
><H3 
 ID="LinkTarget_2854"
><B> Hosts with a LocalDiscoveryServer </H3
><P 

></B><I>Servers</I> register themselves with the LDS on the same host if they wish to be discovered. The registration ensures that the <I>Server</I> is visible for local discovery (see <A href="#LinkTarget_2956" href="#">
4.3.4</A>
) and <I>MulticastSubnet</I> discovery if  the LDS is a LDS-ME (see <A href="#LinkTarget_2975" href="#">
4.3.5</A>
). </P
><P 

>The OPC UA Standard (<A href="#LinkTarget_2606" href="#">
Part 4</A>
) defines a <I>RegisterServer2</I> <I>Service</I>.<I> </I>which provides additional registration information.  It is recommended that Servers use this service to register. To assure backward compatibility, the older <I>RegisterServer</I> <I>Service</I> also shall remain valid. Thus, <I>Servers</I> can either call <I>RegisterServer</I> or <I>RegisterServer2</I>. If <I>RegisterServer2</I> fails, <I>Servers</I> shall fall back to <I>RegisterServer</I>). </P
><P 

>The <I>RegisterServer2</I> <I>Service</I> allows the <I>Server</I> to specify zero or more <I>ServerCapabilityIdentifiers.</I> <I>ServerCapabilityIdentifiers</I> are short, string identifiers of well-known OPC UA features. <I>Clients</I> can use these identifiers as filter when looking for <I>Servers</I>.  </P
><P 

>The set of known <I>ServerCapabilityIdentifiers</I> is specified in <A href="#LinkTarget_8520" href="#">
Annex D</A>
 and is limited to features which are considered to be important enough to report before a <I>Client</I> connects to <I>Server</I>. For example, support for the GDS information model or the Alarms information model are <I>Server</I> capabilities that have a <I>ServerCapabilityIdentifier </I>defined. </P
><P 

>Before a <I>Server</I> registers with the LDS it should call the <I>GetEndpoints</I> <I>Service</I> and choose the most secure endpoint supported by the LDS and then call <I>RegisterServer2</I> or <I>RegisterServer</I>. </P
><P 

>Registration with LDS or LDS-ME is illustrated in <A href="#LinkTarget_2889" href="#">
Figure 1</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>StartRegisterServer2 succeeded?Call RegisterServer2 with IsOnline=Trueon Local LDSCall RegisterServerwith IsOnline=True on Local LDSNoWait For Re-Registration Timer to ExpireYesNoServerShutdown?YesEndCall RegisterServer2 or RegisterServer with IsOnline=False</DIV
></P
><P 

><B>Figure 1 &ndash; The Registration Process with an LDS </P
><P 

></B>See <A href="#LinkTarget_2606" href="#">
Part 4</A>
 for more information on the re-registration timer and the <I>IsOnline</I> flag. </P
><H3 
 ID="LinkTarget_2896"
><B> Hosts without a LocalDiscoveryServer </H3
><P 

></B>Dedicated systems (usually embedded systems) with exactly one <I>Server</I> installed do not need to have a separate LDS. Such <I>Servers</I> will be their own LDS or LDS-ME; i.e., their <I>DiscoveryUrl</I> shall match the well-known address for an LDS. It is highly recommended that they also announce themselves on the <I>MulticastSubnet</I> with a basic <I>MulticastExtension</I>. This requires a small subset of an mDNS Responder (see <A href="#LinkTarget_2629" href="#">
mDNS</A>
 and <A href="#LinkTarget_8335" href="#">
Annex C</A>
) that announces the <I>Server</I> and responds to mDNS probes. The <I>Server</I> does not need to provide the caching and address resolution implemented by a full mDNS Responder.  </P
><H2 
 ID="LinkTarget_2907"
><B> The Discovery Process for Clients </H2
><H3 
 ID="LinkTarget_2908"
> Overview </H3
><P 

></B>The discovery process allows <I>Clients</I> to find <I>Servers</I> on the network and then discover how to connect to them. Once a <I>Client </I>has this information it can save it and use it to connect directly to the <I>Server</I> again without going through the discovery process. <I>Clients</I> that cannot connect with the saved connection information should assume the <I>Server</I> configuration has changed and therefore repeat the discovery process. </P
><P 

>A <I>Client</I> has several choices for finding <I>Servers</I>: </P
><DL 

><DD 

>&#61623; Out-of-band discovery (i.e. entry into a GUI) of a <I>DiscoveryUrl</I> for a <I>Server</I>; </DD
><DD 

>&#61623; Calling <I>FindServers</I> on the LDS installed on the <I>Client</I> host; </DD
><DD 

>&#61623; Calling <I>FindServers</I> on a remote LDS, where the <I>HostName</I> for the remote host is manually entered<I>; </I></DD
><DD 

>&#61623; Calling <I>FindServersOnNetwork</I> (see <A href="#LinkTarget_2606" href="#">
Part 4</A>
) on the LDS-ME installed on <I>Client</I> host; </DD
><DD 

>&#61623; Supporting the LDS-ME functionality locally in the Client. </DD
><DD 

>&#61623; Searching for <I>Servers</I> known to a <I>GlobalDiscoveryServer</I>. </DD
></DL
><P 

>The <I>DiscoveryUrl </I>provides all of the information a <I>Client</I> needs to connect to a <I>Discovery</I> <I>Endpoint</I> (see <A href="#LinkTarget_2943" href="#">
4.3.3</A>
).  </P
><H3 
 ID="LinkTarget_2935"
><B> Security </H3
><P 

></B><I>Clients</I> should be aware of rogue <I>DiscoveryServers</I> that might direct them to rogue <I>Servers</I>. <I>Clients</I> can use the SSL/TLS server certificate (if available) to verify that the <I>DiscoveryServer</I> is a server that they trust and/or ensure that they trust any <I>Server</I> provided by the <I>DiscoveryServer</I>. See <A href="#LinkTarget_2604" href="#">
Part 2</A>
 for a detailed discussion of these issues. </P
><H3 
 ID="LinkTarget_2943"
><B> Simple Discovery with a DiscoveryUrl </H3
><P 

></B>Every <I>Server</I> has one or more <I>DiscoveryUrls</I> that allow access to its <I>Endpoints</I>. Once a <I>Client</I> obtains (e.g. via manual entry into a form) the <I>DiscoveryUrl</I> for the <I>Server, </I>it reads the <I>EndpointDescriptions</I> using the <I>GetEndpoints Service </I>defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
<I>.</I>  </P
><P 

>The discovery process for this scenario is illustrated in Figure 1. </P
><P 

> <DIV class="Sect" 
 Alt=""
>GetEndpoints()CreateSecureChannel()ClientServerEndpointDescription[]DiscoveryEndpointSessionEndpoint</DIV
></P
><P 

><B>Figure 2 &ndash; The Simple Discovery Process </P
><P 

></B> </P
><H3 
 ID="LinkTarget_2956"
><B> Local Discovery </H3
><P 

></B>In many cases <I>Clients</I> will not know which <I>Servers</I> exist but may know which hosts might have <I>Servers</I> on them. In this situation the <I>Client</I> will look for the <I>LocalDiscoveryServer</I> on a host by constructing a <I>DiscoveryUrl</I> using the Well-Known Addresses defined in <A href="#LinkTarget_2608" href="#">
Part 6</A>
. </P
><P 

>If a <I>Client</I> finds a <I>LocalDiscoveryServer</I> then it will call the <I>FindServers</I> <I>Service</I> on the LDS to obtain a list of <I>Servers </I>and their<I> DiscoveryUrls</I>. The <I>Client</I> would then call the <I>GetEndpoints </I>service for one of the <I>Servers</I> returned. The discovery process for this scenario is illustrated in <A href="#LinkTarget_2973" href="#">
Figure 3</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>GetEndpoints()CreateSecureChannel()ClientServerEndpointDescription[]DiscoveryEndpointSessionEndpointLocalDiscovery ServerFindServers()ApplicationDescription[]</DIV
></P
><P 

> </P
><P 

><B>Figure 3 &ndash; The Local Discovery Process </P
><H3 
 ID="LinkTarget_2975"
> MulticastSubnet Discovery </H3
><P 

></B>In some situations <I>Clients</I> will not know which hosts have <I>Servers</I>. In these situations the <I>Client</I> will look for a <I>LocalDiscoveryServer</I> with the <I>MulticastExtension</I> on its local host and requests a list of <I>DiscoveryUrls</I> for <I>Servers</I> and <I>DiscoveryServers</I> available on the <I>MulticastSubnet</I>. </P
><P 

>The discovery process for this scenario is illustrated in <A href="#LinkTarget_2986" href="#">
Figure 4</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>ClientLocalDiscoveryServerFindServersOnNetworkDiscoveryUrls[]LocalDiscoveryServerMulticast ProbeMulticast AnnounceLookup CacheGetEndpoints()CreateSecureChannel()ServerEndpointDescription[]DiscoveryEndpointSessionEndpointRegisterServer2or RegisterServer</DIV
></P
><P 

><B>Figure 4 &ndash; The MulticastSubnet Discovery Process </P
><P 

></B>In this scenario the <I>Server</I> uses the <I>RegisterServer2</I> <I>Service</I> to tell a <I>LocalDiscoveryServer</I> to announce the <I>Server</I> on the <I>MulticastSubnet</I>. The <I>Client</I> will receive the <I>DiscoveryUrl</I> and <I>ServerCapabilityIdentifiers</I> for the Server when it calls <I>FindServersOnNetwork</I> and then connects directly to the <I>Server</I>. When a <I>Client</I> calls <I>FindServers</I> it only receives the <I>Servers</I> running on the same host as the LDS. </P
><P 

><I>Clients</I> running on embedded systems may not have a LDS-ME available on the system, These <I>Clients</I> can support an mDNS Responder which understands how OPC UA concepts are mapped to mDNS messages and maintains the same table of  servers as maintained by the LDS-ME. This mapping is described in<I> </I><A href="#LinkTarget_8306" href="#">
Annex B</A>
. </P
><H3 
 ID="LinkTarget_2994"
><B> Global Discovery </H3
><P 

></B>A GDS is an OPC UA <I>Server</I> which allows <I>Clients</I> to search for <I>Servers</I> in the administrative domain. It may also provide Certificate Services (see Clause <A href="#LinkTarget_4371" href="#">
7</A>
). It provides <I>Methods</I> that allow applications to search for other applications (See Clause <A href="#LinkTarget_3088" href="#">
6</A>
). To access the GDS, the <I>Client</I> will create a <I>Session</I> with the <I>GDS </I>and use the <I>Call</I> service to invoke the <I>QueryServers</I> <I>Method </I>(see Clause <A href="#LinkTarget_3992" href="#">
6.2.9</A>
). The <I>QueryServers</I> <I>Method </I>is similar to the <I>FindServers</I> service except that it provides more advanced search and filter criteria. The discovery process is illustrated in <A href="#LinkTarget_3017" href="#">
Figure 5</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>GetEndpoints()CreateSecureChannel()ClientServerEndpointDescription[]DiscoveryEndpointSessionEndpointGlobalDiscovery ServerCall() (QueryServers)ServerOnNetwork[]</DIV
></P
><P 

><B>Figure 5 &ndash; The Global Discovery Process </P
><P 

></B>The GDS may be coupled with any of the previous network architectures.  For the <I>MulticastSubnet</I>, either single or multiple, an Administrator may register a GDS with one or more LDSes on one or more <I>MulticastSubnets.</I>  </P
><P 

>The <I>Client</I> can also be configured with the URL of the GDS using an out of band mechanism. </P
><P 

>The complete discovery process is shown in <A href="#LinkTarget_3036" href="#">
Figure 6</A>
. </P
><H3 
 ID="LinkTarget_3026"
><B> Combined Discovery Process for Clients </H3
><P 

></B>The use cases in the preceding clauses imply a number of choices that have to be made by <I>Clients</I> when a <I>Client</I> needs to connect to a <I>Server</I>. These choices are combined together in <A href="#LinkTarget_3036" href="#">
Figure 6</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>StartHave a Server URL?Have a HostName?NoHave a GDS URL?NoCall FindServersOnNetworkon LDSNoNo ErrorandURL Found?Is GDS URL?Is LDS URL?YesNoCall QueryServers on GDSYesYesCan Find HostName Out of Band?NoYesCan Find URL Out of Band?NoYesCall FindServers on LDSYesYesCall GetEndpoints on ServerYesConnectedNo, it is a ServerConstruct URL from HostNameFailedNo</DIV
></P
><P 

><B>Figure 6 &ndash; The Discovery Process for Clients </P
><P 

></B><I>FindServersOnNetwork</I> may be called on the local LDS, however, It can also be called on a remote LDS which is part of a different <I>MulticastSubnet</I>. </P
><P 

>An out-of-band mechanism is a way to find a URL or a <I>HostName</I> that is not described by this standard. For example, a user could manually enter a URL or use system specific APIs to browse the network neighbourhood. </P
><P 

>A <I>Client</I> that goes through the discovery process can save the URL that was discovered. If the <I>Client</I> restarts later it can use that URL and bypass the discovery process. If reconnection fails the <I>Client</I> will have to go through the process again. </P
><H1 
 ID="LinkTarget_3041"
><FONT size="+1"><B>5 Local Discovery Server </H1
><H2 
 ID="LinkTarget_3042"
><FONT size="+1"> Overview </H2
><P 

></B>Each host that could have multiple OPC UA <I>Servers</I> installed should have a standalone <I>LocalDiscoveryServer</I> installed. This is a <I>DiscoveryServer</I> that exposes one or more <I>Endpoints</I> which support the <I>FindServers</I> and <I>GetEndpoints</I> services defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
 for all Servers on the host. In addition, the <I>LocalDiscoveryServer </I>shall provide at least one <I>Endpoint</I> which implements the <I>RegisterServer</I> service for these Servers.  </P
><P 

>In systems (usually embedded systems) with exactly one <I>Server</I> installed this <I>Server</I> may also be the LDS (see <A href="#LinkTarget_2896" href="#">
4.2.3</A>
). </P
><P 

>A <I>LocalDiscoveryServer</I> with the MulticastExtension (LDS-ME) will announce all <I>Servers</I> that it knows about on the local <I>MulticastSubnet</I>. In order to support this, a <I>LocalDiscoveryServer</I> supports the <I>RegisterServer2</I> <I>Service</I> defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. For backward compatibility a<I> LocalDiscoveryServer </I>also supports the <I>RegisterServer</I> <I>Service</I> which is defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
.<I> </I></P
><P 

>Each host with OPC UA Applications (Clients and Servers) installed should have a <I>LocalDiscoveryServer</I> with a <I>MulticastExtension</I>. </P
><P 

>The <I>MulticastExtension</I> incorporates the functionality of the mDNS Responder described in the Multicast DNS (<A href="#LinkTarget_2629" href="#">
mDNS</A>
) specification (see <A href="#LinkTarget_2629" href="#">
mDNS</A>
). In addition the <I>LocalDiscoveryServer</I> that supports the <I>MulticastExtension</I> supports the <I>FindServersOnNetwork</I> <I>Service</I> described in <A href="#LinkTarget_2606" href="#">
Part 4</A>
.  </P
><H2 
 ID="LinkTarget_3080"
><B> Security Considerations for Multicast DNS </H2
><P 

></B>The Multicast DNS (<A href="#LinkTarget_2629" href="#">
mDNS</A>
) specification is used for various commercial and consumer applications. This provides a benefit in that implementations exist, however, system administrators may choose to disable Multicast DNS operations. For that reason, all OPC UA applications must have fall back strategies which are used when multicast is not available. </P
><P 

>Multicast DNS operations are insecure because of their nature; therefore they should be disabled in environments where an attacker could cause problems by impersonating another host. This risk is minimized if OPC UA security is enabled and all <I>Applications</I> use <I>Certificate</I> <I>TrustLists</I> to control access. </P
><H1 
 ID="LinkTarget_3088"
><FONT size="+1"><B>6 Global Discovery Server </H1
><H2 
 ID="LinkTarget_3089"
><FONT size="+1"> Overview </H2
><P 

></B>The <I>LocalDiscoveryServer</I> is useful for networks where the host names can be discovered. However, this is typically not the case in large systems with multiple servers on multiple subnets. For this reason there is a need for an enterprise wide <I>DiscoveryServer</I> called a <I>GlobalDiscoveryServer</I>. The <I>GlobalDiscoveryServer </I>(GDS) is an OPC UA <I>Server</I> which allows <I>Clients</I> to search for <I>Servers</I> in the administrative domain. It provides methods that allow applications to register themselves and to search for other applications.  </P
><P 

>The essential element of a <I>GlobalDiscoveryServer</I> (GDS) is that it may also provide the <I>Certificate</I> management services described in <A href="#LinkTarget_4371" href="#">
7</A>
.  These services can simplify <I>Certificate</I> management even in medium to small systems, thus a GDS may also be deployed in smaller systems. Different implementations are expected. Some of them will likely provide a front-end to an existing <I>DirectoryService</I> such as LDAP (See <A href="#LinkTarget_8653" href="#">
Annex E</A>
). By standardizing on an OPC UA based interface, OPC UA <I>Clients</I> do not need to have knowledge of different <I>DirectoryServices. </I></P
><P 

>If an administrator registers a <I>LocalDiscoveryServer</I> with the GDS, then the GDS should periodically update its database by calling <I>FindServersOnNetwork</I> or <I>FindServers</I> on the LDS. <A href="#LinkTarget_3111" href="#">
Figure 7</A>
 shows the relationship between a GDS and the LDS-ME or LDS. </P
><P 

> <DIV class="Sect" 
 Alt=""
>&#9312;GlobalDirectoryServiceLocalDiscoveryServerServerClient&#9313;&#9315;&#9316;LDS w/Multicast Extension&#9314;MulticastExtension</DIV
></P
><P 

><B>Figure 7 &ndash; The Relationship Between GDS and other components </P
><P 

></B>The steps shown in Figure 7 are: </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>The Server calls <I>RegisterServer</I><I>2</I> on the LDS running on the same machine. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>The administrator registers LDS-ME installations with the GDS.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>The GDS calls <I>FindServersOnNetwork</I> on the LDS-ME to find all <I>Servers</I> on the same <I>MulticastSubnet</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>The GDS creates a record for each <I>Server</I> returned by the LDS-ME.  These records may need to be approved by an <I>Administrator</I> before they are made available to <I>Clients</I> of the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5 </P
></TD
><TD  
 valign="top"
><P 

>The <I>Client</I> calls <I>QueryServers</I> <I>Method</I> on the GDS to discover <I>Servers</I>. </P
></TD
></TR
></TABLE
><P 

>The<I> Information Model</I> used for registration and discovery is shown in <A href="#LinkTarget_3154" href="#">
6.1.1</A>
<B>. </B>Any <I>Client</I> shall be able to call the <I>QueryServers</I> <I>Method</I> to find <I>Servers</I> known to GDS. The complete definitions for each of the types used are described in <A href="#LinkTarget_4452" href="#">
7.5</A>
 below. </P
><H3 
 ID="LinkTarget_3154"
><B> Network Architectures </H3
><H4 
 ID="LinkTarget_3155"
>6.1.1.1 Overview </H4
><P 

></B>The discovery mechanisms defined in this standard are expected to be used in many different network architectures. The following three architectures are Illustrated: </P
><DL 

><DD 

>&#61623; Single <I>MulticastSubnet</I>; </DD
><DD 

>&#61623; Multiple <I>MulticastSubnets</I>; </DD
><DD 

>&#61623; No<I> MulticastSubnets </I>(or multiple<I> MulticastSubnets</I> with exactly one host each);<I> </I> </DD
></DL
><P 

>A <I>MulticastSubnet</I> is a network segment where all hosts on the segment can receive multicast packets from the other hosts on the segment. A physical LAN segment is typically a <I>MulticastSubnet</I> </P
><P 

>unless the administrator has specifically disabled multicast communication. In some cases multiple physical LAN segments can be connected as a single <I>MulticastSubnet</I> </P
><H4 
 ID="LinkTarget_3167"
><B>6.1.1.2 Single MulticastSubnet </H4
><P 

></B>The Single <I>MulticastSubnet</I> Architecture is shown in <A href="#LinkTarget_3177" href="#">
Figure 8</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>mDNSLDS-MEServerAServerBRegisterLDS-MEServerCRegisterLDS-MEClientServerDRegisterFindServers: DFindServersOnNetwork: A, B, C, DFindServers: CFindServersOnNetwork: A, B, C, DClient</DIV
></P
><P 

><B>Figure 8 &ndash; The Single MulticastSubnet Architecture </P
><P 

></B>In this architecture every host has an LDS-ME and uses mDNS to maintain a cache of the <I>Servers</I> on the <I>MulticastSubnet</I>. A <I>Client</I> can call <I>FindServersOnNetwork</I> on any LDS-ME and receive the same set of <I>Servers</I>. When a <I>Client</I> calls <I>FindServers</I> it only receives the <I>Servers</I> running on the same host as the LDS.  </P
><H4 
 ID="LinkTarget_3179"
><B>6.1.1.3 Multiple MulticastSubnet </H4
><P 

></B>The Multiple <I>MulticastSubnet</I> Architecture is shown in <A href="#LinkTarget_3189" href="#">
Figure 9</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>mDNSLDS-MEServerAServerBRegisterLDS-MEServerCRegisterLDS-MEClientServerDRegisterFindServers: DFindServersOnNetwork: A, B, DFindServers: CFindServersOnNetwork: CmDNSLDS-MEClient</DIV
></P
><P 

><B>Figure 9 &ndash; The Multiple MulticastSubnet Architecture </P
><P 

></B>This architecture is the same as the previous architecture except in this architecture the mDNS messages do not pass through routers connecting the <I>MulticastSubnets</I>. This means that a <I>Client</I> </P
><P 

>calling <I>FindServersOnNetwork</I> will only receive a list of <I>Servers</I> running on the <I>MulticastSubnets </I>that the LDS-ME is connected to.  </P
><P 

>A <I>Client</I> that wants to connect to a remote <I>MulticastSubnet </I>needs to rely on out of band discovery (i.e. manual entry) of a <I>HostName</I> or <I>DiscoveryUrl</I>. Once a <I>Client</I> finds an LDS-ME on a remote <I>MulticastSubnet </I>it can use <I>FindServersOnNetwork </I>to discover all <I>Servers</I> on that <I>MulticastSubnet. </I></P
><H4 
 ID="LinkTarget_3194"
><B>6.1.1.4 No MulticastSubnets </H4
><P 

></B>The No <I>MulticastSubnets</I> Architecture is shown in <A href="#LinkTarget_3204" href="#">
Figure 10</A>
.  </P
><P 

> <DIV class="Sect" 
 Alt=""
>LDS-MEABRegisterLDS-MECRegisterLDS-MEClientDRegisterFindServers: DFindServersOnNetwork: DFindServers: CFindServersOnNetwork: CFindServers: A, BFindServersOnNetwork: A, B</DIV
></P
><P 

><B>Figure 10 &ndash; The No MulticastSubnet Architecture </P
><P 

></B>In this architecture the mDNS is not used at all because the Administrator has disabled multicast at a network level or by turning off multicast capabilities of each LDS-ME. </P
><P 

>A <I>Client</I> that wants to discover a <I>Server</I> needs to use an out of band mechanism to find the <I>HostName</I> and call <I>FindServers</I> on the LDS of that host<I>. FindServersOnNetwork </I>may also work but it will never return more than what <I>FindServers</I> returns. </P
><H2 
 ID="LinkTarget_3207"
><B> Information Model </H2
><H3 
 ID="LinkTarget_3208"
> Overview </H3
><P 

></B>The<I> GlobalDiscoveryServer</I> <I>Information Model</I> used for <I>discovery</I> is shown in <A href="#LinkTarget_3219" href="#">
Figure 11</A>
. Most of the interactions between the <I>GlobalDiscoveryServer</I> and <I>Application</I> administrator or the <I>Client</I> will be via <I>Methods</I> defined on the <I>Directory</I> folder. </P
><P 

> <DIV class="Sect" 
 Alt=""
>DirectoryType:DirectoryFolderType:ApplicationsFindApplicationsRegisterApplicationUnregisterApplicationGetApplicationQueryServersUpdateApplication</DIV
></P
><P 

><B>Figure 11 &ndash; The Address Space for the GDS </P
><H3 
 ID="LinkTarget_3220"
> Directory </H3
><P 

></B>This <I>Object </I> is the root of the <I>GlobalDiscoveryServer</I> <I> AddressSpace</I>  and it is the target of an <I>Organizes</I> reference from the <I>Objects</I> folder defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. It organizes the information that can be accessed into subfolders. The implementation of a GDS may customize and organize the folders in any manner it desires.  For example folders may exist for information models, or for optional services or for various locations in an administrative domain.  </P
><P 

><B>Table 1 &ndash; Directory Object Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>Directory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>GDS (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>DirectoryType defined in <A href="#LinkTarget_3279" href="#">
6.2.3</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"></B> </P
><H3 
 ID="LinkTarget_3279"
><B> DirectoryType </H3
><P 

></B><I>DirectoryType</I> is the <I>ObjectType</I> for the root of the <I>GlobalDiscoveryServer</I> <I>AddressSpace</I>. It organizes the information that can be accessed into subfolders It also provides methods that allow applications to register or find applications. It is defined in <A href="#LinkTarget_3286" href="#">
Table 2</A>
. </P
><P 

><B>Table 2 &ndash; DirectoryType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DirectoryType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>GDS (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>FolderType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Organizes </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Applications  </P
></TD
><TD  
 valign="top"
><P 

>- </P
></TD
><TD  
 valign="top"
><P 

>FolderType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>FindApplications </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_3465" href="#">
6.2.4</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>RegisterApplication </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_3667" href="#">
6.2.6</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>UpdateApplication </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_3789" href="#">
6.2.7</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>UnregisterApplication </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_3894" href="#">
6.2.8</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>GetApplication </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_3992" href="#">
6.2.9</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>QueryServers </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_4110" href="#">
6.2.10</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">The <I>Applications</I> folder may contain <I>Objects</I> representing the <I>Applications</I> known to the GDS. These <I>Objects</I> may be organized into subfolders as determined by the GDS. Some characteristics for </P
><P 

>organizing applications are the networks, the physical location, or the supported profiles. The <I>QueryServers</I> <I>Method</I> can be used to search for OPC UA <I>Applications</I> based on various criteria. </P
><P 

>A GDS is not required to expose its <I>Applications</I> as browseable <I>Objects</I> in its <I>AddressSpace</I>, however, each <I>Application</I> shall have a unique <I>NodeId</I> which can be passed to <I>Methods</I> used to administer the GDS. </P
><P 

>The <I>FindApplications</I> <I>Method</I> returns the <I>Applications</I> associated with an <I>ApplicationUri</I>. It can be called by any <I>Client</I> application. </P
><P 

>The <I>RegisterApplication</I> <I>Method</I> is used to add a new <I>Application</I> to the GDS. It requires administrative privileges.  </P
><P 

>The <I>UpdateApplication</I> <I>Method</I> is used to update an existing <I>Application</I> in the GDS. It requires administrative privileges.  </P
><P 

>The <I>UnregisterApplication</I> <I>Method</I> is used to remove an <I>Application</I> from the GDS. It requires administrative privileges.  </P
><P 

>The <I>QueryServers</I> <I>Method</I> is used to find <I>Servers</I> that meet the criteria specified. It can be called by any <I>Client</I> application.  </P
><H3 
 ID="LinkTarget_3465"
><B> FindApplications </H3
><P 

></B><I>FindApplications</I> is used to find the <I>ApplicationId</I> for an OPC UA <I>Application</I> known to the GDS. In normal situations the list of records returned will not have more than one entry, however, system configuration errors can create situations where the GDS has multiple entries for a single <I>ApplicationUri</I>. If this happens a human will likely have to look at records to determine which record is the true match for the <I>ApplicationUri</I>. </P
><P 

>If the returned array is null or zero length then the GDS does not have an entry for the <I>ApplicationUri</I>.<I> </I></P
><P 

><B>Signature</B>  </P
><P 

><B>FindApplications</B>( </P
><P 

>[in]  String applicationUri  </P
><P 

>[out] ApplicationRecordDataType[] applications </P
><P 

>); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationUri </P
></TD
><TD  
 valign="top"
><P 

>The <I>A</I><I>pplicationUri</I> that identifies the <I>Application</I> of interest. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applications </P
></TD
><TD  
 valign="top"
><P 

>A list of application records that match the <I>ApplicationUri.</I>  </P
><P 

>The ApplicationRecordDataType is defined in <A href="#LinkTarget_3576" href="#">
6.2.5</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_3520" href="#">
<FONT size="+1">Table 3</A>
 specifies the <I>AddressSpace</I> representation for the <I>FindApplications Method</I>.  </P
><P 

><B>Table 3 &ndash; FindApplications Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>FindApplications </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><H3 
 ID="LinkTarget_3576"
><FONT size="+1"><B> ApplicationRecordDataType </H3
><P 

></B>This type defines a DataType which represents a record in the GDS<I>. </I></P
><P 

><B>Table 4 &ndash; ApplicationRecordDataType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>The unique identifier assigned by the GDS to the record. </P
><P 

>This <I>NodeId</I> may be passed to other <I>Methods</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applicationUri </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>The URI for the <I>Application</I> associated with the record. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applicationType </P
></TD
><TD  
 valign="top"
><P 

>ApplicationType </P
></TD
><TD  
 valign="top"
><P 

>The type of <I>Application</I>. </P
><P 

>If the <I>ApplicationType</I> is <I>Client</I> the <I>Application</I> will not be returned by the <I>QueryServers</I> <I>Method</I>. </P
><P 

>This type is defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applicationNames </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText[] </P
></TD
><TD  
 valign="top"
><P 

>One or more localized names for the <I>Application</I>. </P
><P 

>The first element is the default <I>ApplicationName</I> for the <I>Server</I> when a non-localized name is needed. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>productUri </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>A globally unique URI for the product associated with the <I>Application</I>. </P
><P 

>This URI is assigned by the vendor of the <I>Application</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>discoveryUrls </P
></TD
><TD  
 valign="top"
><P 

>String[] </P
></TD
><TD  
 valign="top"
><P 

>The list of discovery URLs for a <I>Server</I> <I>Application</I>. </P
><P 

>The first element is the default if a <I>Client</I> needs to choose one URL. </P
><P 

>The first HTTPS URL specifies the domain used as the Common Name of HTTPS <I>Certificates</I>. </P
><P 

>This field is ignored if the <I>ApplicationType</I> is <I>Client</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>serverCapability Identifiers </P
></TD
><TD  
 valign="top"
><P 

>String[] </P
></TD
><TD  
 valign="top"
><P 

>The list of server capability identifiers for the Application. </P
><P 

>The allowed values are defined in <A href="#LinkTarget_8520" href="#">
Annex D</A>
. </P
><P 

>This field is ignored if the <I>ApplicationType</I> is <I>Client</I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_3667"
><B> RegisterApplication </H3
><P 

></B><I>RegisterApplication </I>is used to register a new <I>Application</I> with a <I>GlobalDiscoveryServer</I>.  </P
><P 

>This <I>Method</I> shall only be invoked by authorized users. </P
><P 

><I>Servers</I> that support transparent redundancy shall register as a single <I>Application</I> and pass the <I>DiscoveryUrls</I> for all available instances and/or network paths. </P
><P 

>If registration was successful and auditing is supported, the GDS shall generate the <I>ApplicationRegistrationChangedAuditEventType</I> (see <A href="#LinkTarget_4301" href="#">
6.2.11</A>
).  </P
><P 

><B>Signature</B>  </P
><P 

><B>RegisterApplication</B>(   </P
><P 

>[in]  ApplicationRecordDataType application </P
><P 

> [out] NodeId applicationId </P
><P 

>); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>application </P
></TD
><TD  
 valign="top"
><P 

>The application that is to be registered with the <I>GlobalDiscoveryServer</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applicationId </P
></TD
><TD  
 valign="top"
><P 

>A unique identifier for the registered <I>Application</I>. </P
><P 

>This identifier is persistent and is used in other <I>Methods</I> used to administer applications. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The application or one of the fields of the application record is not valid. </P
><P 

>The text associated with the error shall indicate the exact problem. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_3731" href="#">
<FONT size="+1">Table 5</A>
 specifies the <I>AddressSpace</I> representation for the <I>RegisterApplication Method</I>.  </P
><P 

><B>Table 5 &ndash; RegisterApplication Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>RegisterApplication </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_3789"
><FONT size="+1"><B> UpdateApplication </H3
><P 

></B><I>UpdateApplication </I>is used to update an existing <I>Application</I> in a <I>GlobalDiscoveryServer</I>.  </P
><P 

>This <I>Method</I> shall only be invoked by authorized users. </P
><P 

>If the update was successful and auditing is supported, the GDS shall generate the <I>ApplicationRegistrationChangedAuditEventType</I> (see <A href="#LinkTarget_4301" href="#">
6.2.11</A>
).  </P
><P 

><B>Signature</B>  </P
><P 

><B>UpdateApplication</B>( </P
><P 

>  [in]  ApplicationRecordDataType application </P
><P 

> ); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>application </P
></TD
><TD  
 valign="top"
><P 

>The application that is to be updated in the GDS database. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The applicationId is not known to the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The application or one of the fields of the application record is not valid. </P
><P 

>The text associated with the error shall indicate the exact problem. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_3851" href="#">
<FONT size="+1">Table 6</A>
 specifies the <I>AddressSpace</I> representation for the <I>UpdateApplication Method</I>.  </P
><P 

><B>Table 6 &ndash; UpdateApplication Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>UpdateApplication </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_3894"
><FONT size="+1"><B> UnregisterApplication </H3
><P 

></B><I>UnregisterApplication  </I>is used to remove an <I>Application</I> from a <I>GlobalDiscoveryServer</I>.  </P
><P 

>This <I>Method</I> shall only be invoked by authorized users.  </P
><P 

>A <I>Server</I> <I>Application</I> that is unregistered may be automatically added again if the GDS is configured to populate itself by calling <I>FindServersOnNetwork</I> and the <I>Server</I> <I>Application</I> is still registering with its local LDS. </P
><P 

>If un-registration was successful and auditing is supported, the GDS shall generate the <I>ApplicationRegistrationChangedAuditEventType</I> (see <A href="#LinkTarget_4301" href="#">
6.2.11</A>
).  </P
><P 

><B>Signature</B>  </P
><P 

><B>UnregisterApplication</B>( </P
><P 

>  [in] NodeId applicationId </P
><P 

> ); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The identifier assigned by the GDS to the <I>Application</I>. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The <I>Application</I><I>Id</I> is not known to the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_3949" href="#">
<FONT size="+1">Table 7</A>
 specifies the <I>AddressSpace</I> representation for the <I>UnregisterApplication Method</I>.  </P
><P 

><B>Table 7 &ndash; UnregisterApplication Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>UnregisterApplication </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_3992"
><FONT size="+1"><B> GetApplication </H3
><P 

></B><I>GetApplication</I> is used to find an OPC UA <I>Application</I> known to the GDS.<I> </I></P
><P 

><B>Signature</B>  </P
><P 

><B>GetApplication</B>( </P
><P 

>[in]  NodeId applicationId  </P
><P 

>[out] ApplicationRecordDataType application </P
><P 

>); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The <I>Application</I><I>Id</I> that identifies the <I>Application</I> of interest. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>application </P
></TD
><TD  
 valign="top"
><P 

>The application record that matches the <I>Application</I><I>Id</I><I>.</I>  </P
><P 

>The ApplicationRecordDataType is defined in <A href="#LinkTarget_3576" href="#">
6.2.5</A>
. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The no record found for the specified <I>Application</I><I>Id</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_4053" href="#">
<FONT size="+1">Table 8</A>
 specifies the <I>AddressSpace</I> representation for the <I>GetApplication Method</I>.  </P
><P 

><B>Table 8 &ndash; GetApplication Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>GetApplication </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_4110"
><FONT size="+1"><B> QueryServers </H3
><P 

></B><I>QueryServers </I> is used to find Servers that meet the specified filters.  </P
><P 

>Any <I>Client</I> is able to call this <I>Method</I>, however, the set of results returned may be restricted based on the <I>Client&rsquo;s</I> user credentials. </P
><P 

>The <I>Servers</I> returned shall pass all of the filters provided (i.e. the filters are combined in an AND operation). The <I>serverCapabilities</I> parameter is an array and a <I>Server</I> will pass this filter if it supports all of the specified capabilities. </P
><P 

>Each time the GDS creates or updates an <I>Application</I> record it shall assign a monotonically increasing identifier to the record. This allows <I>Clients</I> to request records in batches by specifying the identifier for the last record received in the last call to <I>QueryServers</I>. To support this the GDS shall return records in order starting from the lowest record identifier. The GDS shall also return the last time the counter was reset<I>. </I>If a <I>Client</I> detects that this time is more recent than the last time the <I>Client</I> called the <I>Method</I> it shall call the <I>Method</I> again with a <I>startingRecordId</I> of 0. </P
><P 

><B>Signature</B> </P
><P 

><B>QueryServers</B>( </P
><P 

>  [in]  UInt32 startingRecordId </P
><P 

>  [in]  UInt32 maxRecordsToReturn </P
><P 

>  [in]  String applicationName </P
><P 

>  [in]  String applicationUri   </P
><P 

>  [in]  String productUri  </P
><P 

>  [in]  String[] serverCapabilities   </P
><P 

>   [out] DateTime lastCounterResetTime   </P
><P 

>   [out] ServerOnNetwork[] servers </P
><P 

> ); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>INPUTS </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>startingRecordId </P
></TD
><TD  
 valign="top"
><P 

>Only records with an identifier greater than this number will be returned.  </P
><P 

>Specify 0 to start with the first record in the database. </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>maxRecordsToReturn </P
></TD
><TD  
 valign="top"
><P 

>The maximum number of records to return in the response. </P
><P 

>0 indicates that there is no limit. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applicationName </P
></TD
><TD  
 valign="top"
><P 

>The <I>ApplicationName</I> of the <I>Applications</I> to return. </P
><P 

>Supports the syntax used by the LIKE <I>FilterOperator</I> described in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. </P
><P 

>Not used if an empty string is specified. </P
><P 

>The filter is only applied to the default <I>ApplicationName</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applicationUri </P
></TD
><TD  
 valign="top"
><P 

>The <I>ApplicationUri</I> of the <I>Servers</I> to return. </P
><P 

>Supports the syntax used by the LIKE <I>FilterOperator</I> described in <A href="#LinkTarget_2606" href="#">
Part 4</A>
.  </P
><P 

>Not used if an empty string is specified. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>productUri </P
></TD
><TD  
 valign="top"
><P 

>The <I>ProductUri</I> of the <I>Servers</I> to return. </P
><P 

>Supports the syntax used by the LIKE <I>FilterOperator</I> described in <A href="#LinkTarget_2606" href="#">
Part 4</A>
.  </P
><P 

>Not used if an empty string is specified. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>serverCapabilities </P
></TD
><TD  
 valign="top"
><P 

>The <I>Servers</I> returned shall support all of the server capabilities specified. If no server capabilities are provided this filter is not used. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>OUTPUTS </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>lastCounterResetTime </P
></TD
><TD  
 valign="top"
><P 

>The last time the counters were reset. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>servers </P
></TD
><TD  
 valign="top"
><P 

>A list of <I>Servers</I> which meet the criteria. </P
><P 

>The <I>ServerOnNetwork</I> structure is defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_4243" href="#">
<FONT size="+1">Table 9</A>
 specifies the <I>AddressSpace</I> representation for the <I>QueryServers Method</I>.  </P
><P 

><B>Table 9 &ndash; QueryServers Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>QueryServers </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_4301"
><FONT size="+1"><B> ApplicationRegistrationChangedAuditEventType </H3
><P 

></B>This event is raised when the <I>RegisterApplication</I>, <I>UpdateApplication</I> or <I>UnregisterApplication</I> <I>Methods</I> are called. </P
><P 

>Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_4309" href="#">
Table 10</A>
. </P
><P 

><B>Table 10 &ndash; ApplicationRegistrationChangedAuditEventType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ApplicationRegistrationChangedAuditEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>GDS (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>Audit</I><I>UpdateMethod</I><I>EventType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditUpdateMethodEventType</I>. Their semantics are defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
><H1 
 ID="LinkTarget_4371"
><FONT size="+1"><B>7 Certificate Management Overview </H1
><H2 
 ID="LinkTarget_4372"
><FONT size="+1"> Overview </H2
><P 

></B>Certificate management functions comprise the management and distribution of certificates and <I>Trust Lists</I> for OPC UA Applications. An application that provides the certificate management functions is called <I>CertificateManager</I>. GDS and <I>CertificateManager</I> will typically be combined in one application. The basic concepts regarding <I>Certificate</I> management are described in <A href="#LinkTarget_2604" href="#">
Part 2</A>
. </P
><P 

>There are two primary models for <I>Certificate</I> management: pull and push management. In pull management, the application acts as a <I>Client</I> and uses the <I>Methods</I> on the <I>CertificateManager</I> to request and update <I>Certificates</I> and <I>Trust Lists</I>. The application is responsible for ensuring the <I>Certificates</I> and <I>Trust Lists</I> are kept up to date. In push management the application acts as a <I>Server</I> </P
><P 

>and exposes <I>Methods</I> which the <I>CertificateManager</I> can call to update the <I>Certificates</I> and <I>Trust Lists</I> as required. </P
><P 

>The GDS is intended to work in conjunction with different Certificate Management services such as Active Directory. The GDS provides a standard OPC UA based information model that all OPC UA applications can support without needing to know the specifics of a particular Certificate Management system.  </P
><P 

>The CertificateManager shall support the following use cases: </P
><DL 

><DD 

>&#61623; Provisioning (First time setup for a device/application); </DD
><DD 

>&#61623; Renewal (Renewing expired or compromised certificates); </DD
><DD 

>&#61623; Trust List Update (Updating the Trust Lists including the Revocation Lists); </DD
><DD 

>&#61623; Revocation (Removing a device/application from the system). </DD
></DL
><P 

>Although it is generally assumed that Client applications will use the Pull model and Server applications will use the Push model, this is not required.  </P
><P 

>During provisioning, the <I>CertificateManager</I> shall be able to operate in a mode where any <I>Client</I> is allowed to connect securely with any valid <I>Certificate</I> and user credentials are used to determine the rights a <I>Client</I> has; this eliminates the need to configure <I>Trust Lists</I> before connecting to the <I>CertificateManager</I> for provisioning. </P
><P 

><I>Application</I> vendors may decide to build the interaction with the <I>CertificateManager</I> as a separate component, e.g. as part of an administration application with access to the OPC UA configuration of this <I>Application</I>. This is transparent for the <I>CertificateManager</I> and will not be considered further in the rest of this chapter. </P
><P 

>This standard does not define how to administer a <I>CertificateManager</I> but a <I>CertificateManager</I> shall provide an integrated system that includes both push and pull management. </P
><H2 
 ID="LinkTarget_4397"
><B> Pull Management </H2
><P 

></B>Pull Management is performed by using the <I>CertificateManager</I> information model &ndash; in particular the Methods - defined in <A href="#LinkTarget_5903" href="#">
7.6</A>
. The interactions between <I>Application</I> and Certificate Manager during Pull Management are illustrated in <A href="#LinkTarget_4412" href="#">
Figure 12</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>loopApplicationAdministrationCertificateManagerApplicationConfigurationDatabaseRegisterApplicationStartSigningRequest or StartNewKeyPairRequestRequestIdFinishRequestWaitCertificateGetTrustListTrust ListCertificateTrust ListRead Configuration</DIV
></P
><P 

><B>Figure 12 &ndash; The Pull Certificate Management Model </P
><P 

></B>The Application Administration component may be part of the Application or a standalone utility that understands how the Application persists its configuration information in its Configuration Database. </P
><P 

>A similar process is used to renew certificates or to periodically update <I>Trust List</I>. </P
><P 

>Security in Pull management requires an encrypted channel and the use of <I>Administrator</I> credentials for the <I>CertificateManager</I> that ensure only authorized users can register new <I>Applications</I> and request an initial new <I>Certificate</I>. Once an <I>Application</I> has a <I>Certificate</I> it can use this <I>Certificate</I> to renew the <I>Certificate</I> or to update <I>Trust Lists </I>and<I> Revocation </I>lists. It is important that a <I>CertificateManager</I> does not provide certificate renewals except to the applications that already own the prior certificate.  </P
><H2 
 ID="LinkTarget_4416"
><B> Push Management </H2
><P 

></B>Push management is targeted at <I>Server</I> applications and relies on <I>Methods</I> defined in <A href="#LinkTarget_7309" href="#">
7.7</A>
 to get a <I>Certificate</I> Signing Request which can be passed onto the <I>CertificateManager.</I> After the <I>CertificateManager</I> signs the <I>Certificate</I> the new <I>Certificate</I> is pushed to the <I>Server</I> with the UpdateCertificate Method. </P
><P 

>The interactions between a <I>Server</I> <I>Application</I> and <I>CertificateManager</I> during Push Management are illustrated in <A href="#LinkTarget_4433" href="#">
Figure 13</A>
.  </P
><P 

>  <DIV class="Sect" 
 Alt=""
>loopAdministrationComponentCertificateManagerServerConfigurationDatabaseGetTrustListTrust ListUpdateCertificateTrustList.OpenTrust ListCertificateTrustList.WriteTrustList.CloseAndUpdateCreateSigningRequestTrust ListStartSigningRequestFinishRequestCertificate</DIV
></P
><P 

><B>Figure 13 &ndash; The Push Certificate Management Model </P
><P 

></B>The Administration Component may be part of the <I>CertificateManager</I> or a standalone utility that uses OPC UA to communicate with the <I>CertificateManager</I> (see <A href="#LinkTarget_4397" href="#">
7.2</A>
 for a more complete description of the interactions required for this use case). The Configuration Database is used by the Server to persist its configuration information. The <I>RegisterApplication</I> <I>Method</I> (or internal equivalent) is assumed to have been called before the sequence in the diagram starts. </P
><P 

>A similar process is used to renew certificates or to periodically update <I>Trust List</I>. </P
><P 

>Security when using the Push Management Model requires an encrypted channel and the use of Administrator credentials for the <I>Server</I> that ensure only authorized users can update <I>Certificates</I> or <I>Trust Lists</I>. In addition,  separate <I>Administrator</I> credentials are required for the <I>CertificateManager</I> that ensure only authorized users can register new <I>Servers</I> and request new <I>Certificates</I>.  </P
><H2 
 ID="LinkTarget_4442"
><B> Provisioning </H2
><P 

></B>Provisioning is the initial installation of an OPC UA <I>Server</I> or <I>Client</I> into a system in which a GDS is available and managing all certificates. For <I>Clients</I> provisioning can be accomplished using a pull model. Standard <I>Servers</I> can be provisioned using either the Pull or Push model. Once a <I>Server</I> is provisioned the management and maintenance of certificates can be accomplish using either the Pull or Push model.  </P
><P 

>OPC UA <I>Servers</I> will typically auto-generate a self-signed <I>Certificate</I> when they first start. They may also have a pre-configured <I>Trust List</I> with <I>Applications</I> that are allowed to provision the <I>Server</I>. For example, a device vendor may use a CA that is used to issue <I>Certificates</I> to <I>Applications</I> used by their field technicians.  </P
><P 

>For embedded devices, the <I>Server</I> should allow any <I>Client</I> that provides the proper <I>Administrator</I> credentials to create the secure connection needed for provisioning using push management. Once the device has been given its initial <I>Trust List</I> the <I>Server</I> should then restrict access to those <I>Clients</I> with <I>Certificates</I> in the <I>Trust List</I>. Devices that do not allow any <I>Client</I> to connect securely for provisioning will need to provide a vendor specific process for provisioning. </P
><P 

>See <A href="#LinkTarget_8956" href="#">
G.1</A>
 for more specific examples of how to provision an application. </P
><H2 
 ID="LinkTarget_4452"
><B> Common Information Model </H2
><H3 
 ID="LinkTarget_4454"
> Overview </H3
><P 

></B>The common information model defines types that are used in both the Push and the Pull Model. </P
><H3 
 ID="LinkTarget_4456"
><B> TrustListType </H3
><P 

></B>This type defines a <I>FileType</I> that can be used to access a <I>Trust List</I>. </P
><P 

>The CertificateManager uses this type to implement the Pull Model. </P
><P 

><I>Servers</I> use this type when implementing the Push Model. </P
><P 

>An instance of a <I>TrustListType</I> must restrict access to appropriate users or applications. This may be a CertificateManager administrative user that can change the contents of a <I>Trust List</I>, it may be an Administrative user that is reading a <I>Trust List </I>to deploy to an Application host or it may be an Application that can only access the Trust List assigned to it.  </P
><P 

>The <I>Trust List</I> file is a UA Binary encoded stream containing an instance of <I>TrustListDataType</I> (see <A href="#LinkTarget_5084" href="#">
7.5.7</A>
). <I> </I></P
><P 

>The <I>Open</I> <I>Method</I> shall not support modes other than Read (0x01) and the Write + EraseExisting (0x06).  </P
><P 

>When a <I>Client</I> opens the file for writing the <I>Server</I> will not actually update the <I>Trust List</I> until the <I>CloseAndUpdate</I> <I>Method</I> is called. Simply calling <I>Close</I> will discard the updates. The bit masks in <I>TrustListDataType</I> structure allow the <I>Client</I> to only update part of the <I>Trust List</I>. </P
><P 

>When the <I>CloseAndUpdate</I> <I>Method</I> is called the <I>Server</I> will validate all new <I>Certificates</I> and <I>CRLs. </I>If this validation fails the <I>Trust List</I> is not updated and the <I>Server</I> returns the appropriate <I>Certificate</I> error code (see <A href="#LinkTarget_2606" href="#">
Part 4</A>
).  </P
><P 

><B>Table 11 &ndash; TrustListType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>TrustListType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>FileType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastUpdateTime </P
></TD
><TD  
 valign="top"
><P 

>UtcTime </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>OpenWithMasks </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_4621" href="#">
7.5.3</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>CloseAndUpdate </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_4734" href="#">
7.5.4</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>AddCertificate </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_4866" href="#">
7.5.5</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>RemoveCertificate </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_4977" href="#">
7.5.6</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>The <I>LastUpdateTime</I> indicates when the <I>Trust List</I> was last updated via <I>Trust List</I> <I>Object</I> <I>Methods</I>. This can be used to determine if a device has an up to date <I>Trust List</I> or to detect unexpected modifications. Out of band changes are not necessarily reported by this value. </P
><P 

> </P
><P 

>If auditing is supported, the CertificateManager shall generate the <I>TrustListUpdatedAuditEventType</I> (see <A href="#LinkTarget_5151" href="#">
7.5.8</A>
) if the <I>CloseAndUpdate</I>, <I>AddCertificate</I> or <I>RemoveCertificate</I> <I>Methods</I> are called. </P
><P 

> </P
><H3 
 ID="LinkTarget_4621"
><B> OpenWithMasks </H3
><P 

></B>The <I>OpenWithMasks</I> <I>Method</I> allows a <I>Client</I> to read only the portion of the <I>Trust List.</I>  </P
><P 

>This <I>Method</I> can only be used to read the <I>Trust List</I>. </P
><P 

><B>Signature</B> </P
><P 

><B>OpenWithMasks</B>( </P
><P 

>  [in]  UInt32 masks </P
><P 

>  [out] UInt32 fileHandle  </P
><P 

> ); </P
><P 

>    </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>masks </P
></TD
><TD  
 valign="top"
><P 

>The parts of the <I>Trust List</I> that are include in the file to read. </P
><P 

>The masks are defined in <A href="#LinkTarget_5151" href="#">
7.5.8</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>fileHandle </P
></TD
><TD  
 valign="top"
><P 

>The handle of the newly opened file. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_4677" href="#">
<FONT size="+1">Table 12</A>
 specifies the <I>AddressSpace</I> representation for the <I>OpenWithMasks Method</I>.  </P
><P 

><B>Table 12 &ndash; OpenWithMasks Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>OpenWithMasks </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_4734"
><FONT size="+1"><B> CloseAndUpdate </H3
><P 

></B>The <I>CloseAndUpdate</I> <I>Method</I> closes the file and applies the changes to the <I>Trust List</I>. It can only be called if the file was opened for writing. If the <I>Close</I> <I>Method</I> is called any cached data is discarded and the <I>Trust List</I> is not changed. </P
><P 

>The <I>Server</I> shall verify that every <I>Certificate</I> in the new <I>Trust List</I> is valid according to the mandatory rules defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. If an invalid <I>Certificate</I> is found the <I>Server</I> shall return an error and shall not update the <I>Trust List</I>. If only part of the <I>Trust List</I> is being updated the <I>Server</I> creates a temporary <I>Trust List</I> that includes the existing <I>Trust List</I> plus any updates and validates the temporary <I>Trust List</I>.  </P
><P 

>If the file cannot be processed this <I>Method</I> still closes the file and discards the data before returning an error. This <I>Method</I> is required if the <I>Server</I> supports updates to the <I>Trust List</I>.  </P
><P 

>The structure uploaded includes a mask (see <A href="#LinkTarget_5151" href="#">
7.5.8</A>
) which specifies which fields are updated. If a bit is not set then the associated field is not changed. </P
><P 

><B>Signature</B> </P
><P 

><B>CloseAndUpdate</B>( </P
><P 

>  [in]  UInt32 fileHandle  </P
><P 

>  [out] Boolean applyChangesRequired  </P
><P 

> ); </P
><P 

>    </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>fileHandle </P
></TD
><TD  
 valign="top"
><P 

>The handle of the previously opened file. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applyChangesRequired </P
></TD
><TD  
 valign="top"
><P 

>A flag indicating whether the <I>ApplyChanges</I> Method (see <A href="#LinkTarget_7808" href="#">
7.7.5</A>
) must be called before the new <I>Trust List</I> will be used by the <I>Server</I>.  </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_CertificateInvalid </P
></TD
><TD  
 valign="top"
><P 

>The Server could not validate all Certificates in the Trust List. </P
><P 

>The DiagnosticInfo shall specify which Certificate(s) are invalid and the specific error. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_4808" href="#">
<FONT size="+1">Table 13</A>
 specifies the <I>AddressSpace</I> representation for the <I>CloseAndUpdate Method</I>.  </P
><P 

><B>Table 13 &ndash; CloseAndUpdate Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CloseAndUpdate </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_4866"
><FONT size="+1"><B> AddCertificate </H3
><P 

></B>The <I>AddCertificate</I> <I>Method</I> allows a <I>Client</I> to add a single <I>Certificate</I> to the <I>Trust List</I>. The <I>Server</I> shall verify that the <I>Certificate</I> is valid according to the rules defined in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. If an invalid <I>Certificate</I> is found the <I>Server</I> shall return an error and shall not update the <I>Trust List</I>. </P
><P 

> </P
><P 

>This method cannot be called if the file object is open. </P
><P 

> </P
><P 

><B>AddCertificate</B>( </P
><P 

>  [in] ByteString certificate </P
><P 

>  [in] Boolean isTrustedCertificate </P
><P 

> ); </P
><P 

>    </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description</B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Certificate </P
></TD
><TD  
 valign="top"
><P 

>The DER encoded Certificate to add. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>isTrustedCertificate </P
></TD
><TD  
 valign="top"
><P 

>If TRUE the Certificate is added to the Trusted Certificates List. </P
><P 

>If FALSE the Certificate is added to the Issuer Certificates List. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_CertificateInvalid </P
></TD
><TD  
 valign="top"
><P 

>The certificate to add is invalid. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidState </P
></TD
><TD  
 valign="top"
><P 

>The object is opened. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_3520" href="#">
<FONT size="+1">Table 3</A>
 specifies the <I>AddressSpace</I> representation for the <I>AddCertificate Method</I>.  </P
><P 

><B>Table 14 &ndash; AddCertificate Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AddCertificate </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_4977"
><FONT size="+1"><B> RemoveCertificate </H3
><P 

></B>The <I>RemoveCertificate</I> <I>Method</I> allows a <I>Client</I> to remove a single <I>Certificate</I> from the <I>Trust List</I>. It returns <I>Bad_InvalidArgument</I> if the thumbprint does not match a Certificate in the <I>Trust List</I>. </P
><P 

>This method cannot be called if the file object is open. </P
><P 

> </P
><P 

><B>RemoveCertificate</B>( </P
><P 

>  [in] String thumbprint </P
><P 

>  [in] Boolean isTrustedCertificate </P
><P 

> ); </P
><P 

>    </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Thumbprint </P
></TD
><TD  
 valign="top"
><P 

>The SHA1 hash of the <I>Certificate</I> to remove. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>isTrustedCertificate </P
></TD
><TD  
 valign="top"
><P 

>If TRUE the Certificate is removed from the Trusted Certificates List. </P
><P 

>If FALSE the Certificate is removed from the Issuer Certificates List. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The certificate to remove was not found. </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidState </P
></TD
><TD  
 valign="top"
><P 

>The object is opened. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_3520" href="#">
<FONT size="+1">Table 3</A>
 specifies the <I>AddressSpace</I> representation for the <I>RemoveCertificate Method</I>.  </P
><P 

><B>Table 15 &ndash; RemoveCertificate Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>RemoveCertificate </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_5084"
><FONT size="+1"><B> TrustListDataType </H3
><P 

></B>This type defines a DataType which stores the Trust List of a <I>Server. </I></P
><P 

><B>Table 16 &ndash; TrustListDataType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>TrustListDataType </P
></TD
><TD  
 valign="top"
><P 

>structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>specifiedLists </P
></TD
><TD  
 valign="top"
><P 

>TrustListMasks </P
></TD
><TD  
 valign="top"
><P 

>A bit mask which indicates which lists contain information. </P
><P 

>The <I>TrustListMasks</I> enumeration in <A href="#LinkTarget_5151" href="#">
7.5.8</A>
 defines the allowed values. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>trustedCertificates </P
></TD
><TD  
 valign="top"
><P 

>ByteString[] </P
></TD
><TD  
 valign="top"
><P 

>The list of <I>Application</I> and CA <I>Certificates</I> which are trusted. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>trustedCrls </P
></TD
><TD  
 valign="top"
><P 

>ByteString[] </P
></TD
><TD  
 valign="top"
><P 

>The CRLs for the CA <I>Certificates</I> in the <I>trustedCertificates</I> list. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>issuerCertificates </P
></TD
><TD  
 valign="top"
><P 

>ByteString[] </P
></TD
><TD  
 valign="top"
><P 

>The list of CA <I>Certificates</I> which are necessary to validate <I>Certificates</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>issuerCrls </P
></TD
><TD  
 valign="top"
><P 

>ByteString[] </P
></TD
><TD  
 valign="top"
><P 

>The CRLs for the CA <I>Certificates</I> in the <I>issuerCertificates</I> list. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5151"
><B> TrustListMasks </H3
><P 

></B>This is a DataType that defines the values used for the SpecifiedLists field in the <I>TrustListDataType</I>. Its values are defined in <A href="#LinkTarget_5158" href="#">
Table 17</A>
. <I> </I></P
><P 

><B>Table 17 &ndash; TrustListMasks Values </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Value </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>None_0 </P
></TD
><TD  
 valign="top"
><P 

>No fields are provided. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>TrustedCertificates_1 </P
></TD
><TD  
 valign="top"
><P 

>The TrustedCertificates are provided. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>TrustedCrls_2 </P
></TD
><TD  
 valign="top"
><P 

>The TrustedCrls are provided. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IssuerCertificates_4 </P
></TD
><TD  
 valign="top"
><P 

>The IssuerCertificates are provided. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IssuerCrls_8 </P
></TD
><TD  
 valign="top"
><P 

>The IssuerCrls are provided. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>All_15 </P
></TD
><TD  
 valign="top"
><P 

>All fields are provided. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5203"
><B> CertificateGroupType </H3
><P 

></B>This type is used for <I>Objects</I> which represent <I>Certificate Groups</I> in the <I>AddressSpace</I>. A <I>Certificate Group</I> is a context that contains a <I>Trust List</I> and one or more <I>Certificates</I> that can be assigned to an <I>Application</I>. This type exists to allow an <I>Application</I> which has multiple <I>Trust Lists</I> and/or <I>Application Certificates</I> to express them in its <I>AddressSpace</I>. This type is defined in <A href="#LinkTarget_5210" href="#">
Table 18</A>
. </P
><P 

><B>Table 18 &ndash; CertificateGroupType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroupType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>BaseObject</I><I>Type</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>TrustList </P
></TD
><TD  
 valign="top"
><P 

>- </P
></TD
><TD  
 valign="top"
><P 

>TrustListType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CertificateTypes </P
></TD
><TD  
 valign="top"
><P 

>NodeId[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>The <I>TrustList</I> <I>Object</I> is the <I>Trust List</I> associated with the <I>Certificate Group</I>.  </P
><P 

> </P
><P 

>The <I>CertificateTypes</I> <I>Property</I> specifies the <I>NodeIds</I> of the <I>CertificateTypes</I> which may be assigned to <I>Applications</I> which belong to the <I>Certificate Group</I>. For example, a <I>Certificate Group</I> with the <I>NodeId</I> of <I>RsaMinApplicationCertificateType</I> (see <A href="#LinkTarget_5559" href="#">
7.5.13</A>
) and the <I>NodeId</I> <I>RsaSha256ApplicationCertificate</I> (see <A href="#LinkTarget_5626" href="#">
7.5.14</A>
) specified allows an <I>Application</I> to have one </P
><P 

><I>ApplicationInstance</I> <I>Certificates</I> for each type. Abstract base types may be used in this value and indicate that any subtype is allowed. If this list is empty then the <I>Certificate Group</I> does not allow <I>Certificates</I> to be assigned to <I>Applications</I> (i.e. the <I>Certificate Group</I> exists to allow the associated <I>Trust List</I> to be read or updated). All <I>CertificateTypes</I> for a given <I>Certificate Group</I> shall be subtypes of a single common type which shall be either <I>ApplicationCertificateType</I> or <I>HttpsCertificateType</I>. </P
><P 

> </P
><H3 
 ID="LinkTarget_5313"
><B> CertificateType </H3
><P 

></B>This type is an abstract base type for types that describe the purpose of a <I>Certificate</I>. This type is defined in <A href="#LinkTarget_5320" href="#">
Table 19</A>
. </P
><P 

><B>Table 19 &ndash; CertificateType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CertificateType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>BaseObjectType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasSubtype </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>ApplicationCertificateType </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_5405" href="#">
7.5.11</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasSubtype </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>HttpsCertificateType </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_5497" href="#">
7.5.12</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5405"
><B> ApplicationCertificateType </H3
><P 

></B>This type is an abstract base type for types that describe the purpose of an <I>ApplicationInstance</I> <I>Certificate</I>. This type is defined in <A href="#LinkTarget_5412" href="#">
Table 20</A>
. </P
><P 

><B>Table 20 &ndash; ApplicationCertificateType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ApplicationCertificateType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>CertificateType</I> defined in <A href="#LinkTarget_5313" href="#">
7.5.10</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasSubtype </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>RsaMinApplicationCertificateType </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_5559" href="#">
7.5.13</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasSubtype </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>RsaSha256ApplicationCertificateType </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_5626" href="#">
7.5.14</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5497"
><B> HttpsCertificateType </H3
><P 

></B>This type is used to describe Certificates that are intended for use as HTTPS <I>Certificates</I>. This type is defined in <A href="#LinkTarget_5504" href="#">
Table 21</A>
. </P
><P 

><B>Table 21 &ndash; HttpsCertificateType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>HttpsCertificateType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule</B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Subtype of the <I>CertificateType</I> defined in <A href="#LinkTarget_5313" href="#">
7.5.10</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5559"
><B> RsaMinApplicationCertificateType </H3
><P 

></B>This type is used to describe <I>Certificates</I> intended for use as an <I>ApplicationInstance</I> <I>Certificate</I>. They shall have an RSA key size of 1024 or 2048 bits and are signed with a SHA1 hash. All <I>Applications</I> which support the <I>Basic128Rsa15</I> and <I>Basic256</I> profiles (see <A href="#LinkTarget_2609" href="#">
Part 7</A>
) need a <I>Certificate</I> of this type. This type is defined in <A href="#LinkTarget_5570" href="#">
Table 22</A>
. </P
><P 

><B>Table 22 &ndash; RsaMinApplicationCertificateType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>RsaMinApplicationCertificateType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition</B> </P
></TD
><TD  
 valign="top"
><P 

><B>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>Application</I><I>CertificateType</I> defined in <A href="#LinkTarget_5405" href="#">
7.5.11</A>
 </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5626"
><B> RsaSha256ApplicationCertificateType </H3
><P 

></B>This type is used to describe <I>Certificates</I> intended for use as an <I>ApplicationInstance</I> <I>Certificate</I>. They shall have an RSA key size of 2048, 3072 or 4096 bits and are signed with a SHA256 hash. All <I>Applications</I> which support the <I>Basic256Sha256 </I>profile (see <A href="#LinkTarget_2609" href="#">
Part 7</A>
) need a <I>Certificate</I> of this type. This type is defined in <A href="#LinkTarget_5637" href="#">
Table 23</A>
. </P
><P 

><B>Table 23 &ndash; RsaSha256ApplicationCertificateType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>RsaSha256ApplicationCertificateType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>ApplicationCertificateType</I> defined in <A href="#LinkTarget_5405" href="#">
7.5.11</A>
 </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5692"
><B> CertificateGroupFolderType </H3
><P 

></B>This type is used for <I>Folders</I> which organize <I>Certificate Groups</I> in the <I>AddressSpace</I>. This type is defined in <A href="#LinkTarget_5210" href="#">
Table 18</A>
. </P
><P 

><B>Table 24 &ndash; CertificateGroupFolderType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroupFolderType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>FolderType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Organizes </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>DefaultApplicationGroup </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroupType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Organizes </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>DefaultHttpsGroup </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroupType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Organizes </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>DefaultUserTokenGroup </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroupType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Organizes </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>&lt;AdditionalGroup&gt; </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroupType </P
></TD
><TD  
 valign="top"
><P 

>Optional Placeholder </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>The <I>DefaultApplicationGroup</I> <I>Object</I> represents the default <I>Certificate Group</I> for <I>Applications</I>. It is used to access the default <I>Application Trust List</I> and to define the <I>CertificateTypes</I> allowed for the <I>ApplicationInstance</I> <I>Certificate</I>. This <I>Object</I> shall specify the <I>ApplicationCertificateType</I> <I>NodeId</I> (see <A href="#LinkTarget_5405" href="#">
7.5.11</A>
) as a single entry in the <I>CertificateTypes</I> list or it shall specify one or more subtypes of <I>ApplicationCertificateType</I>.  </P
><P 

>The <I>DefaultHttpsGroup</I> <I>Object</I> represents the default <I>Certificate Group</I> for HTTPS communication. It is used to access the default HTTPS<I> Trust List</I> and to define the <I>CertificateTypes</I> allowed for the <I>HTTPS</I> <I>Certificate</I>. This <I>Object</I> shall specify the <I>HttpsCertificateType</I> <I>NodeId</I> (see <A href="#LinkTarget_5497" href="#">
7.5.12</A>
) as a single entry in the <I>CertificateTypes</I> list or it shall specify one or more subtypes of <I>HttpsCertificateType</I>.  </P
><P 

>This <I>DefaultUserTokenGroup</I> <I>Object</I> represents the default <I>Certificate Group</I> for validating user credentials. It is used to access the default user credential <I>Trust List</I> and to define the <I>CertificateTypes</I> allowed for user credentials <I>Certificate</I>. This <I>Object</I> shall leave <I>CertificateTypes</I>  list empty. </P
><H3 
 ID="LinkTarget_5828"
><B> TrustListUpdatedAuditEventType  </H3
><P 

></B>This event is raised when a <I>Trust List</I> is changed. </P
><P 

>This is the result of a <I>CloseAndUpdate</I> <I>Method</I> on a <I>TrustListType</I> <I>Object</I> being called. </P
><P 

>It shall also be raised when the <I>AddCertificate</I> or <I>RemoveCertificate</I> Method causes an update to the <I>Trust List</I>.<I> </I></P
><P 

>Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_5839" href="#">
Table 25</A>
. </P
><P 

><B>Table 25 &ndash; TrustListUpdatedAuditEventType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>TrustListUpdatedAuditEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditUpdateMethodEventType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditUpdateMethodEventType</I>. Their semantic is defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
><H2 
 ID="LinkTarget_5903"
><B> Information Model for Pull Certificate Management </H2
><H3 
 ID="LinkTarget_5904"
> Overview </H3
><P 

></B>The<I> GlobalDiscoveryServer</I> <I>AddressSpace</I> used for <I>Certificate</I> management is shown in <A href="#LinkTarget_5913" href="#">
Figure 14</A>
. Most of the interactions between the <I>GlobalDiscoveryServer</I> and <I>Application</I> administrator or the <I>Client</I> will be via <I>Methods</I> defined on the <I>Directory</I> folder.  </P
><P 

>  </P
><IMG Alt="" width="1988" height="1207"
 src="images/OPC UA Part 12 - Discovery 1.03 Specification_img_0.jpg" ><P 

><B>Figure 14 &ndash; The Certificate Management AddressSpace for the GlobalDiscoveryServer </P
><H3 
 ID="LinkTarget_5914"
> CertificateDirectoryType </H3
><P 

></B>This <I>ObjectType</I> is the <I>TypeDefinition</I> for the root of the <I>CertificateManager</I> <I>AddressSpace</I>. It provides additional <I>Methods</I> for <I>Certificate</I> management which are shown in <A href="#LinkTarget_5921" href="#">
Table 26</A>
.  </P
><P 

><B>Table 26 &ndash; CertificateDirectoryType ObjectType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CertificateDirectoryType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>GDS (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule</B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Subtype of the <I>DirectoryType</I> defined in <A href="#LinkTarget_3279" href="#">
6.2.3</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Organizes </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroups </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroup </P
><P 

>FolderType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>StartSigningRequest </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_6120" href="#">
7.6.3</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>StartNewKeyPairRequest </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_6319" href="#">
7.6.4</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>FinishRequest  </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_6522" href="#">
7.6.5</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>GetCertificateGroups </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_6691" href="#">
7.6.6</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>GetTrustList </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_6691" href="#">
7.6.6</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>GetCertificateStatus </P
></TD
><TD  
 valign="top"
><P 

>Defined in <A href="#LinkTarget_6947" href="#">
7.6.8</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The <I>CertificateGroups</I> <I>Object</I> organizes the <I>Certificate Groups</I> supported by the <I>CertificateManager</I>. It is described in <A href="#LinkTarget_5692" href="#">
7.5.15</A>
. <I>CertificateManagers</I> shall support the <I>DefaultApplicationGroup</I> and may support the <I>DefaultHttpsGroup</I> or the <I>DefaultUserTokenGroup</I>. <I>CertificateManagers</I> may support additional <I>Certificate Groups</I> depending on their requirements. For example, a <I>CertificateManager</I> with multiple Certificate Authorities would represent each as a <I>CertificateGroupType</I> Object organized by <I>CertificateGroups Folder. Clients </I>could then request <I>Certificates</I> issued by a specific CA by passing the appropriate <I>NodeId</I> to the <I>StartSigningRequest</I> or <I>StartNewKeyPairRequest</I> <I>Methods</I>. </P
><P 

>The <I>StartSigningRequest Method</I> is used to request a new a <I>Certificate</I> that is signed by a CA managed by the <I>CertificateManager</I>. This <I>Method</I> is recommended when the caller already has a private key. </P
><P 

>The <I>StartNewKeyPairRequest</I> <I>Method</I> is used to request a new <I>Certificate</I> that is signed by a CA<I> </I>managed by the <I>CertificateManager</I> along with a new private key. This <I>Method</I> is used only when the caller does not have a private key and cannot generate one. </P
><P 

>The <I>FinishRequest </I> <I>Method</I> is used to check that a <I>Certificate</I> request has been approved by the <I>CertificateManager</I> <I>Administrator</I>. If successful the <I>Certificate</I> and <I>Private Key</I> (if requested) are returned<I>.  </I></P
><P 

>The<I> GetCertificateGroups Method </I>returns a list of <I>NodeIds</I> for <I>CertificateGroupType</I> <I>Objects</I> that can be used to request <I>Certificates</I> or <I>Trust Lists </I>for an <I>Application</I>. </P
><P 

>The<I> GetTrustList Method </I>returns a <I>NodeId</I> of a <I>TrustListType Object</I> that can be used to read a <I>Trust List</I> for an <I>Application</I>. </P
><P 

>The <I>GetCertificateStatus</I> <I>Method</I> checks whether the <I>Application</I> needs to update its <I>Certificate</I>. </P
><H3 
 ID="LinkTarget_6120"
><B> StartSigningRequest </H3
><P 

></B><I>StartSigningRequest</I> is used to initiate a request to create a <I>Certificate</I> which uses the private key which the caller currently has. The new <I>Certificate</I> is returned in the <I>FinishRequest </I> response. </P
><P 

><B>Signature</B> </P
><P 

><B>StartSigningRequest</B>( </P
><P 

>  [in]  NodeId applicationId </P
><P 

>  [in]  NodeId certificateGroupId </P
><P 

>  [in]  NodeId certificateTypeId </P
><P 

>  [in]  ByteString certificateRequest </P
><P 

>  [out] NodeId requestId </P
><P 

> ); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The identifier assigned to the <I>Application</I><I> </I>record<I> </I>by the <I>CertificateManager</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateGroupId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> of the Certificate Group which provides the context for the new request.  </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
></TD><TD  
 valign="top"
><P 

>If null the <I>CertificateManager</I> shall choose the <I>DefaultApplicationGroup</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateTypeId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> of the <I>CertificateType</I> for the new <I>Certificate</I>.  </P
><P 

>If null the <I>CertificateManager</I> shall generate a <I>Certificate</I> based on the value of the certificateGroupId argument.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateRequest </P
></TD
><TD  
 valign="top"
><P 

>A <I>C</I><I>ertificate</I><I>Request </I>used to prove possession of the <I>Private Key</I>. </P
><P 

>It is a <A href="#LinkTarget_2647" href="#">
PKCS #10</A>
 encoded blob in DER format. </P
><P 

>This blob shall include the <I>subjectAltName</I> extension that is in the <I>Certificate</I><I>.</I>  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>requestId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> that represents the request.  </P
><P 

>This value is passed to <I>FinishRequest </I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>The call returns the <I>NodeId</I> that is passed to the <I>FinishRequest </I> <I>Method</I>.  </P
><P 

>The <I>certificateGroupId</I> parameter allows the caller to specify a <I>Certificate Group </I>that provides context for the request. If null the <I>CertificateManager</I> shall choose the <I>DefaultApplicationGroup</I>. The set of available <I>Certificate Groups</I> are found in the <I>CertificateGroups</I> folder described in <A href="#LinkTarget_5914" href="#">
7.6.2</A>
. The <I>Certificate Groups</I> allowed for an <I>Application</I> are returned by the <I>GetCertificateGroups</I> <I>Method</I> (see <A href="#LinkTarget_6691" href="#">
7.6.6</A>
). </P
><P 

>The <I>certificateTypeId </I>parameter specifies the type of <I>Certificate</I> to return. The permitted values are specified by the CertificateTypes Property of the Object specified by the certificateGroupId parameter. </P
><P 

>The <I>certificateRequest</I> parameter is a DER encoded <I>Certificate Request</I>. The subject name, subject alternative name and public key are copied into the new <I>Certificate</I>.  </P
><P 

>If the <I>certificateTypeId</I> is a subtype of <I>ApplicationCertificateType</I> the subject name shall have an organization (O=) or domain name (DC=) field. The public key length shall meet the length restrictions for the <I>CertificateType.</I> If the <I>certificateType</I> is a subtype of <I>HttpsCertificateType</I> the <I>Certificate</I> common name (CN=) shall be the same as a domain from a <I>DiscoveryUrl</I> which uses HTTPS and the subject name shall have an organization (O=) field. The public key length shall be greater than or equal to 1024 bits. </P
><P 

>The <I>ApplicationUri</I> shall be specified in the CSR. The <I>CertificateManager</I> shall return <I>Bad_CertificateUriInvalid </I>if the stored <I>ApplicationUri</I> for the Application is different from what is in the CSR.  </P
><P 

>For <I>Servers</I>, the list of domain names shall be specified in the CSR. The domains shall include the domain(s) in the <I>DiscoveryUrls</I> known to the <I>CertificateManager</I>. </P
><P 

>This <I>Method</I> can be invoked by a configuration tool which has provided user credentials with necessary access permissions. It can also be invoked by the <I>Application</I> that owns the private key used to sign the <I>CertificateRequest</I> (e.g. the private key must be the private key used to create the <I>SecureChannel</I>). </P
><P 

>If auditing is supported, the <I>CertificateManager</I> shall generate the <I>CertificateRequestedAuditEventType </I>(see <A href="#LinkTarget_7086" href="#">
7.6.9</A>
) if this <I>Method</I> succeeds or fails. </P
><P 

><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The <I>applicationId</I> does not refer to a registered <I>Application</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The certificateGroupId, <I>certificate</I><I>Type</I><I>Id</I><I> </I>or <I>certificat</I><I>e</I><I>Request</I> is not valid. </P
><P 

>The text associated with the error shall indicate the exact problem. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_RequestNotAllowed </P
></TD
><TD  
 valign="top"
><P 

>The current configuration of the <I>CertificateManager</I> does not allow the request.  </P
><P 

>The text associated with the error should indicate the exact reason. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_CertificateUriInvalid </P
></TD
><TD  
 valign="top"
><P 

>The ApplicationUri was not specified in the CSR or does not match the Application record. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_NotSupported </P
></TD
><TD  
 valign="top"
><P 

>The signing algorithm, public algorithm or public key size are not supported by the <I>CertificateManager</I><I>. </I>The text associated with the error shall indicate the exact problem. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_6260" href="#">
<FONT size="+1">Table 27</A>
 specifies the <I>AddressSpace</I> representation for the <I>StartSigningRequest Method</I>.  </P
><P 

><B>Table 27 &ndash; StartSigningRequest Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>StartSigningRequest </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_6319"
><FONT size="+1"><B> StartNewKeyPairRequest </H3
><P 

></B>This <I>Method</I> is used to start a request for a new <I>Certificate</I> and <I>Private Key</I>. The <I>Certificate</I> and private key are returned in the <I>FinishRequest </I>response. </P
><P 

><B>Signature</B> </P
><P 

><B>StartNewKeyPairRequest</B>( </P
><P 

>  [in]  NodeId applicationId </P
><P 

>  [in]  NodeId certificateGroupId </P
><P 

>  [in]  NodeId certificateTypeId </P
><P 

>  [in]  String subjectName </P
><P 

>  [in]  String[] domainNames </P
><P 

>  [in]  String privateKeyFormat </P
><P 

>  [in]  String privateKeyPassword   </P
><P 

> [out] NodeId requestId </P
><P 

> ); </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The identifier assigned to the <I>ApplicationInstance</I> by the <I>CertificateManager</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateGroupId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> of the Certificate Group which provides the context for the new request.  </P
><P 

>If null the <I>CertificateManager</I> shall choose the <I>DefaultApplicationGroup</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateTypeId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> of the <I>CertificateType</I> for the new <I>Certificate</I>.  </P
><P 

>If null the <I>CertificateManager</I> shall generate a <I>Certificate</I> based on the value of the certificateGroupId argument.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>subjectName </P
></TD
><TD  
 valign="top"
><P 

>The subject name to use for the <I>Certificate</I>. </P
><P 

>If not specified the <I>ApplicationName</I> and/or <I>domainNames</I> are used  to create a suitable default value. </P
><P 

>The format of the subject name is a sequence of name value pairs separated by a &lsquo;/&rsquo; or a &lsquo;,&rsquo;. The name shall be one of &lsquo;CN&rsquo;, &lsquo;O&rsquo;, &lsquo;OU&rsquo;, &lsquo;DC&rsquo;, &lsquo;L&rsquo;, &lsquo;S&rsquo; or &lsquo;C&rsquo; and shall be followed by a &lsquo;=&rsquo; and then followed by the value. The value may be any printable character except for &lsquo;&rdquo;&rsquo;. If the value contains a &lsquo;,&rsquo;, &lsquo;/&rsquo; or a &lsquo;=&rsquo; then it shall be enclosed in double quotes (&lsquo;&rdquo;&rsquo;).   </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>domainNames </P
></TD
><TD  
 valign="top"
><P 

>The domain names to include in the <I>Certificate</I>.  </P
><P 

>If not specified the <I>DiscoveryUrls</I> are used to create suitable defaults. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>privateKeyFormat </P
></TD
><TD  
 valign="top"
><P 

>The format of the private key. </P
><P 

>The following values are always supported: </P
><P 

> PFX - PKCS #12 encoded </P
><P 

> PEM - Base64 encoded </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>privateKeyPassword </P
></TD
><TD  
 valign="top"
><P 

>The password to use for the private key. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>requestId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> that represents the request.  </P
><P 

>This value is passed to <I>FinishRequest</I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>The call returns the <I>NodeId</I> that is passed to the <I>FinishRequest Method</I>.  </P
><P 

>The <I>certificateGroupId</I> parameter allows the caller to specify a <I>Certificate Group </I>that provides context for the request. If null the <I>CertificateManager</I> shall choose the <I>DefaultApplicationGroup</I>. The set of available <I>Certificate Groups</I> are found in the <I>CertificateGroups</I> folder described in <A href="#LinkTarget_5914" href="#">
7.6.2</A>
. The <I>Certificate Groups</I> allowed for an <I>Application</I> are returned by the <I>GetCertificateGroups</I> <I>Method</I> (see <A href="#LinkTarget_6691" href="#">
7.6.6</A>
). </P
><P 

>The <I>certificateTypeId </I>parameter specifies the type of <I>Certificate</I> to return. The permitted values are specified by the <I>CertificateTypes</I> <I>Property</I> of the <I>Object</I> specified by the certificateGroupId parameter. </P
><P 

>The <I>subjectName</I> parameter is a sequence of X500 name value pairs separated by a &lsquo;/&rsquo;. For example: CN=ApplicationName/OU=Group/O=Company.  </P
><P 

>If the <I>certificateType</I> is a subtype of <I>ApplicationCertificateType</I> the <I>Certificate</I> subject name shall have an organization (O=) or domain name (DC=) field. The public key length shall meet the length restrictions for the <I>CertificateType.</I> </P
><P 

>If the <I>certificateType</I> is a subtype of <I>HttpsCertificateType</I> the <I>Certificate</I> common name (CN=) shall be the same as a domain from a <I>DiscoveryUrl</I> which uses HTTPS and the subject name shall have an organization (O=) field. The public key length shall be greater than or equal to 1024 bits. </P
><P 

>If the subjectName is blank or null the <I>CertificateManager</I> generates a suitable default. </P
><P 

>The <I>domainNames</I> parameter is list of domains to be includes in the <I>Certificate</I>. If it is null or empty the GDS uses the <I>DiscoveryUrls</I> of the <I>Server</I> to create a list. For <I>Clients</I> the <I>domainNames</I> are omitted from the <I>Certificate</I> if they are not explicitly provided. </P
><P 

>The <I>privateKeyFormat</I> specifies the format of the private key returned. All <I>CertificateManager</I> implementations shall support &ldquo;PEM&rdquo; and &ldquo;PFX&rdquo;.  </P
><P 

>The <I>privateKeyPassword</I> specifies the password on the private key. The <I>CertificateManager</I> shall not persist this information and shall discard it once the new private key is generated. </P
><P 

>This <I>Method</I> can be invoked by a configuration tool which has provided user credentials with necessary access permissions.  </P
><P 

>If auditing is supported, the <I>CertificateManager</I> shall generate the <I>CertificateRequested AuditEventType </I>(see <A href="#LinkTarget_7086" href="#">
7.6.9</A>
) if this <I>Method</I> succeeds or fails.  </P
><P 

><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NodeIdUnknown  </P
></TD
><TD  
 valign="top"
><P 

>The <I>applicationId</I> does not refer to a registered <I>Application</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The certificateGroupId, <I>certificate</I><I>Type</I><I>Id</I>, <I>subje</I><I>ctName</I>, <I>domainNames</I><I> </I><I>or </I><I>privateKeyFormat</I> parameter is not valid.  </P
><P 

>The text associated with the error shall indicate the exact problem. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied  </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_RequestNotAllowed  </P
></TD
><TD  
 valign="top"
><P 

>The current configuration of the CertificateManager does not allow the request.  </P
><P 

>The text associated with the error should indicate the exact reason. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_6465" href="#">
<FONT size="+1">Table 28</A>
 specifies the <I>AddressSpace</I> representation for the <I>StartNewKeyPairRequest Method</I>.  </P
><P 

><B>Table 28 &ndash; StartNewKeyPairRequest Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>StartNewKeyPairRequest </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_6522"
><FONT size="+1"><B> FinishRequest  </H3
><P 

></B><I>FinishRequest </I>is used to finish a certificate request started with a call to <I>StartNewKeyPairRequest</I> or <I>StartSigningRequest</I>. </P
><P 

><B>Signature</B> </P
><P 

><B>FinishRequest </B>( </P
><P 

>  [in]  NodeId applicationId </P
><P 

>  [in]  NodeId requestId </P
><P 

>  [out] ByteString certificate </P
><P 

>  [out] ByteString privateKey </P
><P 

>  [out] ByteString[] issuerCertificates </P
><P 

> ); </P
><P 

><FONT color="#0000FF">   <FONT color="#000000"> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The identifier assigned to the <I>ApplicationInstance</I> by the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>requestId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> returned by <I>StartNewKeyPairRequest</I> or <I>StartSigningRequest</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificate </P
></TD
><TD  
 valign="top"
><P 

>The DER encoded <I>Certificate</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>privateKey </P
></TD
><TD  
 valign="top"
><P 

>The private key encoded in the format requested. </P
><P 

>If a password was supplied the blob is protected with it. </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
></TD><TD  
 valign="top"
><P 

>This field is null if no private key was requested. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>issuerCertificates </P
></TD
><TD  
 valign="top"
><P 

>The <I>Certificates</I> required to validate the new <I>Certificate</I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>This call is passes the <I>NodeId</I> returned by a previous call to <I>StartNewKeyPairRequest </I>or<I> StartSigningRequest</I>. </P
><P 

>It is expected that a <I>Client</I> will periodically call this <I>Method</I> until the GDS has approved the request. </P
><P 

>This <I>Method</I> can be invoked by a configuration tool which has provided user credentials with necessary access permissions. It can also be invoked by the <I>Application</I> that owns the <I>Certificate</I> (e.g. the private key used to create the channel must be the same as the private key used to sign the request passed to <I>StartSigningRequest</I>). </P
><P 

>The <I>Method</I> shall only be called via a <I>SecureChannel</I> with encryption enabled. </P
><P 

>If auditing is supported, the GDS shall generate the <I>CertificateDeliveredAuditEventType</I> (see <A href="#LinkTarget_7198" href="#">
7.6.10</A>
) if this <I>Method</I> succeeds or if it fails with anything but <I>Bad_NothingToDo</I>. </P
><P 

><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The <I>applicationId</I> does not refer to a registered <I>Application</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The <I>r</I><I>equestId</I> is does not reference to a valid request for the <I>Application</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_NothingToDo </P
></TD
><TD  
 valign="top"
><P 

>There is nothing to do because request has not yet completed. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_RequestNotAllowed </P
></TD
><TD  
 valign="top"
><P 

>The <I>CertificateManager</I> rejected the request.  </P
><P 

>The text associated with the error should indicate the exact reason. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_6634" href="#">
<FONT size="+1">Table 29</A>
 specifies the <I>AddressSpace</I> representation for the <I>FinishRequest Method</I>.  </P
><P 

><B>Table 29 &ndash; FinishRequest Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>FinishRequest </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_6691"
><FONT size="+1"><B> GetCertificateGroups </H3
><P 

></B><I>GetCertificateGroups</I> returns the Certificate Groups assigned to <I>Application</I>.  </P
><P 

><B>Signature</B> </P
><P 

><B>GetCertificateGroups</B>( </P
><P 

>  [in]  NodeId   applicationId </P
><P 

>  [out] NodeId[] certificateGroupIds </P
><P 

>); </P
><P 

>    </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The identifier assigned to the <I>Application</I> by the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateGroupIds </P
></TD
><TD  
 valign="top"
><P 

>An identifier for the Certificate Groups assigned to the Application.<I> </I></P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>A <I>Certificate Group</I> provides a <I>Trust List </I>and one or more <I>CertificateTypes</I> which may be assigned to an <I>Application</I>. The values returned by this Method are passed to the <I>GetTrustList</I> (see <A href="#LinkTarget_6820" href="#">
7.6.7</A>
), <I>StartSigningRequest</I> (see <A href="#LinkTarget_6120" href="#">
7.6.3</A>
) or <I>StartNewKeyPairRequest</I> (see <A href="#LinkTarget_6319" href="#">
7.6.4</A>
) <I>Methods</I>. </P
><P 

>This <I>Method</I> can be invoked by a configuration tool which has provided user credentials with necessary access permissions. It can also be invoked by the <I>Application</I> identified by the <I>applicationId</I> (e.g. the private key used to create the channel must be private key associated with the <I>Certificate</I> assigned to the <I>Application</I>). </P
><P 

><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The <I>applicationId</I> does not refer to a registered <I>Application</I>. </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_6890" href="#">
<FONT size="+1">Table 31</A>
 specifies the <I>AddressSpace</I> representation for the <I>GetCertificateGroups</I> <I>Method</I>.  </P
><P 

><B>Table 30 &ndash; GetCertificateGroups Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>GetCertificateGroups </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_6820"
><B> GetTrustList </H3
><P 

></B><I>GetTrustList </I> is used to retrieve the <I>NodeId</I> of a <I>Trust List</I> assigned to an <I>Application</I>.  </P
><P 

><B>Signature</B> </P
><P 

><B>GetTrustList</B>( </P
><P 

>  [in]  NodeId applicationId </P
><P 

>  [in]  NodeId certificateGroupId </P
><P 

>  [out] NodeId trustListId  </P
><P 

>); </P
><P 

>    </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The identifier assigned to the <I>Application</I> by the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateGroupId </P
></TD
><TD  
 valign="top"
><P 

>An identifier for a <I>Certificate Group</I> that the <I>Appli</I><I>cation</I> belongs to.<I> </I></P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>trustListId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> for a <I>Trust List</I> <I>Object</I> that can be used to download the <I>Trust </I><I>List</I> assigned to the <I>Application</I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>Access permissions also apply to the <I>Trust List</I> <I>Objects</I> which are returned by this <I>Method</I>. This <I>Trust List</I> includes any <I>Certificate Revocation Lists</I> (CRLs) associated with issuer <I>Certificates</I> in the <I>Trust List</I>. </P
><P 

>This <I>Method</I> can be invoked by a configuration tool which has provided user credentials with necessary access permissions. It can also be invoked by the <I>Application</I> identified by the <I>applicationId</I> (e.g. the private key used to create the channel must be private key associated with the <I>Certificate</I> assigned to the <I>Application</I>). </P
><P 

><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The <I>applicationId</I> does not refer to a registered <I>Application</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The certificateGroupId parameter is not valid.  </P
><P 

>The text associated with the error shall indicate the exact problem. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_6890" href="#">
<FONT size="+1">Table 31</A>
 specifies the <I>AddressSpace</I> representation for the <I>GetTrustList Method</I>.  </P
><P 

><B>Table 31 &ndash; GetTrustList Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>GetTrustList </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_6947"
><FONT size="+1"><B> GetCertificateStatus </H3
><P 

></B><I>GetCertificateStatus </I>is used to check if an <I>Application</I> needs to update its <I>Certificate</I>. </P
><P 

><B>Signature</B> </P
><P 

><B>GetCertificateStatus</B>( </P
><P 

>  [in]  NodeId applicationId </P
><P 

>  [in]  NodeId certificateGroupId </P
><P 

> </P
><P 

>  [in]  NodeId certificateTypeId </P
><P 

>  [out] Boolean updateRequired  </P
><P 

>); </P
><P 

>    </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>applicationId </P
></TD
><TD  
 valign="top"
><P 

>The identifier assigned to the <I>ApplicationInstance</I> by the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateGroupId </P
></TD
><TD  
 valign="top"
><P 

>The <I>NodeId</I> of the Certificate Group which provides the context.  </P
><P 

>If null the <I>CertificateManager</I> shall choose the <I>DefaultApplicationGroup</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateTypeId </P
></TD
><TD  
 valign="top"
><P 

>The <I>Node</I><I>Id</I> of the <I>CertificateType</I> for the <I>Certificate</I>.  </P
><P 

>If null the <I>CertificateManager</I> shall select a <I>Certificate</I> based on the value of the certificateGroupId argument.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>updateRequired </P
></TD
><TD  
 valign="top"
><P 

>TRUE if the <I>Application</I> needs to request a new <I>Certificate</I> from the GDS. </P
><P 

>FALSE if the <I>Application</I> can keep using the existing <I>Certificate</I>. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">Access permissions that apply to <I>CreateSigningRequest</I> <I>Method</I> shall apply to this <I>Method</I>. </P
><P 

>This <I>Method</I> can be invoked by a configuration tool which has provided user credentials with necessary access permissions. It can also be invoked by the <I>Application</I> identified by the <I>applicationId</I> (e.g. the private key used to create the channel must be private key associated with the <I>Certificate</I> assigned to the <I>Application</I>). </P
><P 

><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_NotFound </P
></TD
><TD  
 valign="top"
><P 

>The <I>applicationId</I> does not refer to a registered <I>Application</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The <I>certificateGroupId</I> or <I>certificateTypeId</I> parameter is not valid.  </P
><P 

>The text associated with the error shall indicate the exact problem. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_7029" href="#">
<FONT size="+1">Table 32</A>
 specifies the <I>AddressSpace</I> representation for the <I>GetCertificateStatus Method</I>.  </P
><P 

><B>Table 32 &ndash; GetCertificateStatus Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>GetCertificateStatus </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_7086"
><FONT size="+1"><B> CertificateRequestedAuditEventType  </H3
><P 

></B>This event is raised when a new certificate request has been accepted or rejected by the GDS. </P
><P 

>This can be the result of a <I>StartNewKeyPairRequest</I> or <I>StartSigningRequest</I> <I>Method</I> calls.<I> </I></P
><P 

> Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_7095" href="#">
Table 33</A>
. </P
><P 

><B>Table 33 &ndash; CertificateRequestedAuditEventType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CertificateRequestedAuditEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>GDS (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditUpdateMethodEventType</I> defined in Part 5. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroup </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CertificateType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditUpdateMethodEventType</I>. Their semantic is defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
.  </P
><P 

>The<I> CertificateGroup Property</I> specifies the <I>Certificate Group</I> that was affected by the update. </P
><P 

>The <I>CertificateType Property</I> specifies the type of <I>Certificate</I> that was updated. </P
><P 

> </P
><H3 
 ID="LinkTarget_7198"
><B> CertificateDeliveredAuditEventType  </H3
><P 

></B>This event is raised when a certificate is delivered by the GDS to a <I>Client</I>. </P
><P 

>This is the result of a <I>FinishRequest </I> <I>Method</I> completing successfully.<I> </I></P
><P 

>Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_7207" href="#">
Table 34</A>
. </P
><P 

><B>Table 34 &ndash; CertificateDeliveredAuditEventType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CertificateDeliveredAuditEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>GDS (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditUpdateMethodEventType</I> defined in Part 5.<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroup </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CertificateType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditUpdateMethodEventType</I>. Their semantic is defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
.  </P
><P 

>The<I> CertificateGroup Property</I> specifies the <I>Certificate Group</I> that was affected by the update. </P
><P 

>The <I>CertificateType Property</I> specifies the type of <I>Certificate</I> that was updated. </P
><H2 
 ID="LinkTarget_7309"
><B> Information Model for Push Certificate Management </H2
><H3 
 ID="LinkTarget_7310"
> Overview </H3
><P 

></B>If a <I>Server</I> supports Push Management it is required to support an information model as part of its address space.  It shall support the <I>ServerConfiguration</I> <I>Object</I> shown in <A href="#LinkTarget_7320" href="#">
Figure 15</A>
. This <I>Object</I> shall only be visible and accessible to authorized Administrators and/or the GDS. </P
><P 

> <DIV class="Sect" 
 Alt=""
>ServerType:ServerServerConfigurationType:ServerConfigurationApplyChangesUpdateCertificateCreateSigningRequestGetRejectedListCertificateGroupType:DefaultApplicationGroupCertificateGroupType:DefaultHttpsGroupCertificateGroupType:DefaultUserTokenGroupCertificateGroupFolderType:CertificateGroups</DIV
></P
><P 

><B>Figure 15 &ndash; The AddressSpace for the Server that supports Push Management </P
><P 

></B>All access to <I>Methods</I> defined on the <I>ServerConfiguration</I> <I>Object</I> shall be over an encrypted channel. In addition, Servers should require User Credentials with administrator privileges.  </P
><H3 
 ID="LinkTarget_7323"
><B> ServerConfiguration </H3
><P 

></B>This <I>Object </I> allows access to the <I>Server&rsquo;s</I> configuration and it is the target of an <I>HasComponent </I>reference from the <I>Server</I> <I>Object</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
.  </P
><P 

><B>Table 35 &ndash; ServerConfiguration Object Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ServerConfiguration </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ServerConfigurationType defined in <A href="#LinkTarget_7381" href="#">
7.7.3</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"></B> </P
><H3 
 ID="LinkTarget_7381"
><B> ServerConfigurationType </H3
><P 

></B>This type defines an <I>ObjectType</I> which represents the configuration of a <I>Server</I> which supports Push Management . There is always exactly one instance in the <I>Server AddressSpace</I>.<I> </I></P
><P 

><B>Table 36 &ndash; ServerConfigurationType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ServerConfigurationType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>Type </P
><P 

>Definition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule</B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Subtype of the <I>BaseObjectType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroups </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroup </P
><P 

>FolderType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ServerCapabilities </P
></TD
><TD  
 valign="top"
><P 

>String[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>SupportedPrivateKeyFormats </P
></TD
><TD  
 valign="top"
><P 

>String[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxTrustListSize </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MulticastDnsEnabled </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>UpdateCertificate </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_7625" href="#">
7.7.4</A>
 </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>ApplyChanges </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_7808" href="#">
7.7.5</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>CreateSigningRequest </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_7870" href="#">
7.7.6</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>GetRejectedList </P
></TD
><TD  
 valign="top"
><P 

>See <A href="#LinkTarget_8029" href="#">
7.7.7</A>
. </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">The <I>CertificateGroups</I> <I>Object</I> organizes the <I>Certificate Groups</I> supported by the <I>Server</I>. It is described in <A href="#LinkTarget_5692" href="#">
7.5.15</A>
. <I>Servers</I> shall support the <I>DefaultApplicationGroup</I> and may support the <I>DefaultHttpsGroup</I> or the <I>DefaultUserTokenGroup</I>. <I>Servers</I> may support additional <I>Certificate Groups</I> depending on their requirements. For example, a <I>Server</I> with two network interfaces may need a different <I>Trust List</I> for each interface. The second <I>Trust List</I> would be represented as a new <I>CertificateGroupType</I> Object organized by <I>CertificateGroups Folder. </I> </P
><P 

>The <I>ServerCapabilities</I> <I>Property</I> specifies the capabilities from <A href="#LinkTarget_8520" href="#">
Annex D</A>
 which the <I>Server</I> supports. The value is the same as the value reported to the <I>LocalDiscoveryServer</I> when the <I>Server</I> calls the <I>RegisterServer2</I> <I>Service</I>. </P
><P 

>The <I>SupportedPrivateKeyFormats</I> specifies the <I>PrivateKey</I> formats supported by the Server. Possible values include &ldquo;PEM&rdquo; (see <A href="#LinkTarget_2641" href="#">
RFC 5958</A>
) or &ldquo;PFX&rdquo; (see <A href="#LinkTarget_2653" href="#">
PKCS #12</A>
). The array is empty if the <I>Server</I> does not allow external <I>Clients</I> to update the <I>PrivateKey</I>. </P
><P 

>The <I>MaxTrustListSize</I> is the maximum size of the <I>Trust List</I> in bytes. 0 means no limit.  </P
><P 

>If <I>MulticastDnsEnabled</I> is TRUE then the <I>Server</I> announces itself using multicast DNS. It can be changed by writing to the <I>Variable</I>. </P
><P 

>The <I>GetRejectedList</I> <I>Method</I> returns the list of <I>Certificates</I> which have been rejected by the <I>Server</I>. It can be used to track activity or allow administrators to move a rejected <I>Certificate</I> into the <I>Trust List</I>. </P
><P 

>The <I>UpdateCertificate</I> <I>Method</I> is used to update a <I>Certificate</I>. </P
><P 

>The <I>ApplyChanges</I> <I>Method</I> is used apply any security related changes if a <I>Server</I> cannot apply them immediately. <I>Servers</I> should do the minimum required to ensure the new configuration is used, however, it could require that all existing <I>Sessions</I> be closed and re-opened by the <I>Clients</I>. </P
><P 

>The <I>CreateSigningRequest</I> <I>Method</I> asks the <I>Server</I> to create a <A href="#LinkTarget_2647" href="#">
PKCS #10</A>
 encoded <I>Certificate Request</I> that is signed with the <I>Server&rsquo;s</I> private key.  </P
><H3 
 ID="LinkTarget_7625"
><B> UpdateCertificate </H3
><P 

></B><I>UpdateCertificate</I> is used to update a <I>Certificate</I> for a <I>Server</I>.  </P
><P 

>There are the following three use cases for this <I>Method</I>. </P
><DL 

><DD 

>&#61623; The new <I>Certificate</I> was created based on a signing request created with the <I>Method CreateSigningRequest</I> defined in <A href="#LinkTarget_7870" href="#">
7.7.6</A>
. In this case there is no privateKey provided. </DD
><DD 

>&#61623; A new <I>privateKey</I> and <I>Certificate</I> was created outside the <I>Server</I> and both are updated with this Method. </DD
><DD 

>&#61623; A new <I>Certificate</I> was created and signed with the information from the old <I>Certificate</I>. In this case there is no <I>privateKey</I> provided. </DD
></DL
><P 

>The Server shall do all normal integrity checks on the <I>Certificate</I> and all of the issuer <I>Certificates</I>. If errors occur the <I>Bad_SecurityChecksFailed</I> error is returned. </P
><P 

>The <I>Server</I> shall report an error if the public key does not match the existing <I>Certificate</I> and the privateKey was not provided. </P
><P 

>This <I>Method</I> requires an encrypted channel and that the <I>Client</I> provides credentials with administrative rights on the <I>Server</I>. </P
><P 

>This <I>Method</I> may require the <I>ApplyChanges</I> <I>Method</I> to be called. </P
><P 

><B>Signature</B> </P
><P 

><B>UpdateCertificate</B>( </P
><P 

>   [in] NodeId certificateGroupId </P
><P 

>   [in] NodeId certificateTypeId </P
><P 

>  [in] ByteString certificate </P
><P 

>  [in] ByteString[] issuerCertificates </P
><P 

>  [in] String privateKeyFormat </P
><P 

>  [in] ByteString privateKey    </P
><P 

> [out] Boolean applyChangesRequired </P
><P 

> ); </P
><P 

><FONT color="#0000FF">   <FONT color="#000000"> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>certificateGroupId </P
></TD
><TD  
 valign="top"
><P 

>The NodeId of the <I>Certificate Grou</I><I>p Object</I> which is affected by the update. </P
><P 

>If null the <I>DefaultApplicationGroup</I> is used. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateTypeId </P
></TD
><TD  
 valign="top"
><P 

>The type of <I>Certificate</I> being updated.<FONT size="+1"> <FONT size="+1">The set of permitted types is specified by the <I>CertificateTypes</I> <I>Property</I> belonging to the <I>Certificate Group</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificate </P
></TD
><TD  
 valign="top"
><P 

>The DER encoded <I>Certificate</I> which replaces the existing Certificate. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>issuerCertificates </P
></TD
><TD  
 valign="top"
><P 

>The issuer <I>Certificates</I> needed to verify the signature on the new <I>Certificate</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>privateKeyFormat </P
></TD
><TD  
 valign="top"
><P 

>The format of the <I>Private Key</I> (PEM or PFX). If the <I>privateK</I><I>ey</I> is not specified the <I>privateKeyFormat</I> is null or empty. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>privateKey </P
></TD
><TD  
 valign="top"
><P 

>The <I>Private Key</I> encoded in the <I>privateKeyFormat</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>applyChangesRequired </P
></TD
><TD  
 valign="top"
><P 

>Indicates that the <I>ApplyChanges</I> <I>Method</I> must be called before the new <I>Certificate</I> will be used. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The certificateTypeId or certificateGroupId is not valid. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_CertificateInvalid </P
></TD
><TD  
 valign="top"
><P 

>The <I>Certificate</I> is invalid or the format is not supported. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_NotSupported </P
></TD
><TD  
 valign="top"
><P 

>The <I>PrivateKey</I> is invalid or the format is not supported. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_SecurityChecksFailed </P
></TD
><TD  
 valign="top"
><P 

>Some failure occurred verifying the integrity of the <I>Certificate</I>. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_7750" href="#">
<FONT size="+1">Table 37</A>
 specifies the <I>AddressSpace</I> representation for the <I>UpdateCertificate Method</I>.  </P
><P 

><B>Table 37 &ndash; UpdateCertificate Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>UpdateCertificate </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_7808"
><FONT size="+1"><B> ApplyChanges </H3
><P 

></B><I>ApplyChanges </I> is used to tell the Server to apply any security changes. </P
><P 

>This <I>Method</I> should only be called if a previous call to a <I>Method</I> that changed the configuration returns applyChangesRequired=true (see <A href="#LinkTarget_7625" href="#">
7.7.4</A>
). </P
><P 

><I>ApplyChanges </I> can have different meanings depending on the Server architecture. In the ideal case it would only require the endpoints to be closed and re-opened, however, it could require a complete <I>Server</I> shutdown and restart. </P
><P 

>This <I>Method</I> requires an encrypted channel and that the <I>Client</I> provide credentials with administrative rights on the <I>Server</I>. </P
><P 

><B>Signature</B> </P
><P 

><B>ApplyChanges</B>(); </P
><P 

>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_7841" href="#">
<FONT size="+1">Table 38</A>
 specifies the <I>AddressSpace</I> representation for the <I>ApplyChanges Method</I>.  </P
><P 

><B>Table 38 &ndash; ApplyChanges Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ApplyChanges </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
></TABLE
><P 

></B> </P
><H3 
 ID="LinkTarget_7870"
><FONT size="+1"><B> CreateSigningRequest </H3
><P 

></B><I>CreateSigningRequest</I> <I>Method</I> asks the <I>Server</I> to create a <A href="#LinkTarget_2647" href="#">
PKCS #10</A>
 DER encoded <I>Certificate Request</I> that is signed with the <I>Server&rsquo;s</I> private key. This request can be then used to request a <I>Certificate</I> from a CA that expects requests in this format. </P
><P 

>This <I>Method</I> requires an encrypted channel and that the <I>Client</I> provide credentials with administrative rights on the <I>Server</I>. </P
><P 

><B>Signature</B> </P
><P 

><B>CreateSigningRequest</B>( </P
><P 

>  [in] NodeId certificateGroupId,  </P
><P 

>[in] NodeId certificateTypeId, </P
><P 

> [in] String subjectName, </P
><P 

> [in] Boolean regeneratePrivateKey, </P
><P 

>[in] ByteString nonce, </P
><P 

> [out] ByteString certificateRequest </P
><P 

> ); </P
><P 

><FONT color="#0000FF">   <FONT color="#000000"> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>certificateGroupId </P
></TD
><TD  
 valign="top"
><P 

>The NodeId of the <I>Certificate Group Object</I> which is affected by the request. </P
><P 

>If null the <I>DefaultApplicationGroup</I> is used. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateTypeId </P
></TD
><TD  
 valign="top"
><P 

>The type of <I>Certificate</I> being requested.<FONT size="+1"> <FONT size="+1">The set of permitted types is specified by the <I>CertificateTypes</I> <I>Property</I> belonging to the <I>Certificate Group</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>subjectName </P
></TD
><TD  
 valign="top"
><P 

>The subject name to use in the <I>Certificate</I><I> </I><I>Request</I>. </P
><P 

>If not specified the <I>SubjectName</I> from the current <I>Certificate</I> is used.  </P
><P 

>The format of the <I>subjectName</I> is defined in <A href="#LinkTarget_6319" href="#">
7.6.4</A>
.  </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>regeneratePrivateKey </P
></TD
><TD  
 valign="top"
><P 

>If TRUE the <I>Server</I> shall create a new <I>Private K</I><I>ey</I> which it stores until the matching signed <I>Certificate</I> is uploaded with the <I>UpdateCertificate</I> <I>Method</I>. Previously created <I>Private Keys</I> may be discarded if <I>UpdateCertificate</I><I> </I>was not called before calling this method again. If FALSE the <I>Server</I> uses its existing <I>Private Key</I><I>.</I> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>nonce </P
></TD
><TD  
 valign="top"
><P 

>Additional entropy which the caller shall provide if regeneratePrivateKey is TRUE. It shall be at least 32 bytes long. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>certificateRequest </P
></TD
><TD  
 valign="top"
><P 

>The <A href="#LinkTarget_2647" href="#">
PKCS #10</A>
 DER encoded <I>Certificate Request</I><I>.</I><I> </I></P
></TD
></TR
></TABLE
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_InvalidArgument </P
></TD
><TD  
 valign="top"
><P 

>The <I>certificateType</I><I>Id, certificateGroupId</I> or <I>subjectName</I> is not valid. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_7972" href="#">
<FONT size="+1">Table 39</A>
 specifies the <I>AddressSpace</I> representation for the <I>CreateSigningRequest Method</I>.  </P
><P 

><B>Table 39 &ndash; CreateSigningRequest Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CreateSigningRequest </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_8029"
><FONT size="+1"><B> GetRejectedList </H3
><P 

></B><I>GetRejectedList</I> <I>Method</I> returns the list of <I>Certificates</I> that have been rejected by the <I>Server</I>. </P
><P 

>No rules are defined for how the <I>Server</I> updates this list or how long  a <I>Certificate</I> is kept in the list. It is recommended that every valid but untrusted <I>Certificate</I> be added to the rejected list as long as storage is available. <I>Servers</I> should omit older entries from the list returned if the maximum message size is not large enough to allow the entire list to be returned. </P
><P 

>This <I>Method</I> requires an encrypted channel and that the <I>Client</I> provides credentials with administrative rights on the <I>Server</I>. </P
><P 

><B>Signature</B> </P
><P 

><B>GetRejectedList</B>( </P
><P 

> [out] ByteString[] certificates </P
><P 

> ); </P
><P 

><FONT color="#0000FF">   <FONT color="#000000"> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"><B>Argument </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>certificates </P
></TD
><TD  
 valign="top"
><P 

>The DER encoded form of the Certificates rejected by the Server<I>.</I><I> </I></P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1"><B>Method Result Codes (defined in Call Service) </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Result Code </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Bad_UserAccessDenied </P
></TD
><TD  
 valign="top"
><P 

>The current user does not have the rights required. </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><A href="#LinkTarget_8072" href="#">
<FONT size="+1">Table 40</A>
 specifies the <I>AddressSpace</I> representation for the <I>GetRejectedList Method</I>.  </P
><P 

><B>Table 40 &ndash; GetRejectedList Method AddressSpace Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>GetRejectedList </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[]  </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_8129"
><FONT size="+1"><B> CertificateUpdatedAuditEventType  </H3
><P 

></B>This event is raised when the <I>Application</I> <I>Certificate</I> is changed. </P
><P 

>This is the result of a <I>UpdateCertificate</I> <I>Method</I> completing successfully or failing.<I> </I></P
><P 

>Its representation in the <I>AddressSpace</I> is formally defined in <A href="#LinkTarget_8139" href="#">
Table 41</A>
. </P
><P 

><B>Table 41 &ndash; CertificateUpdatedAuditEventType Definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>CertificateUpdatedAuditEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Namespace </P
></TD
><TD  
 valign="top"
><P 

>CORE (see <A href="#LinkTarget_2796" href="#">
3.3</A>
) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditUpdateMethodEventType</I> defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CertificateGroup </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CertificateType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditUpdateMethodEventType</I>. Their semantic is defined in <A href="#LinkTarget_2607" href="#">
Part 5</A>
. </P
><P 

>The<I> CertificateGroup Property</I> specifies the <I>Certificate Group</I> that was affected by the update. </P
><P 

>The <I>CertificateType Property</I> specifies the type of <I>Certificate</I> that was updated. </P
><H1 
 ID="LinkTarget_8247"
><FONT size="+1"><B>Annex A  (informative)  Deployment and Configuration </H1
><H2 
 ID="LinkTarget_8249"
><FONT size="+1">A.1 Firewalls and Discovery </H2
><P 

><FONT size="+1"></B>Many systems will have multiple networks that are isolated by firewalls. These firewalls will frequently hide the network addresses of the hosts behind them unless the Administrator has specifically configured the firewall to allow external access. In some networks the Administrator will place hosts with externally available <I>Servers</I> outside the firewall as shown in  <A href="#LinkTarget_8258" href="#">
Figure 16</A>
. </P
><P 

>  </P
><IMG Alt="" width="2400" height="1047"
 src="images/OPC UA Part 12 - Discovery 1.03 Specification_img_1.jpg" ><P 

><B>Figure 16 &ndash; Discovering Servers Outside a Firewall </P
><P 

></B>In this configuration <I>Servers</I> running on the publicly visible network will have the same network address from the perspective of all <I>Clients</I> which means the URLs returned by <I>DiscoveryServer</I>s are not affected by the location of the <I>Client</I>. </P
><P 

>In other networks the Administrator will configure the firewall to allow access to selected <I>Servers.</I> An example is shown in  <A href="#LinkTarget_8270" href="#">
Figure 17</A>
.  </P
><P 

> <DIV class="Sect" 
 Alt=""
>ClientFirewallClientInternal NetworkServerInternetDiscovery ServerFirewallDMZInternal Network</DIV
></P
><P 

><B>Figure 17 &ndash; Discovering Servers Behind a Firewall </P
><P 

></B>In this configuration the address of the <I>Server</I> that the Internet <I>Client</I> sees will be different from the address that the Internet <I>Client</I> sees. This means that the <I>Server&rsquo;s</I><I> </I>discovery <I>Endpoint</I> would return incorrect URLs to the Internet <I>Client</I> (assuming it was configured to provide the internal URLs).  </P
><P 

><I>Administrators</I> can correct this problem by configuring the <I>Server</I> to use multiple <I>HostNames</I>. A <I>Server</I> that has multiple <I>HostNames</I> must look at the <I>EndpointUrl</I> passed to the <I>GetEndpoints</I> or  <I>CreateSession</I> services and return <I>EndpointDescriptions</I> with URLs that use the same <I>HostName</I>. A Server with multiple <I>HostNames</I> must also return an <I>ApplicationInstance Certificate</I> that specifies the <I>HostName </I>used in the URL it returns. An Administrator may create a single <I>Certificate</I> with multiple HostNames or assign different <I>Certificates for each HostName </I>that the <I>Server</I> supports<I>. </I></P
><P 

>Note that <I>Servers</I> may not be aware of all <I>HostNames</I> which can be used to access the <I>Server</I> (i.e. a NAT firewall) so <I>Clients</I> need to handle the case where the URL used to access the <I>Server</I> is different from the <I>HostNames</I> in the <I>Certificate</I>. This is discussed in more detail in <A href="#LinkTarget_2606" href="#">
Part 4</A>
. </P
><P 

><I>Administrators</I> may also wish to set up a <I>DiscoveryServer </I>that is configured with the <I>ApplicationDescriptions</I> for <I>Servers </I>that are<I> </I>accessible to external <I>Clients</I>. This <I>DiscoveryServer</I> would have to substitute its own <I>Endpoint</I> for the <I>DiscoveryUrls</I> in all <I>ApplicationDescriptions</I> that it returns when a <I>Client</I> calls <I>FindServers</I>. This would tell the <I>Client</I> to call the <I>DiscoveryServer</I> back when it wishes to connect to the <I>Server</I>. The <I>DiscoveryServer</I> would then request the <I>EndpointDescriptions</I> from the actual Server as shown in<B> <A href="#LinkTarget_8289" href="#">
</B>Figure 18</A>
. At this point the <I>Client</I> would have all the information it needs to establish a secure channel with the <I>Server</I> behind the firewall. </P
><P 

> <DIV class="Sect" 
 Alt=""
>GetEndpoints()CreateSecureChannel()ClientServerEndpointDescription[]DiscoveryEndpointSessionEndpointDiscoveryServerFindServers()ServerDescription[]GetEndpoints()EndpointDescription[]</DIV
></P
><P 

><B>Figure 18 &ndash; Using a Discovery Server with a Firew</B>a<B>ll </P
><P 

></B>In this example, the <I>DiscoveryServer</I> outside of the firewall allows the <I>Administrator</I> to close off the <I>Server&rsquo;s </I>discovery <I>Endpoints</I> to every Client other than the <I>DiscoveryServer</I>. The Administrator could eliminate that hole as well if it stored the <I>EndpointDescriptions</I> on the <I>DiscoveryServer</I>. This allows an Administrator to configure a system in which no public access is allowed to any application behind the firewall.  The only access behind the firewall is via a secure connection. </P
><P 

>The <I>DiscoveryServer</I> could also be replaced with a <I>DirectoryService</I> that stores the <I>ApplicationDescriptions</I> and/or the <I>EndpointDescriptions</I> for the <I>Servers</I> behind the firewalls. </P
><H2 
 ID="LinkTarget_8292"
><FONT size="+1"><B>A.2 Resolving References to Remote Servers </H2
><P 

><FONT size="+1"></B>The UA <I> AddressSpace</I> supports references between <I>Nodes</I> that exist in different <I>Server</I> <I> AddressSpace</I> spaces. These references are specified with a <I>ExpandedNodeId</I> that includes the URI of the <I>Server</I> which owns the <I>Node</I>. A <I>Client</I> that wishes to follow a reference to an external <I>Node</I> must map the <I>ApplicationUri</I> onto an <I>EndpointUrl</I> that it can use. A <I>Client</I> can do this by using the <I>GlobalDiscoveryServer</I> that knows about the <I>Server</I>. The process of connecting to a <I>Server</I> containing a remote <I>Node</I> is illustrated in <A href="#LinkTarget_8303" href="#">
Figure 19</A>
. </P
><P 

> <DIV class="Sect" 
 Alt=""
>ClientServer 1GDSServer 2BrowseExpandedNodeId (ServerUri=&lsquo;Server 2&rsquo;)Find Discovery ServerQueryServers (ApplicationUri = &lsquo;Server 2&rsquo;)ServerOnNetworkGetEndpointsEndpointDescriptionsCreateSession</DIV
></P
><P 

><B>Figure 19 &ndash; Following References to Remote Servers </P
><P 

></B>If a GDS not available <I>Client</I> may use other strategies to find the <I>Server</I> associated with the URI. </P
><P 

> </P
><H1 
 ID="LinkTarget_8306"
><FONT size="+1"><B>Annex B  </B>(normative) <B> Constants  </H1
><H2 
 ID="LinkTarget_8308"
><FONT size="+1">B.1 Numeric Node Ids </H2
><P 

><FONT size="+1"></B>This document defines <I>Nodes</I> which are part of the base OPC UA Specification. The numeric identifiers for these <I>Nodes</I> are part of the complete list of identifiers defined in <A href="#LinkTarget_2608" href="#">
Part 6</A>
. </P
><P 

>In addition, this document defines <I>Nodes</I> which are only used by <I>GlobalDiscoveryServers</I>.  </P
><P 

>The <I>NamespaceUri</I> for any GDS specific <I>NodeIds</I> is <A href="http://opcfoundation.org/UA/GDS">
<FONT color="#0000FF">http://opcfoundation.org/UA/GDS</A>
/<FONT color="#000000"> </P
><P 

>The CSV released with this version of the standards can be found here: </P
><P 

><A href="http://www.opcfoundation.org/UA/schemas/1.03/Opc.Ua.Gds.NodeIds.csv">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/schemas/1.03/Opc.Ua.Gds.NodeIds.csv</A>
  </P
><P 

><FONT size="+1" color="#000000">NOTE The latest CSV that is compatible with this version of the standard can be found here: </P
><P 

><A href="http://www.opcfoundation.org/UA/schemas/Opc.Ua.Gds.NodeIds.csv">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/schemas//Opc.Ua.Gds.NodeIds.csv</A>
<FONT color="#000000"> </P
><H1 
 ID="LinkTarget_8335"
><FONT size="+1"><B>Annex C  </B>(normative) <B> OPC UA Mapping to mDNS  </H1
><H2 
 ID="LinkTarget_8337"
><FONT size="+1">C.1 DNS Server (SRV) Record Syntax </H2
><P 

><FONT size="+1"></B>This clause describes the OPC UA specific requirements which are above and beyond the more general requirements of the <A href="#LinkTarget_2629" href="#">
mDNS</A>
 specification. </P
><P 

><A href="#LinkTarget_2629" href="#">
mDNS</A>
 uses DNS SRV records to advertise the services (a.k.a. the <I>DiscoveryUrls</I> for the <I>Servers</I>) available on the network.  </P
><P 

>An SRV record has the form: </P
><P 

>_service._proto.name TTL class SRV priority weight port target </P
><P 

><I>service</I>: the symbolic name of the desired service. For OPC UA this field shall be one of service names for OPC UA which are defined in <A href="#LinkTarget_8357" href="#">
Table 42</A>
.<I>  </I></P
><P 

><B>Table 42 &ndash; Allowed mDNS Service Names </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Service Name </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>_opcua-tcp </P
></TD
><TD  
 valign="top"
><P 

>The <I>DiscoveryUrl</I> supports the OPC UA TCP mapping (see <A href="#LinkTarget_2608" href="#">
Part 6</A>
). </P
><P 

>This name is assigned by IANA. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>_opcua-tls </P
></TD
><TD  
 valign="top"
><P 

>The <I>DiscoveryUrl</I> supports the OPC UA HTTPS mapping (see <A href="#LinkTarget_2608" href="#">
Part 6</A>
). </P
><P 

>Note that HTTPS mapping supports multiple encodings. If a <I>Client</I> supports more than one encoding it should attempt to use the alternate encodings if an error occurs during connect.  </P
><P 

>This name is assigned by IANA. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"><I>proto</I>: the transport protocol of the desired service; For OPC UA this field shall be &lsquo;_tcp&rsquo;. </P
><P 

>The other fields have no OPC UA specific requirements. </P
><P 

>An example SRV record in textual form that might be found in a <A href="http://en.wikipedia.org/wiki/Zone_file">
<FONT color="#0A0080">zone file</A>
<FONT color="#000000"> might be the following: </P
><P 

>_opcua-tcp._tcp.example.com. 86400 IN SRV 0 5 4840 uaserver.example.com. </P
><P 

>This points to a server named uaserver.example.com listening on TCP port 4840 for OPC UA TCP requests. The priority given here is 0, and the weight is 5 (the priority and weights are not important for OPC UA). The <A href="#LinkTarget_2629" href="#">
mDNS</A>
 specification describes the rest of the fields in detail. </P
><H2 
 ID="LinkTarget_8405"
><FONT size="+1"><B>C.2 DNS Text (TXT) Record Syntax </H2
><P 

><FONT size="+1"></B>The SRV record has a TXT record associated with it that provides additional information about the <I>DiscoveryUrl</I>. The format of this record is a sequence of strings prefixed by a length. This specifications adopts the key-value syntax for TXT records described in <A href="#LinkTarget_2635" href="#">
DNS-SD</A>
. </P
><P 

><A href="#LinkTarget_8417" href="#">
Table 43</A>
 defines the syntax for strings that may in the TXT record.<I>  </I></P
><P 

><B>Table 43 &ndash; DNS TXT Record String Format </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Key-Value Format</B> </P
></TD
><TD  
 valign="top"
><P 

><B>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>path=/&lt;path&gt; </P
></TD
><TD  
 valign="top"
><P 

>Specifies the text that appears after the port number when constructing a URL. This text always starts with a forward slash (/). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>caps=&lt;capability1&gt;,&lt;capability2&gt; </P
></TD
><TD  
 valign="top"
><P 

>Specifies the capabilities supported by the <I>Server</I>.  </P
><P 

>These are short (&lt;=8 character) strings which are published by the OPC Foundation (see <A href="#LinkTarget_8520" href="#">
Annex D</A>
). The number of capabilities supported by a Server should be less than 10. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">The <I>MulticastExtension</I> needs to convert <I>DiscoveryUrls</I> to and from these SRV records. </P
><H2 
 ID="LinkTarget_8444"
><FONT size="+1"><B>C.3 DiscoveryUrl Mapping </H2
><P 

><FONT size="+1"></B>An <I>DiscoveryUrl</I> has the form: </P
><P 

>scheme://hostname:port/path </P
><P 

>scheme: the protocol used to establish a connection. </P
><P 

>hostname: the domain name or <I>IPAddress</I> of the host where the <I>Server</I> is running.  </P
><P 

>port: the TCP port on which the <I>Server</I> is to be found. </P
><P 

>path: additional data used to identify a specific <I>Server</I>. </P
><P 

><B>Table 44 &ndash; DiscoveryUrl to DNS SRV and TXT Record Mapping </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">URL Field </P
></TD
><TD  
 valign="top"
><P 

>Mapping </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>scheme </P
></TD
><TD  
 valign="top"
><P 

>The scheme maps onto SRV record service field. </P
><P 

>The following mappings are defined at this time: </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>opc.tcp </P
></TD
><TD  
 valign="top"
><P 

>_opcua-tcp._tcp. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>https </P
></TD
><TD  
 valign="top"
><P 

>_opcua-tls._tcp. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>http </P
></TD
><TD  
 valign="top"
><P 

>_opcua-http._tcp. </P
></TD
></TR
></TABLE
><P 

>The first two are OPC UA service names assigned by IANA. </P
><P 

>Additional service names may be added in the future. </P
><P 

>The endpoint shall support the default transport profile for the scheme.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>hostname </P
></TD
><TD  
 valign="top"
><P 

>The hostname maps onto the SRV record target field. </P
><P 

>If the hostname is an <I>IPAddress</I> then it must be converted to a domain name. </P
><P 

>If this cannot be done then LDS shall report an error. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>port </P
></TD
><TD  
 valign="top"
><P 

>The port maps onto the SRV record port field. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>path </P
></TD
><TD  
 valign="top"
><P 

>The path maps onto the path string in the TXT record (<FONT size="+1">see <A href="#LinkTarget_8417" href="#">
<FONT size="+1">Table 43</A>
<FONT size="+1">). </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">Suitable default values should be chosen for fields in a SRV record that do not have a mapping specified in <A href="#LinkTarget_8452" href="#">
Table 44</A>
. e.g. TTL=86400, class=IN, priority=0, weight=5 </P
><H1 
 ID="LinkTarget_8520"
><FONT size="+1"><B>Annex D  </B>(normative) <B> Server Capability Identifiers </H1
><P 

><FONT size="+1"></B><I>Clients</I> benefit if they have more information about a <I>Server</I> before they connect, however, providing this information imposes a burden on the mechanisms used to discover <I>Servers</I>. The challenge is to find the right balance between the two objectives. </P
><P 

><I>ServerCapabilityIdentifiers</I> are the way this specification achieves the balance. These identifiers are short and map onto a subset of OPC UA features which are likely to be useful during the discovery process. The identifiers are short because of length restrictions for fields used in the mDNS specification. <A href="#LinkTarget_8529" href="#">
Table 45</A>
 is a non-normative list of possible identifiers. </P
><P 

><B>Table 45 &ndash; Examples of <I>ServerCapabilityIdentifiers</I> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Identifier </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>NA </P
></TD
><TD  
 valign="top"
><P 

>No capability information is available. Cannot be used in combination with any other capability. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DA </P
></TD
><TD  
 valign="top"
><P 

>Provides current data. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HD </P
></TD
><TD  
 valign="top"
><P 

>Provides historical data. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>AC </P
></TD
><TD  
 valign="top"
><P 

>Provides alarms and conditions that may require operator interaction. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HE </P
></TD
><TD  
 valign="top"
><P 

>Provides historical alarms and events. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>GDS </P
></TD
><TD  
 valign="top"
><P 

>Supports the Global Discovery Server information model.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>LDS </P
></TD
><TD  
 valign="top"
><P 

>Only supports the Discovery Services. Cannot be used in combination with any other capability. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>DI </P
></TD
><TD  
 valign="top"
><P 

>Supports the Device Integration (DI) information model (see <A href="#LinkTarget_2666" href="#">
DI</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ADI </P
></TD
><TD  
 valign="top"
><P 

>Supports the Analyser Device Integration (ADI) information model (see <A href="#LinkTarget_2674" href="#">
ADI</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>FDI </P
></TD
><TD  
 valign="top"
><P 

>Supports the Field Device Integration (FDI) information model (see <A href="#LinkTarget_2688" href="#">
FDI</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>FDIC </P
></TD
><TD  
 valign="top"
><P 

>Supports the Field Device Integration (FDI) Communication Server information model (see <A href="#LinkTarget_2688" href="#">
FDI</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>PLC </P
></TD
><TD  
 valign="top"
><P 

>Supports the PLCopen information model (see <A href="#LinkTarget_2681" href="#">
PLCopen</A>
). </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>S95 </P
></TD
><TD  
 valign="top"
><P 

>Supports the ISA95 information model (see <A href="#LinkTarget_2695" href="#">
ISA-95</A>
). </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">The normative set of <I>ServerCapabilityIdentifiers</I> can be found here: </P
><P 

><A href="http://www.opcfoundation.org/UA/schemas/1.03/ServerCapabilities.csv">
<FONT color="#0000FF">http://www.opcfoundation.org/UA/schemas/1.03/ServerCapabilities.csv</A>
 </P
><P 

><FONT color="#000000">Application developers shall always use the linked CSV.  </P
><P 

> </P
><H1 
 ID="LinkTarget_8653"
><FONT size="+1"><B>Annex E  </B>(normative) <B> DirectoryServices </H1
><H2 
 ID="LinkTarget_8655"
><FONT size="+1">E.1 Global Discovery via Other Directory<I> </I>Services </H2
><P 

><FONT size="+1"></B>Many organizations will deploy <I>DirectoryService</I>s such as LDAP or UDDI to manage resources available on their network. A <I>Client</I> can use these services as a way to find <I>Servers</I> by using APIs specific to <I>DirectoryService</I> to query for UA <I>Servers</I> or UA <I>DiscoveryServers</I> available on the network. The <I>Client</I> would then use the URLs for discovery <I>Endpoints</I> stored in the <I>DirectoryService</I> to request the <I>EndpointDescriptions</I> necessary to connect to an individual servers </P
><P 

>Some implementations of a <I>GlobalDiscoveryServer </I>will be a front-end for a standard <I>Directory Service</I>. In these cases, the <I>QueryServers</I> method will return the same information as the  <I>DirectoryService </I>API. The discovery process for this scenario is illustrated in <A href="#LinkTarget_8666" href="#">
Figure 20</A>
 . </P
><P 

> <DIV class="Sect" 
 Alt=""
>GetEndpoints()CreateSecureChannel()ClientServerEndpointDescription[]DiscoveryEndpointSessionEndpointUDDI or LDAPServerQuery()BusinessEntity/Object[]</DIV
></P
><P 

><B>Figure 20 &ndash; The UDDI or LDAP Discovery Process </P
><H2 
 ID="LinkTarget_8667"
><FONT size="+1">E.2 UDDI </H2
><P 

><FONT size="+1"></B>UDDI registries contain <I>businessEntities</I> which provide one or more <I>businessServices</I>. The <I>businessServices</I> have one or more <I>bindingTemplates</I>. <I>bindingTemplates</I> specify a physical address and a <I>Server</I> Interface (called a tModel). <A href="#LinkTarget_8678" href="#">
Figure 21</A>
 illustrates the relationships between the UDDI registry elements. </P
><P 

> <DIV class="Sect" 
 Alt=""
>Logical Node(businessEntity)UA Server(businessService)DiscoveryEndpointUrl(bindingTemplate)UA Server Interface(tModel)UA Discovery Server(businessService)DiscoveryEndpointUrl(bindingTemplate)UA Discovery Interface(tModel)</DIV
></P
><P 

><B>Figure 21 &ndash; UDDI Registry Structure </P
><P 

></B>This specification defines standard tModels which must be referenced by businessServices that support UA. The standard UA tModels shown in <A href="#LinkTarget_8685" href="#">
Table 46</A>
. </P
><P 

><B>Table 46 &ndash; UDDI tModels </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"></B>Name </P
></TD
><TD  
 valign="top"
><P 

>domainKey </P
></TD
><TD  
 valign="top"
><P 

>uuidKey </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Server </P
></TD
><TD  
 valign="top"
><P 

>uddi:server.ua.opcfoundation.org </P
></TD
><TD  
 valign="top"
><P 

>uddi:AA206B41-EC9E-49a4-B789-4478C74120B5 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><I>DiscoveryServer </I></P
></TD
><TD  
 valign="top"
><P 

>uddi:discoveryserver.ua.opcfoundation.org </P
></TD
><TD  
 valign="top"
><P 

>uddi:AA206B42-EC9E-49a4-B789-4478C74120B5 </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>The name of the businessService elements should be the same as the <I>ApplicationName</I> for the UA application. The serviceKey must be the <I>ApplicationUri</I>. At least one bindingTemplate must be present and the accessPoint must be the URL of the discovery <I>Endpoint</I> for the UA server identified by the serviceKey. Servers with multiple discovery <I>Endpoints</I> would have multiple bindingTemplates </P
><P 

>A UDDI registry will generally only contain UA servers, however, there are situations where the administrators cannot know what <I>Servers</I> are available at any given time and will find it more convenient to place a <I>DiscoveryServer</I> in the registry instead. </P
><H2 
 ID="LinkTarget_8714"
><FONT size="+1"><B>E.3 LDAP </H2
><P 

><FONT size="+1"></B>LDAP servers contain <I>objects</I> organized into hierarchies. Each object has an <I>objectClass</I> which specifies a number of <I>attributes</I>. <I>Attributes</I> have values which describe an <I>object</I>. <A href="#LinkTarget_8725" href="#">
Figure 22</A>
 illustrates a sample LDAP hierarchy which contains entries describing UA servers. </P
><P 

> <DIV class="Sect" 
 Alt=""
>Root(objectClass=top)Company(objectClass=organization)Machine X(objectClass=device)Machine Y(objectClass=device)UA Server(objectClass=OPCUA-Server)UA Discovery Server(objectClass=OPCUA-Server)IsDiscoveryServer=FalseIsDiscoveryServer=True</DIV
></P
><P 

><B>Figure 22 &ndash; Sample LDAP Hierarchy </P
><P 

></B>UA applications are stored in LDAP servers as entries with the UA defined objectClasses associated with them. The schema for the objectClasses defined for UA are shown in <A href="#LinkTarget_8732" href="#">
Table 47</A>
. </P
><P 

><B>Table 47 &ndash; LDAP Object Class Schema </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"></B>Name </P
></TD
><TD  
 valign="top"
><P 

>LDAP Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>OID </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Application </P
></TD
><TD  
 valign="top"
><P 

>opcuaApplication </P
></TD
><TD  
 valign="top"
><P 

>Structural </P
></TD
><TD  
 valign="top"
><P 

>1.2.840.113556.1.8000.2264.1.12.1 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> ApplicationName </P
></TD
><TD  
 valign="top"
><P 

>cn </P
></TD
><TD  
 valign="top"
><P 

>String (Required) </P
></TD
><TD  
 valign="top"
><P 

>Built-in </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> HostName </P
></TD
><TD  
 valign="top"
><P 

>dNSName </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>Built-in </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> ApplicationUri </P
></TD
><TD  
 valign="top"
><P 

>opcuaApplicationUri </P
></TD
><TD  
 valign="top"
><P 

>Name </P
></TD
><TD  
 valign="top"
><P 

>1.2.840.113556.1.8000.2264.1.12.1.1 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> ApplicationType </P
></TD
><TD  
 valign="top"
><P 

>opcuaApplicationType </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>1.2.840.113556.1.8000.2264.1.12.1.3 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> DiscoveryUrl </P
></TD
><TD  
 valign="top"
><P 

>opcuaDiscoveryUrl </P
></TD
><TD  
 valign="top"
><P 

>String, Multi-valued </P
></TD
><TD  
 valign="top"
><P 

>1.2.840.113556.1.8000.2264.1.12.1.4 </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">The base OID was issued to the OPC Foundation by the Microsoft for use with ActiveDirectory. This OID is globally unique and can use used with any LDAP implementation. </P
><P 

>Administrators may extend the LDAP schema by adding new attributes. </P
><H1 
 ID="LinkTarget_8806"
><FONT size="+1"><B>Annex F  </B>(informative) <B> Local Discovery Server </H1
><H2 
 ID="LinkTarget_8808"
><FONT size="+1">F.1 Certificate Store Directory Layout </H2
><P 

><FONT size="+1"></B>A recommended directory layout for applications that store their certificates on a file system is shown in <A href="#LinkTarget_8821" href="#">
Table 48</A>
. The Local Discovery Server shall use this structure. </P
><P 

>This structure is based on the rules defined in <A href="#LinkTarget_2608" href="#">
Part 6</A>
. </P
><P 

><B>Table 48 &ndash; Application Certificate Store Directory Layout </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Path </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>&lt;root&gt; </P
></TD
><TD  
 valign="top"
><P 

>A descriptive name for the trust list. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/own </P
></TD
><TD  
 valign="top"
><P 

>The root of certificate store which contains private keys used by the application. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/own/certs </P
></TD
><TD  
 valign="top"
><P 

>Contains the X509 certificates associated with the private keys in the ./private directory. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/own/private </P
></TD
><TD  
 valign="top"
><P 

>Contains the private keys used by the application. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/trusted </P
></TD
><TD  
 valign="top"
><P 

>The root of certificate store which contains trusted certificates. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/trusted/certs </P
></TD
><TD  
 valign="top"
><P 

>Contains the X509 certificates which are trusted.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/trusted/crl </P
></TD
><TD  
 valign="top"
><P 

>Contains the X509 CRLs for any CAs in the ./certs directory. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/issuer </P
></TD
><TD  
 valign="top"
><P 

>The root of certificate store which contains CAs certificates needed for validation. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/issuer/certs </P
></TD
><TD  
 valign="top"
><P 

>Contains the X509 certificates which are needed for validation.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/issuer/crl </P
></TD
><TD  
 valign="top"
><P 

>Contains the X509 CRLs for any CAs in the ./certs directory. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/rejected </P
></TD
><TD  
 valign="top"
><P 

>The root of certificate store which contains certificates which have been rejected. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>&lt;root&gt;/rejected/certs </P
></TD
><TD  
 valign="top"
><P 

>Contains the X509 certificates which have been rejected. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1">All X509 certificates are stored in DER format and have a &lsquo;.der&rsquo; extension on the file name. </P
><P 

>All CRLs are stored in DER format and have a &lsquo;.crl&rsquo; extension on the file name.  </P
><P 

>Private keys should be in <A href="#LinkTarget_2653" href="#">
PKCS #12</A>
 format with a &lsquo;.pfx&rsquo; extension or in the OpenSSL PEM format. The OpenSSL PEM format is not formally defined and should only be used by applications which use the OpenSSL libraries to implement security. Other private key formats may exist. </P
><P 

>The base name of the Private Key file shall be the same as the base file name for the matching Certificate file stored in the ./certs directory. </P
><P 

>A recommended naming convention is: </P
><P 

>&lt;CommonName&gt; [&lt;Thumbprint&gt;].(der | pem | pfx) </P
><P 

>Where the CommonName is the CommonName of the Certificate and the Thumbprint is the SHA1 hash of the certificate formatted as a hexadecimal string. </P
><H2 
 ID="LinkTarget_8938"
><FONT size="+1"><B>F.2 Installation Directories on Windows </H2
><P 

><FONT size="+1"></B>The <I>LocalDiscoveryServer</I> executable shall be installed in the following location: </P
><P 

>%CommonProgamFiles%\OPC Foundation\UA\Discovery </P
><P 

>where %CommonProgamFiles% is the value of the <I>CommonProgamFiles</I> environment variable on 32-bit systems. On 64-bit systems the value of the <I>CommonProgamFiles(x86) </I>environment variable is used instead. </P
><P 

>The configuration files used by the <I>LocalDiscoveryServer</I> executable shall be installed in the following location: </P
><P 

>%CommonApplicationData%\OPC Foundation\UA\Discovery </P
><P 

>where %CommonApplicationData% is the location of the application data folder shared by all users. The exact location depends on the operating system, however, under Windows 7 or later the common application data folder is usually C:\ProgramData. </P
><P 

>The certificates stores used by the <I>LocalDiscoveryServer</I> shall be organized as described in <A href="#LinkTarget_8808" href="#">
F.1</A>
. The root of the certificates stores shall be in the following location:  </P
><P 

>%CommonApplicationData%\OPC Foundation\UA\pki </P
><P 

> </P
><H1 
 ID="LinkTarget_8954"
><FONT size="+1"><B>Annex G  </B>(normative) <B> Application Installation Process </H1
><H2 
 ID="LinkTarget_8956"
><FONT size="+1">G.1 Provisioning with Pull Management </H2
><P 

><FONT size="+1"></B>Applications that use Pull Management (see <A href="#LinkTarget_4397" href="#">
7.2</A>
) to initialize their configuration need to know the location of the <I>CertificateManager</I> which they can use to request <I>Certificates</I> and download Trust Lists. This location may be auto-discovered via mDNS by looking for servers with the GDS capability (see <A href="#LinkTarget_8520" href="#">
Annex D</A>
) or by providing a URL via and out of band mechanism such as e-mail or a web page. </P
><P 

>Once the location is known the Application must connect to the <I>CertificateManager</I> and establish a secure channel. This will require that the Application trust the <I>Certificate</I> provided by the <I>CertificateManager</I> even if is not in the Application&rsquo;s <I>Trust List</I>. If there is an interactive user the Application should warn the user before proceeding. If there is no interactive user the Application should ensure the domain in the URL matches one of the domains in the <I>Certificate</I>. </P
><P 

>In some cases, the Application distributor or installer will know the CA used to sign the <I>Certificate</I> used by the <I>CertificateManager</I> and can add this CA to the Application&rsquo;s <I>Trust List </I>during installation. If practical, this approach provides the best protection against accidental registration with rogue <I>CertificateManagers. </I></P
><P 

>After establishing a secure channel with the <I>CertificateManager</I>, the Application must provide user credentials which allow it to register new applications and request new <I>Certificates.</I> The credentials may be provided by prompting a user or they may be one time use credentials delivered via some out of band mechanism such as a web site during the installation process.  </P
><P 

>For embedded systems it may not be practical to enter user credentials. As an alternative, the device manufacturer shall provide a unique <I>ApplicationInstance</I> <I>Certificate</I> during manufacture and provide the <I>Certificate</I> or an unique identifier for the <I>Certificate</I> to the device installer. The installer would then register the unique identifier or <I>Certificate</I> with the <I>CertificateManager</I> which would allow the device to request a new <I>Certificate</I> by creating a Secure Channel with the manufacturer&rsquo;s <I>Certificate</I>. </P
><P 

>Once an Application has received its first <I>Certificate</I> then the <I>Certificate</I> can be used in lieu of user credentials when the Application needs to renew its <I>Certificate</I> or update its Trust List. </P
><H2 
 ID="LinkTarget_8972"
><FONT size="+1"><B>G.2 Provisioning with the Push Management </H2
><P 

><FONT size="+1"></B><I>Servers</I> that use Push Management (see <A href="#LinkTarget_4416" href="#">
7.3</A>
) to initialize their configuration shall have a default <I>Certificate</I> assigned before the Push Management process can start.. </P
><P 

>In addition, Servers shall go into a &ldquo;provisioning state&rdquo; that makes it possible for remote clients to update the security configuration via the <I>ServerConfiguration</I> <I>Object</I> (see <A href="#LinkTarget_7323" href="#">
7.7.2</A>
). When a <I>Server</I> is in the &ldquo;provisioning state&rdquo; it should limit the available functionality. </P
><P 

>Once a Server has been configured it automatically leaves the &ldquo;provisioning state&rdquo;. This step is necessary to ensure that security is not compromised. </P
><P 

>A possible workflow for implementing the &ldquo;provisioning state&rdquo; include: </P
><DL 

><DD 

>1. A flag in the configuration file that defaults to ON; </DD
><DD 

>2. Always allow Clients to connect securely if the <I>Trust List</I> is empty; </DD
><DD 

>3. Connect to the Server and provide administrator credentials where: </DD
><DL 

><DD 

>o Toggle a physical switch on the device which enables access for a short period or </DD
><DD 

>o Provide one-time use password specified via an out-of-band mechanism; </DD
></DL
></DL
><P 

> </P
><DL 

><DD 

>4. Provide a new Certificate (optional) and <I>Trust List</I>; </DD
></DL
><P 

> </P
><DL 

><DD 

>5. Set the configuration flag to OFF; </DD
></DL
><P 

> </P
><P 

>Subsequent updates to Trust Lists or <I>Certificates</I> can be allowed if the Client has a trusted <I>Certificate</I> and valid administrator credentials. </P
><P 

>In some cases, the <I>Application</I> distributor or installer will know the CA used to sign the <I>Certificate</I> used by the <I>CertificateManager</I> and can add this CA to the Application&rsquo;s <I>Trust List </I>during installation. If practical, this approach provides the best protection against accidental configuration by malicious Clients<I>.</I>  </P
><P 

>If the device is automatically discovered by the <I>CertificateManager</I> the <I>CertificateManager</I>  needs some way to ensure that the device belongs on the network. The manufacturer can provide a unique <I>ApplicationInstance</I> <I>Certificate</I> during manufacture and provide the serial numbers to the device installer. The installer would then register the serial number or <I>Certificate</I> with the <I>CertificateManager</I>. When the <I>CertificateManager </I>discovers the device it would<I> </I>check that the <I>Certificate</I> is for one of the pre-authorized devices and continue with automatic provisioning of the device. </P
><H2 
 ID="LinkTarget_9012"
><FONT size="+1"><B>G.3 Setting Permissions </H2
><P 

><FONT size="+1"></B>If a Private Key is stored on a regular file system it shall be protected from unauthorized access. This is best done by setting operating system permissions on the private key file that deny read/write access to anyone who is not using an account authorized to run the <I>Application</I>.  </P
><P 

>In some cases, additional protection can be added by protecting the Private Key with a password. Saving Private Key passwords in files should be avoided. This mode may also work in conjunction with &ldquo;smart cards&rdquo; that use hardware to protect the Private Key. </P
><P 

>In addition to the Private Key, <I>Applications</I> shall be protected from unauthorized updates to their <I>Trust List</I>. This can also be done by setting operating system permissions on the directory where the Trust List is stored that deny write access to anyone who is not using an account authorized to administer the <I>Application</I>. </P
><P 

>Finally, <I>Applications</I> may depend on one or more configuration files and/or databases which tell them where there <I>Trust List</I> and Private Key can be found. The source of any security related configuration information shall be protected from unauthorized updates. The exact mechanism used to implement these protections depends on the source of the information.  </P
><H1 
 ID="LinkTarget_9017"
><FONT size="+1"><B>Annex H   </B>(informative)<B>   Comparison with RFC 7030 </H1
><H2 
 ID="LinkTarget_9019"
><FONT size="+1">H.1 Overview </H2
><P 

><FONT size="+1"></B>RFC 7030 (Enrolment over Secure Transport or EST) defines a mechanism for the distribution of <I>Certificates</I> to devices. This appendix summarizes the capabilities provided by EST and how the same capabilities are provided by the <I>CertificateManager</I> defined in Clause <A href="#LinkTarget_4371" href="#">
7</A>
. </P
><H2 
 ID="LinkTarget_9026"
><FONT size="+1"><B>H.2 Obtaining CA Certificates </H2
><P 

><FONT size="+1"></B>In EST a web operation returns the CA certificates. In OPC UA the CA <I>Certificates</I> are returned when the <I>CertificateManager</I> client reads the <I>Trust List</I> assigned to the application from the <I>CertificateManager</I>. Prior to these operations the client must verify that the server is authorized to provide CAs. <A href="#LinkTarget_9033" href="#">
Table 49</A>
 compares how EST clients verify the EST server with how <I>CertificateManager</I> clients verify a <I>CertificateManager</I>.  </P
><P 

><B>Table 49 &ndash; Verifying that a Server is allowed to Provide Certificates </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">EST </P
></TD
><TD  
 valign="top"
><P 

>OPC UA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Compare the URL for the EST server with the HTTPS certificate returned in the TLS handshake.  </P
></TD
><TD  
 valign="top"
><P 

>Compare the URL for the <FONT size="+1"><I>CertificateManager</I> <FONT size="+1">with the OPC UA <I>C</I><I>ertificate</I> returned in <I>GetEndpoin</I><I>ts</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Preconfigure the client to trust the EST server&rsquo;s HTTPS certificate. </P
></TD
><TD  
 valign="top"
><P 

>Preconfigure the client by adding the <FONT size="+1"><I>CertificateManager</I> <FONT size="+1"><I>Certificate</I> to the client Trust List. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Manual approval of the CA certificate after comparing the certificate with out of band information. </P
></TD
><TD  
 valign="top"
><P 

>Manual approval of the <FONT size="+1"><I>CertificateManager</I> <FONT size="+1"><I>Certificate</I> after comparing the <I>Certificate</I> with out of band information. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Pre-shared credentials for use with certificate-less TLS. </P
></TD
><TD  
 valign="top"
><P 

>No equivalent. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_9066"
><FONT size="+1"><B>H.3 Initial Enrolment </H2
><P 

><FONT size="+1"></B>In EST a web operation is used to enrol a client. The EST server authenticates and authorizes the EST client before allowing the operation to proceed. In OPC UA, a <I>Method</I> is used to request a <I>Certificate</I>. The <I>CertificateManager</I> also authenticates and authorizes the client before allowing the operation to proceed. <A href="#LinkTarget_9073" href="#">
Table 50</A>
 compares how EST servers verify the EST client with how a <I>CertificateManager</I> verifies a <I>CertificateManager</I> client.  </P
><P 

><B>Table 50 &ndash; Verifying that a Client is allowed to request Certificates </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">EST </P
></TD
><TD  
 valign="top"
><P 

>OPC UA </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>TLS with a client certificate which is previously issued by the EST server. </P
></TD
><TD  
 valign="top"
><P 

>The <FONT size="+1"><I>CertificateManager</I> <FONT size="+1">client has a previously certificate previously issued by the GDS. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>TLS with a previously installed certificate which is trusted by the EST server. </P
></TD
><TD  
 valign="top"
><P 

>The <FONT size="+1"><I>CertificateManager</I> <FONT size="+1">client has a certificate which is trusted by the <FONT size="+1"><I>CertificateManager</I><FONT size="+1">. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Shared credentials distributed out of band which are used for certificate-less TLS. </P
></TD
><TD  
 valign="top"
><P 

>No equivalent. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HTTPS username/password authentication. </P
></TD
><TD  
 valign="top"
><P 

>The <FONT size="+1"><I>C</I><I>ertificateManager</I> <FONT size="+1">client provides appropriate user credentials when it establishes the session. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H2 
 ID="LinkTarget_9106"
><FONT size="+1"><B>H.4 Client Certificate Reissuance </H2
><P 

><FONT size="+1"></B>In EST a certificate issued by the EST server can be used to as an HTTPS client certificate. This can be used to authorize the re-issue of the certificate. In OPC UA a certificate issued by the GDS can be used to establish a secure channel. This would then allow the GDS client to request that the certificate be re-issued. </P
><P 

>In both EST and OPC UA clients can fall back to the authentication mechanisms used for Initial Enrolment if it is not possible to use the current certificate to establish a secure channel with the server. </P
><H2 
 ID="LinkTarget_9110"
><FONT size="+1"><B>H.5 Server Key Generation </H2
><P 

><FONT size="+1"></B>Both EST and OPC UA allow clients to request new private keys. Both specifications require that encryption be used when returning private key data.  </P
><P 

>EST allows clients to explicitly request that separate encryption be applied to the private key. The algorithms are specified in the CSR (certificate signing request). </P
><P 

>OPC UA allows clients to password protect the key (which uses encryption), however, OPC UA does not allow the client to directly specify the algorithm used. That said, the envelope used to transport private keys can be specified with the <I>PrivateKeyFormat</I> parameter and the set of envelope formats supported by the <I>CertificateManager </I>is published in the Address Space. It is expected that the envelope format will specify the algorithms used either by explicitly encoding the algorithm within the envelope or as part of the definition of the envelope.  </P
><H2 
 ID="LinkTarget_9114"
><FONT size="+1"><B>H.6 Certificate Signing Request (CSR) Attributes Request </H2
><P 

><FONT size="+1"></B>EST allows the client to request the list of CSR attributes the EST server supports. The attributes can indicate what additional metadata the client can provide or the algorithms that must be used. </P
><P 

>In OPC UA the CSR metadata required is fixed by the specification and there is no mechanism to publish extensions. Clients are free to include additional metadata in the CSR, however, the <I>CertificateManager</I> may ignore it. </P
><P 

>There is no mechanism in OPC UA to publish the algorithms which must be used for the CSR, however, the <I>CertificateManager </I>will reject CSRs that do not meet its requirements.  </P
><P 

>_________________ </P
></BODY>
</HTML>
