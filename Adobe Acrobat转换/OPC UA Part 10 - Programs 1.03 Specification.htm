<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!-- Created from PDF via Acrobat SaveAsXML -->
<!-- Mapping table version: 28-February-2003 -->
<HTML>
<HEAD>
<META
 name="dc.creator"
 content="Karl Deiretsbacher" >
<META
 name="dc.description"
 content="Industrial Communications" >
<META
 name="dc.title"
 content="OPC Unified Architecture" >
<META
 name="dc.date"
 content="2015-07-19T16:39:43-04:00" >
<META
 name="dc.date.modified"
 content="2015-07-19T16:39:43-04:00" >
<META
 name="generator"
 content="Adobe Acrobat Exchange-Pro 8.0" >
</HEAD>
<BODY bgcolor=white text=black link=blue vlink=purple alink=fushia >
<HR>
<UL>
<LI>
<A href="#LinkTarget_1259">FIGURES</A>
</LI>
<LI>
<A href="#LinkTarget_1375">TABLES</A>
</LI>
<LI>
<A href="#LinkTarget_1575">Revision 1.3 Highlights</A>
</LI>
<LI>
<A href="#LinkTarget_1634">1 Scope</A>
</LI>
<LI>
<A href="#LinkTarget_1646">2 Reference documents</A>
</LI>
<LI>
<A href="#LinkTarget_1658">3 Terms, definitions and conventions</A>
<UL>
<LI>
<A href="#LinkTarget_1659">3.1 Terms and definitions</A>
</LI>
<LI>
<A href="#LinkTarget_1707">3.2 Abbreviations</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_1715">4 Concepts</A>
<UL>
<LI>
<A href="#LinkTarget_1716">4.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_1780">4.2 Programs</A>
<UL>
<LI>
<A href="#LinkTarget_1781">4.2.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_1794">4.2.2 Security considerations</A>
</LI>
<LI>
<A href="#LinkTarget_1796">4.2.3 Program Finite State Machine</A>
</LI>
<LI>
<A href="#LinkTarget_2038">4.2.4 Program states</A>
</LI>
<LI>
<A href="#LinkTarget_2082">4.2.5 State transitions</A>
</LI>
<LI>
<A href="#LinkTarget_2196">4.2.6 Program state transition stimuli</A>
</LI>
<LI>
<A href="#LinkTarget_2198">4.2.7 Program Control Methods</A>
</LI>
<LI>
<A href="#LinkTarget_2256">4.2.8 Program state transition effects</A>
</LI>
<LI>
<A href="#LinkTarget_2258">4.2.9 Program result data</A>
<UL>
<LI>
<A href="#LinkTarget_2259">4.2.9.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_2261">4.2.9.2 Intermediate result data</A>
</LI>
<LI>
<A href="#LinkTarget_2265">4.2.9.3 Terminal result data</A>
</LI>
<LI>
<A href="#LinkTarget_2267">4.2.9.4 Monitoring Programs</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_2271">4.2.10 Program lifetime</A>
<UL>
<LI>
<A href="#LinkTarget_2272">4.2.10.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_2286">4.2.10.2 Program instances</A>
</LI>
<LI>
<A href="#LinkTarget_2288">4.2.10.3 Program recycling</A>
</LI>
</UL>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_2291">5 Model</A>
<UL>
<LI>
<A href="#LinkTarget_2292">5.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_2310">5.2 ProgramType</A>
<UL>
<LI>
<A href="#LinkTarget_2311">5.2.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_2816">5.2.2 ProgramType Properties</A>
</LI>
<LI>
<A href="#LinkTarget_2825">5.2.3 ProgramType components</A>
<UL>
<LI>
<A href="#LinkTarget_2826">5.2.3.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_2837">5.2.3.2 ProgramType states</A>
</LI>
<LI>
<A href="#LinkTarget_3211">5.2.3.3 ProgramType transitions</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_4141">5.2.4 ProgramType causes (Methods)</A>
<UL>
<LI>
<A href="#LinkTarget_4142">5.2.4.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_4405">5.2.4.2 Standard attributes</A>
</LI>
<LI>
<A href="#LinkTarget_4407">5.2.4.3 Standard properties</A>
<UL>
<LI>
<A href="#LinkTarget_4408">5.2.4.3.1 Overview</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_4411">5.2.5 ProgramType effects (Events)</A>
<UL>
<LI>
<A href="#LinkTarget_4412">5.2.5.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_4415">5.2.5.2 ProgramTransitionEventType</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5273">5.2.6 AuditProgramTransitionEventType</A>
</LI>
<LI>
<A href="#LinkTarget_5374">5.2.7 FinalResultData</A>
</LI>
<LI>
<A href="#LinkTarget_5377">5.2.8 ProgramDiagnostic DataType</A>
</LI>
<LI>
<A href="#LinkTarget_5504">5.2.9 ProgramDiagnosticType VariableType</A>
</LI>
</UL>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5681">Annex A  (informative)  Program example</A>
<UL>
<LI>
<A href="#LinkTarget_5683">A.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_5722">A.2 DomainDownload Program</A>
<UL>
<LI>
<A href="#LinkTarget_5723">A.2.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_5725">A.2.2 DomainDownload states</A>
</LI>
<LI>
<A href="#LinkTarget_5752">A.2.3 DomainDownload transitions</A>
</LI>
<LI>
<A href="#LinkTarget_5979">A.2.4 DomainDownload Methods</A>
<UL>
<LI>
<A href="#LinkTarget_5980">A.2.4.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_5982">A.2.4.2 Method Arguments</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5984">A.2.5 DomainDownload Events</A>
<UL>
<LI>
<A href="#LinkTarget_5985">A.2.5.1 General</A>
</LI>
<LI>
<A href="#LinkTarget_5989">A.2.5.2 Event information</A>
</LI>
<LI>
<A href="#LinkTarget_5991">A.2.5.3 Final result data</A>
</LI>
</UL>
</LI>
<LI>
<A href="#LinkTarget_5993">A.2.6 DomainDownload model</A>
<UL>
<LI>
<A href="#LinkTarget_5994">A.2.6.1 Overview</A>
</LI>
<LI>
<A href="#LinkTarget_5997">A.2.6.2 DomainDownloadType</A>
</LI>
<LI>
<A href="#LinkTarget_8640">A.2.6.3 Sequence of operations</A>
</LI>
</UL>
</LI>
</UL>
</LI>
</UL>
</LI>
</UL>
</HR>
<DIV class="Part" 

><P 

><FONT size="+1" color="#000000"></B> </P
><P 

>  </P
><IMG Alt="" width="3439" height="487"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_0.jpg" ><P 

><FONT size="+3"><B>OPC Unified Architecture </P
><FONT size="+1"></B> <P 

><FONT size="+3"><B>Specification </P
><P 

>Part 10:  Programs </P
><P 

>Release  1.03 </P
><P 

>July 19, 2015 </P
><P 

>  </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1"></B>Specification Type: </P
></TD
><TD  
 valign="top"
><P 

>Industry Standard Specification </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Comments: </P
></TD
><TD  
 valign="top"
><P 

>Report or view errata: http://www.opcfoundation.org/errata </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Title: </P
></TD
><TD  
 valign="top"
><P 

>OPC Unified Architecture  Part 10 :Programs </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Date: </P
></TD
><TD  
 valign="top"
><P 

>July 19, 2015 </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Version: </P
></TD
><TD  
 valign="top"
><P 

>Release 1.03 </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Software: </P
></TD
><TD  
 valign="top"
><P 

>MS-Word </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Source: </P
></TD
><TD  
 valign="top"
><P 

>OPC UA Part 10 - Programs 1.03 Specification.docx </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Author: </P
></TD
><TD  
 valign="top"
><P 

>Siemens AG </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Status: </P
></TD
><TD  
 valign="top"
><P 

>Release </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><H1 

>  </H1
><P 

><FONT size="+1"> </P
><P 

> </P
><DIV class="TOC" 

><FONT size="+1"> <DIV class="TOCI" 

><FONT size="+1"><B>CONTENTS </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1259" href="#">
<FONT size="+1">FIGURES</B> ................................................................................................................................ v</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1375" href="#">
<FONT size="+1"><B>TABLES</B> ................................................................................................................................. v</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1575" href="#">
<FONT size="+1"><B>Revision 1.3 Highlights</B> ........................................................................................................ ix</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1634" href="#">
<FONT size="+1">1<FONT size="+1"> <FONT size="+1">Scope .............................................................................................................................. 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1646" href="#">
<FONT size="+1">2<FONT size="+1"> <FONT size="+1">Reference documents ...................................................................................................... 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1658" href="#">
<FONT size="+1">3<FONT size="+1"> <FONT size="+1">Terms, definitions and conventions .................................................................................. 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1659" href="#">
<FONT size="+1">3.1<FONT size="+1"> <FONT size="+1">Terms and definitions .............................................................................................. 1</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1707" href="#">
<FONT size="+1">3.2<FONT size="+1"> <FONT size="+1">Abbreviations .......................................................................................................... 2</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1715" href="#">
<FONT size="+1">4<FONT size="+1"> <FONT size="+1">Concepts ......................................................................................................................... 2</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1716" href="#">
<FONT size="+1">4.1<FONT size="+1"> <FONT size="+1">General ................................................................................................................... 2</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1780" href="#">
<FONT size="+1">4.2<FONT size="+1"> <FONT size="+1">Programs ................................................................................................................ 3</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ......................................................................................................... 3</DIV
></DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Security considerations .................................................................................... 4</DIV
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="Sect" 

><P 

></P
><P 

></P
></DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Program Finite State Machine .......................................................................... 4</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Program states ................................................................................................ 5</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">State transitions .............................................................................................. 6</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Program state transition stimuli ........................................................................ 6</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Program Control Methods ................................................................................ 6</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Program state transition effects ....................................................................... 7</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Program result data ......................................................................................... 7</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">Program lifetime .............................................................................................. 8</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2291" href="#">
5<FONT size="+1"> <FONT size="+1">Model .............................................................................................................................. 8</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2292" href="#">
<FONT size="+1">5.1<FONT size="+1"> <FONT size="+1">General ................................................................................................................... 8</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2310" href="#">
<FONT size="+1">5.2<FONT size="+1"> <FONT size="+1">ProgramType .......................................................................................................... 9</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

> <FONT size="+1">Overview ......................................................................................................... 9</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ProgramType Properties ................................................................................ 10</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ProgramType components ............................................................................. 11</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ProgramType causes (Methods) .................................................................... 15</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ProgramType effects (Events) ....................................................................... 16</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">AuditProgramTransitionEventType ................................................................. 19</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">FinalResultData ............................................................................................. 20</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ProgramDiagnostic DataType ........................................................................ 20</DIV
><DIV class="TOCI" 

><FONT size="+1"> <FONT size="+1">ProgramDiagnosticType VariableType ........................................................... 20</DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5681" href="#">
Annex A (informative)  Program example .............................................................................. 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5683" href="#">
<FONT size="+1">A.1<FONT size="+1"> <FONT size="+1">Overview............................................................................................................... 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5722" href="#">
<FONT size="+1">A.2<FONT size="+1"> <FONT size="+1">DomainDownload Program .................................................................................... 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5723" href="#">
<FONT size="+1">A.2.1<FONT size="+1"> <FONT size="+1">General ......................................................................................................... 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5725" href="#">
<FONT size="+1">A.2.2<FONT size="+1"> <FONT size="+1">DomainDownload states ................................................................................ 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5752" href="#">
<FONT size="+1">A.2.3<FONT size="+1"> <FONT size="+1">DomainDownload transitions.......................................................................... 23</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5979" href="#">
<FONT size="+1">A.2.4<FONT size="+1"> <FONT size="+1">DomainDownload Methods ............................................................................ 24</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5984" href="#">
<FONT size="+1">A.2.5<FONT size="+1"> <FONT size="+1">DomainDownload Events ............................................................................... 24</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5993" href="#">
<FONT size="+1">A.2.6<FONT size="+1"> <FONT size="+1">DomainDownload model ................................................................................ 25</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1"> </DIV
><H1 
 ID="LinkTarget_1259"
><B>FIGURES </H1
><DIV class="TOC" 

><DIV class="TOCI" 

></B> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1759" href="#">
Figure 1 <FONT size="+1" color="#000000"></B>&ndash; Automation facility control ...................................................................................... 3</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1792" href="#">
<FONT size="+1">Figure 2 &ndash; Program illustration ................................................................................................ 4</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2037" href="#">
<FONT size="+1">Figure 3 &ndash; Program states and transitions ............................................................................... 5</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2303" href="#">
<FONT size="+1">Figure 4 &ndash; Program Type ........................................................................................................ 9</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2831" href="#">
<FONT size="+1">Figure 5 &ndash; Program FSM References .................................................................................... 11</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4140" href="#">
<FONT size="+1">Figure 6 &ndash; ProgramType causes and effects ......................................................................... 15</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5685" href="#">
<FONT size="+1">Figure A.1 &ndash; Program example .............................................................................................. 22</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5735" href="#">
<FONT size="+1">Figure A.2 &ndash; DomainDownload state diagram ........................................................................ 23</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_7073" href="#">
<FONT size="+1">Figure A.3 &ndash; DomainDownloadType partial state model ......................................................... 29</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_7958" href="#">
<FONT size="+1">Figure A.4 &ndash; Ready To Running model .................................................................................. 32</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8206" href="#">
<FONT size="+1">Figure A.5 &ndash; Opening To Sending To Closing model .............................................................. 34</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8400" href="#">
<FONT size="+1">Figure A.6 &ndash; Running To Suspended model ........................................................................... 35</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8416" href="#">
<FONT size="+1">Figure A.7 &ndash; Suspended To Running model ........................................................................... 36</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8432" href="#">
<FONT size="+1">Figure A.8 &ndash; Running To Halted &ndash; Aborted model .................................................................. 37</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8447" href="#">
<FONT size="+1">Figure A.9 &ndash; Suspended To Aborted model ............................................................................ 38</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8636" href="#">
<FONT size="+1">Figure A.10 &ndash; Running To Completed model .......................................................................... 39</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8761" href="#">
<FONT size="+1">Figure A.11 &ndash; Sequence of operations ................................................................................... 40</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1"> </DIV
></DIV
><H1 
 ID="LinkTarget_1375"
><B>TABLES </H1
><DIV class="TOC" 

><DIV class="TOCI" 

></B> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_1808" href="#">
Table 1 &ndash; Program Finite State Machine .................................................................................. 4</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2045" href="#">
<FONT size="+1">Table 2 &ndash; Program states ........................................................................................................ 5</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2089" href="#">
<FONT size="+1">Table 3 &ndash; Program state transitions ........................................................................................ 6</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2208" href="#">
<FONT size="+1">Table 4 &ndash; Program Control Methods ........................................................................................ 7</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2319" href="#">
<FONT size="+1">Table 5 &ndash; ProgramType ........................................................................................................ 10</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_2849" href="#">
<FONT size="+1">Table 6 &ndash; Program states ...................................................................................................... 12</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_3223" href="#">
<FONT size="+1">Table 7 &ndash; Program transitions ............................................................................................... 13</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4153" href="#">
<FONT size="+1">Table 8 &ndash; ProgramType causes............................................................................................. 15</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4428" href="#">
<FONT size="+1">Table 9 &ndash; ProgramTransitionEventType ................................................................................ 17</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_4491" href="#">
<FONT size="+1">Table 10 &ndash; ProgramTransitionEvents .................................................................................... 18</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5285" href="#">
<FONT size="+1">Table 11 &ndash; AuditProgramTransitionEventType ...................................................................... 19</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5384" href="#">
<FONT size="+1">Table 12 &ndash; ProgramDiagnosticDataType structure ................................................................ 20</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5489" href="#">
<FONT size="+1">Table 13 &ndash; ProgramDiagnosticDataType definition ................................................................ 20</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5516" href="#">
<FONT size="+1">Table 14 &ndash; ProgramDiagnosticType VariableType ................................................................. 21</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_5763" href="#">
<FONT size="+1">Table A.1 &ndash; DomainDownload states ..................................................................................... 24</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6004" href="#">
<FONT size="+1">Table A.2 &ndash; DomainDownload Type ...................................................................................... 25</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6235" href="#">
<FONT size="+1">Table A.3 &ndash; Transfer State Machine Type ............................................................................. 26</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6499" href="#">
<FONT size="+1">Table A.4 &ndash; Transfer State Machine &ndash; states ......................................................................... 27</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6751" href="#">
<FONT size="+1">Table A.5 &ndash; Finish State Machine Type ................................................................................. 27</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6847" href="#">
<FONT size="+1">Table A.6 &ndash; Finish State Machine &ndash; states ............................................................................ 28</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_6960" href="#">
<FONT size="+1">Table A.7 &ndash; DomainDownload Type Property Attributes variable values ................................ 28</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_7086" href="#">
<FONT size="+1">Table A.8 &ndash; Additional DomainDownload transition types ...................................................... 30</A>
<FONT size="+1"> </DIV
></DIV
><DIV class="TOC" 

><DIV class="TOCI" 

><A href="#LinkTarget_7968" href="#">
<FONT size="+1">Table A.9 &ndash; Start Method additions ....................................................................................... 32</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8029" href="#">
<FONT size="+1">Table A.10 &ndash; StartArguments ................................................................................................ 33</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8220" href="#">
<FONT size="+1">Table A.11 &ndash; IntermediateResults Object .............................................................................. 34</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8311" href="#">
<FONT size="+1">Table A.12 &ndash; Intermediate result data Variables .................................................................... 35</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8470" href="#">
<FONT size="+1">Table A.13 &ndash; FinalResultData ............................................................................................... 38</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><A href="#LinkTarget_8549" href="#">
<FONT size="+1">Table A.14 &ndash; Final result Variables ........................................................................................ 39</A>
<FONT size="+1"> </DIV
><DIV class="TOCI" 

><FONT size="+1"> </DIV
></DIV
><P 

><FONT size="+1"><B>UNIFIED ARCHITECTURE &ndash;  </P
><P 

><FONT size="+1">FOREWORD </P
><P 

><FONT size="+1"></B>This specification is the specification for developers of OPC UA applications. The specification is a result of an analysis and design process to develop a standard interface to facilitate the development of applications by multiple vendors that shall inter-operate seamlessly together.  </P
><P 

><B>Copyright &copy; 2006-2015, OPC Foundation, Inc. </P
><P 

><FONT size="+1">AGREEMENT OF USE </P
><P 

><FONT size="+1"></B>COPYRIGHT RESTRICTIONS </P
><P 

>Any unauthorized use of this specification may violate copyright laws, trademark laws, and communications regulations and statutes. This document contains information which is protected by copyright. All Rights Reserved. No part of this work covered by copyright herein may be reproduced or used in any form or by any means--graphic, electronic, or mechanical, including photocopying, recording, taping, or information storage and retrieval systems--without permission of the copyright owner. </P
><P 

>OPC Foundation members and non-members are prohibited from copying and redistributing this specification. All copies must be obtained on an individual basis, directly from the OPC Foundation Web site <FONT size="+1">H<A href="http://www.opcfoundation.org/">
TU<FONT size="+1" color="#0000FF">http://www.opcfoundation.org<FONT size="+1">UT</A>
<FONT color="#000000">H<FONT size="+1">. </P
><P 

>PATENTS </P
><P 

>The attention of adopters is directed to the possibility that compliance with or adoption of OPC specifications may require use of an invention covered by patent rights. OPC shall not be responsible for identifying patents for which a license may be required by any OPC specification, or for conducting legal inquiries into the legal validity or scope of those patents that are brought to its attention. OPC specifications are prospective and advisory only. Prospective users are responsible for protecting themselves against liability for infringement of patents. </P
><P 

>WARRANTY AND LIABILITY DISCLAIMERS </P
><P 

>WHILE THIS PUBLICATION IS BELIEVED TO BE ACCURATE, IT IS PROVIDED &quot;AS IS&quot; AND MAY CONTAIN ERRORS OR MISPRINTS. THE OPC FOUDATION MAKES NO WARRANTY OF ANY KIND, EXPRESSED OR IMPLIED, WITH REGARD TO THIS PUBLICATION, INCLUDING BUT NOT LIMITED TO ANY WARRANTY OF TITLE OR OWNERSHIP, IMPLIED WARRANTY OF MERCHANTABILITY OR WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE OR USE. IN NO EVENT SHALL THE OPC FOUNDATION BE LIABLE FOR ERRORS CONTAINED HEREIN OR FOR DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, RELIANCE OR COVER DAMAGES, INCLUDING LOSS OF PROFITS, REVENUE, DATA OR USE, INCURRED BY ANY USER OR ANY THIRD PARTY IN CONNECTION WITH THE FURNISHING, PERFORMANCE, OR USE OF THIS MATERIAL, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. </P
><P 

>The entire risk as to the quality and performance of software developed using this specification is borne by you.  </P
><P 

>RESTRICTED RIGHTS LEGEND </P
><P 

>This Specification is provided with Restricted Rights. Use, duplication or disclosure by the U.S. government is subject to restrictions as set forth in (a) this Agreement pursuant to DFARs 227.7202-3(a); (b) subparagraph (c)(1)(i) of the Rights in Technical Data and Computer Software clause at DFARs 252.227-7013; or (c) the Commercial Computer Software Restricted Rights clause at FAR 52.227-19 subdivision (c)(1) and (2), as applicable. Contractor / manufacturer are the OPC Foundation,. 16101 N. 82nd Street, Suite 3B, Scottsdale, AZ, 85260-1830 </P
><P 

>COMPLIANCE </P
><P 

>The OPC Foundation shall at all times be the sole entity that may authorize developers, suppliers and sellers of hardware and software to use certification marks, trademarks or other special designations to indicate compliance with these materials. Products developed using this specification may claim compliance or conformance with this specification if and only if the software satisfactorily meets the certification requirements set by the OPC Foundation. Products that do not meet these requirements may claim only that the product was based on this specification and must not claim compliance or conformance with this specification.  </P
><P 

>TRADEMARKS </P
><P 

>Most computer and software brand names have trademarks or registered trademarks. The individual trademarks have not been listed here. </P
><P 

>GENERAL PROVISIONS </P
><P 

>Should any provision of this Agreement be held to be void, invalid, unenforceable or illegal by a court, the validity and enforceability of the other provisions shall not be affected thereby.  </P
><P 

>This Agreement shall be governed by and construed under the laws of the State of Minnesota, excluding its choice or law rules. </P
><P 

>This Agreement embodies the entire understanding between the parties with respect to, and supersedes any prior understanding or agreement (oral or written) relating to, this specification.  </P
><P 

>ISSUE REPORTING </P
><P 

>The OPC Foundation strives to maintain the highest quality standards for its published specifications; hence they undergo constant review and refinement. Readers are encouraged to report any issues and view any existing errata here: <FONT size="+1">H<A href="http://www.opcfoundation.org/errata">
TU<FONT size="+1" color="#0000FF">http://www.opcfoundation.org/errata<FONT size="+1">UT</A>
<FONT color="#000000">H<FONT size="+1"> </P
><H1 
 ID="LinkTarget_1575"
><FONT size="+1"><B>Revision 1.3 Highlights </H1
><P 

><FONT size="+1"></B>The following table includes the Mantis issues resolved with this revision. </P
><P 

> </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1"><B>Mantis ID </P
></TH
><TH 
 valign="top"
><P 

>Summary </P
></TH
><TH 
 valign="top"
><P 

>Resolution </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="http://www.opcfoundation.org/mantis/view.php?id=2580">
</B>2580</A>
 </P
></TD
><TD  
 valign="top"
><P 

>Clarify Node Class of ProgramDiagnosticType </P
></TD
><TD  
 valign="top"
><P 

>The ProgramDiagnosticType is a variable type that has a structured data type (ProgramDiagnosticDataType). The data type ProgramDiagnosticDataType does also has been defined. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="http://www.opcfoundation.org/mantis/view.php?id=2253">
2253</A>
 </P
></TD
><TD  
 valign="top"
><P 

>NIST security review has suggested that execution of a program should be limited to appropriate personnel and the concurrent invocation of these should also be monitored and restricted. </P
></TD
><TD  
 valign="top"
><P 

>Added a paragraph that suggests proper user authorisation for programs. Also, some diagnostic information is already defined. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><A href="http://www.opcfoundation.org/mantis/view.php?id=2516">
2516</A>
 </P
></TD
><TD  
 valign="top"
><P 

>Change &quot;Inherit the properties of&quot; into &quot;Subtype of&quot; </P
></TD
><TD  
 valign="top"
><P 

>Changed as suggested. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"><B>OPC Unified Architecture Specification </P
><P 

><FONT size="+1"></B> </P
><P 

><FONT size="+1"><B>Part 10: Programs </P
><P 

> </P
><P 

> </P
><P 

> </P
><H1 
 ID="LinkTarget_1634"
><FONT size="+1">1 Scope </H1
><P 

><FONT size="+1"></B>This specification is part of the overall OPC Unified Architecture (OPC UA) standard series and defines the information model associated with <I>Programs</I>. This includes the description of the <I>NodeClasses, </I>standard<I> </I><I>Properties, Methods</I> and <I>Events</I> and associated behaviour and information for <I>Programs</I>.   </P
><P 

>The complete address space model including all <I>NodeClass</I>es and <I>Attributes</I> is specified in <A href="#LinkTarget_1649" href="#">
Part 3</A>
. The services such as those used to invoke the <I>Methods</I> used to manage P<I>rograms</I> are specified in <A href="#LinkTarget_1655" href="#">
Part 4</A>
. </P
><H1 
 ID="LinkTarget_1646"
><FONT size="+1"><B>2 Reference documents </H1
><P 

><FONT size="+1"></B>The following documents, in whole or in part, are normatively referenced in this document and are indispensable for its application. For dated references, only the edition cited applies. For undated references, the latest edition of the referenced document (including any amendments) applies. </P
><P 

>Part 1, <I>OPC Unified Architecture </I><I>&ndash;</I><I> Part 1: Overview and Concepts </I> </P
><P 

>Part 3:&ndash;<FONT size="+1">1<FONT size="+1">, <I>OPC Unified Architecture</I><I> </I><I>&ndash;</I><I> </I><I>Part 3:</I><I> </I><I>Address Space Model</I><I> </I> </P
><DIV class="Note" 

><P 

><FONT size="+1">1 Under consideration. </P
><P 

>2 Under consideration. </P
><P 

>3 Under consideration. </P
><P 

>4 Under consideration. </P
></DIV
><P 

><FONT size="+1">Part 4:&ndash;<FONT size="+1">2<FONT size="+1">,<I> </I><I>OPC Unified Architecture</I><I> </I><I>&ndash;</I><I> </I><I>Part 4: Services</I><I> </I></P
><P 

>Part 5:&ndash;<FONT size="+1">3<FONT size="+1">, <I>OPC Unified</I><I> </I><I>Architecture</I><I> </I><I>&ndash;</I><I> </I><I>Part 5: Information Model</I> </P
><P 

>Part 7<FONT size="+1">4<FONT size="+1">, <I>OPC Unified Architecture </I><I>&ndash;</I><I> Part 7: Profiles</I> </P
><H1 
 ID="LinkTarget_1658"
><FONT size="+1"><B>3 Terms, definitions and conventions </H1
><H2 
 ID="LinkTarget_1659"
><FONT size="+1">3.1 Terms and definitions </H2
><P 

></B>For the purposes of this document, the terms and definitions given in <A href="#LinkTarget_1648" href="#">
Part 1</A>
, <A href="#LinkTarget_1649" href="#">
Part 3</A>
, as well as the following apply. </P
><DL 

><DL 

><DL 

><DD 

><B>  </DD
></DL
></DL
></DL
><P 

>function </P
><P 

></B>programmatic task performed by a server or device, usually accomplished by computer code execution </P
><DL 

><DL 

><DL 

><DD 

><B>  </DD
></DL
></DL
></DL
><P 

>Finite State Machine </P
><P 

></B>sequence of states and valid state transitions along with the causes and effects of those state transitions that define the actions of a <I>Program</I> in terms of discrete stages </P
><DL 

><DL 

><DL 

><DD 

><B>  </DD
></DL
></DL
></DL
><P 

>ProgramType </P
><P 

></B>type definition of a <I>Program </I>and is a subtype of the<I> FiniteStateMachineType</I> </P
><DL 

><DL 

><DL 

><DD 

><B>  </DD
></DL
></DL
></DL
><P 

>Program Control Method </P
><P 

></B><I>Method</I> having specific semantics designed for the control of a <I>Program </I>by causing a state transition </P
><DL 

><DL 

><DL 

><DD 

><B>  </DD
></DL
></DL
></DL
><P 

>Program Invocation </P
><P 

></B>unique <I>Object</I> instance of a <I>Program</I> existing on a <I>Server</I>  </P
><P 

><FONT size="+1">Note 1 to entry: A <I>Program Invocation</I> is distinguished from other <I>Object</I> instances of the same <I>ProgramType</I> by the object node&rsquo;s unique browse path. </P
><H2 
 ID="LinkTarget_1707"
><FONT size="+1"><B>3.2 Abbreviations  </H2
><P 

></B>DA Data Access </P
><P 

>FSM Finite State Machine </P
><P 

>HMI Human Machine Interfaces </P
><P 

>PCM Program Control Method </P
><P 

>PGM Program </P
><P 

>PI Program Invocation </P
><P 

>UA  Unified Architecture </P
><H1 
 ID="LinkTarget_1715"
><FONT size="+1"><B>4 Concepts </H1
><H2 
 ID="LinkTarget_1716"
><FONT size="+1">4.1 General </H2
><P 

></B>Integrated automation facilities manage their operations through the exchange of data and the coordinated invocation of system functions as illustrated in <A href="#LinkTarget_1759" href="#">
Figure 1</A>
. <I>Services</I> are required to perform the data exchanges and to invoke the functions that constitute system operation. These functions may be invoked through Human Machine Interfaces, cell controllers, or other supervisory control and data acquisition type systems. OPC UA defines <I>Methods</I> and <I>Programs</I> as an interoperable way to advertise, discover, and request these functions. They provide a normalizing mechanism for the semantic description, invocation, and result reporting of these functions. Together <I>Methods</I> and <I>Programs</I> complement the other OPC UA <I>Services</I> and <I>ObjectTypes</I> to facilitate the operation of an automation environment using a client-server hierarchy. </P
><P 

> </P
><IMG width="570" height="386"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_1.jpg" ><IMG width="564" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_2.jpg" ><IMG width="564" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_3.jpg" ><IMG Alt="BildM1" width="175" height="124"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_4.jpg" ><IMG width="75" height="22"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_5.jpg" ><IMG Alt="BildM2" width="175" height="125"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_6.jpg" ><IMG width="54" height="22"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_7.jpg" ><IMG Alt="BildM3" width="186" height="132"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_8.jpg" ><IMG width="73" height="22"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_9.jpg" ><IMG Alt="BildM4" width="175" height="125"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_10.jpg" ><IMG width="89" height="22"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_11.jpg" ><IMG Alt="BildM5" width="168" height="120"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_12.jpg" ><IMG width="88" height="22"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_13.jpg" ><IMG width="193" height="49"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_14.jpg" ><IMG width="49" height="128"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_15.jpg" ><IMG width="103" height="49"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_16.jpg" ><IMG width="103" height="49"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_17.jpg" ><P 

><B>Figure 1 <B>&ndash; Automation facility control </P
><P 

></B><I>Methods</I> and <I>Programs</I> model functions typically have different scopes, behaviours, lifetimes, and complexities in <I>OPC Servers</I> and the underlying systems. These functions are not normally characterized by the reading or writing of data which is accomplished with the OPC UA A<I>ttribute</I> service set.  </P
><P 

><I>Methods</I> represent basic functions in the <I>Server</I> that can be invoked by a <I>Client</I>. <I>Programs, </I>by contrast,<I> </I>model more complex and stateful functionality in the system. For example, a method call may be used to perform a calculation or reset a counter. A <I>Program</I> is used to run and control a batch process, execute a machine tool part program, or manage a domain download. <I>Methods</I> and their invocation mechanism are described in <A href="#LinkTarget_1649" href="#">
Part 3</A>
 and <A href="#LinkTarget_1655" href="#">
Part 4</A>
. </P
><P 

>This standard describes the extensions to, or specific use of, the core capabilities defined in <A href="#LinkTarget_1656" href="#">
Part 5</A>
 as required for <I>Programs</I>. </P
><H2 
 ID="LinkTarget_1780"
><B>4.2 Programs </H2
><H3 
 ID="LinkTarget_1781"
> Overview </H3
><P 

></B><I>Programs</I> are complex functions in a server or underlying system that can be invoked and managed by a <I>Client</I>. <I>Programs</I> can represent any level of functionality within a system or process in which client control or intervention is required and progress monitoring is desired. <A href="#LinkTarget_1792" href="#">
Figure 2</A>
 illustrates the model. </P
><P 

> <DIV class="Sect" 
 Alt=""
> Program  Transition Events _________ _________ _________ Control Methods ________() ________() ________() Monitor   Manage  State Machine _________ _________ _________ Result Data _________ _________ _________ Get Results   Get  Description  </DIV
></P
><P 

><B>Figure 2 &ndash; Program illustration </P
><P 

></B><I>Programs</I> are state full and transition through a prescribed sequence of states as they execute. Their behaviour is defined by a <I>Program</I> <I>Finite State Machine (PFSM)</I>. The elements of the PFSM describe the phases of a <I>Program&rsquo;s </I>execution in terms of valid transitions between a set of states, the stimuli or causes of those transitions, and the resultant effects of the transitions. </P
><H3 
 ID="LinkTarget_1794"
><B> Security considerations  </H3
><P 

></B>Since <I>Programs</I> can be used to perform advanced control algorithms or other actions, their use should be restricted to personnel with appropriate access rights. It is recommended that <I>AuditUpdateMethodEvents</I> are generated to allow monitoring the number of running <I>Programs</I> in addition to their execution frequency. </P
><H3 
 ID="LinkTarget_1796"
><B> Program Finite State Machine  </H3
><P 

></B>The states, transitions, causes and effects that compose the <I>Program Finite State Machine</I> are listed in <A href="#LinkTarget_1808" href="#">
Table 1</A>
 and illustrated in <A href="#LinkTarget_2037" href="#">
Figure 3</A>
. </P
><P 

><B>Table 1 &ndash; Program Finite State Machine </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">No. </P
></TH
><TH 
 valign="top"
><P 

>Transition name </P
></TH
><TH 
 valign="top"
><P 

>Cause </P
></TH
><TH 
 valign="top"
><P 

>From state </P
></TH
><TH 
 valign="top"
><P 

>To state </P
></TH
><TH 
 valign="top"
><P 

>Effect </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>1 </P
></TD
><TD  
 valign="top"
><P 

>HaltedToReady </P
></TD
><TD  
 valign="top"
><P 

>Reset Method </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 1 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

>Start Method </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 2 Event/Result<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>3 </P
></TD
><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

>Halt Method or Internal (Error) </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 3 Event/Result<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>4 </P
></TD
><TD  
 valign="top"
><P 

>RunningToReady </P
></TD
><TD  
 valign="top"
><P 

>Internal </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 4 Event/Result<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>5 </P
></TD
><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

>Suspend Method </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 5 Event/Result<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>6 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

>Resume Method </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 6 Event/Result<B> </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

>No. </P
></TH
><TH 
 valign="top"
><P 

>Transition name </P
></TH
><TH 
 valign="top"
><P 

>Cause </P
></TH
><TH 
 valign="top"
><P 

>From state </P
></TH
><TH 
 valign="top"
><P 

>To state </P
></TH
><TH 
 valign="top"
><P 

>Effect </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>7 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

>Halt Method </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 7 Event/Result<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>8 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToReady </P
></TD
><TD  
 valign="top"
><P 

>Internal </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 8 Event/Result<B> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>9 </P
></TD
><TD  
 valign="top"
><P 

>ReadyToHalted </P
></TD
><TD  
 valign="top"
><P 

>Halt Method </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 9 Event/Result<B> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"></B> </P
><P 

> </P
><IMG width="163" height="266"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_18.jpg" ><IMG width="83" height="166"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_19.jpg" ><IMG width="32" height="171"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_20.jpg" ><IMG width="24" height="28"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_21.jpg" ><IMG width="24" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_22.jpg" ><IMG width="25" height="29"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_23.jpg" ><IMG width="26" height="28"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_24.jpg" ><IMG width="171" height="47"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_25.jpg" ><IMG width="171" height="47"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_26.jpg" ><IMG width="171" height="47"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_27.jpg" ><IMG width="171" height="47"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_28.jpg" ><IMG width="9" height="42"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_29.jpg" ><IMG width="9" height="42"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_30.jpg" ><IMG width="9" height="42"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_31.jpg" ><IMG width="9" height="41"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_32.jpg" ><IMG width="9" height="42"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_33.jpg" ><IMG width="9" height="43"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_34.jpg" ><IMG width="24" height="28"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_35.jpg" ><IMG width="24" height="28"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_36.jpg" ><IMG width="23" height="28"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_37.jpg" ><IMG width="26" height="29"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_38.jpg" ><IMG width="25" height="27"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_39.jpg" ><IMG width="22" height="26"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_40.jpg" ><P 

><B>Figure 3 &ndash; Program states and transitions </P
><H3 
 ID="LinkTarget_2038"
> Program states </H3
><P 

></B>A standard set of base states is defined for <I>Programs </I>as part of the <I>Program Finite State Machine.</I> These states represent the stages in which a <I>Program</I> can exist at an instance in time as viewed by a <I>Client</I>. This state is the <I>Program&rsquo;s </I>current state. All <I>Programs</I> shall support this base set. A <I>Program</I> may or may not require a <I>Client</I> action to cause the state to change. The states are formally defined in <A href="#LinkTarget_2045" href="#">
Table 2</A>
. </P
><P 

><B>Table 2 &ndash; Program states </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">State </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

></B>The <I>Program</I> is properly initialized and may be started. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>Running </P
></TD
><TD  
 valign="top"
><P 

></B>The <I>Program</I> is executing making progress towards completion. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>Suspended </P
></TD
><TD  
 valign="top"
><P 

></B>The <I>Program</I> has been stopped prior to reaching a terminal state but may be resumed. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>Halted </P
></TD
><TD  
 valign="top"
><P 

></B>The <I>Program</I> is in a terminal or failed state, and it cannot be started or resumed without being reset. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The set of states defined to describe a <I>Program</I> can be expanded. <I>Program</I> sub states can be defined for the base states to provide more resolution of a process and to describe the cause and effect(s) of additional stimuli and transitions. Standards bodies and industry groups may extend the base <I>Program Finite State Model</I> to conform to various industry models. For example, the Halted state can include the sub states &ldquo;Aborted&rdquo; and &ldquo;Completed&rdquo; to indicate if the function achieved a successful conclusion prior to the transition to Halted. Transitional </P
><P 

>states such as &ldquo;Starting&rdquo; or &ldquo;Suspending&rdquo; might also be extensions of the Running state, for example. </P
><H3 
 ID="LinkTarget_2082"
><B> State transitions </H3
><P 

></B>A standard set of state transitions is defined for the <I>Program Finite State Machine. </I>These transitions define the valid changes to the <I>Program&rsquo;s</I> current state in terms of an initial state and a resultant state. The transitions are formally defined in <A href="#LinkTarget_2089" href="#">
Table 3</A>
. </P
><P 

><B>Table 3 &ndash; Program state transitions  </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Transition no. </P
></TD
><TD  
 valign="top"
><P 

>Transition name </P
></TD
><TD  
 valign="top"
><P 

>Initial state </P
></TD
><TD  
 valign="top"
><P 

>Resultant state </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>1 </P
></TD
><TD  
 valign="top"
><P 

>HaltedToReady </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>RunningToReady </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5 </P
></TD
><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>7 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>8 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToReady </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>9 </P
></TD
><TD  
 valign="top"
><P 

>ReadyToHalted </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
></TR
></TABLE
><P 

> </P
><H3 
 ID="LinkTarget_2196"
><FONT size="+1"><B> Program state transition stimuli </H3
><P 

></B>The stimuli or causes for a <I>Program&rsquo;s</I> state transitions can be internal to the <I>Server</I> or external. The completion of machining steps, the detection of an alarm condition, or the transmission of a data packet are examples of internal stimuli. <I>Methods</I> are an example of external stimuli. Standard <I>Methods</I> are defined which act as stimuli for the control of a <I>Program</I>. </P
><H3 
 ID="LinkTarget_2198"
><B> Program Control Methods </H3
><P 

></B><I>Clients </I>manage a <I>Program</I> by calling <I>Methods.</I> The <I>Methods</I> impact a <I>Program&rsquo;s</I> behaviour by causing specified state transitions. The state transitions dictate the actions performed by the <I>Program</I>. This standard defines a set of standard <I>Program</I> <I>Control</I> <I>Methods</I>. These <I>Methods</I> provide sufficient means for a client to run a <I>Program</I>. </P
><P 

><A href="#LinkTarget_2208" href="#">
Table 4</A>
 lists the set of defined <I>Program Control Methods. </I>Each<I> Method</I> causes transitions from specified states and shall be called when the <I>Program</I> is in one of those states. </P
><P 

>Individual<I> Programs </I>can optionally support any subset of the <I>Program Control Methods. </I>For example, some<I> Programs </I>may not be permitted to suspend and so would not provide the<I> Suspend </I>and<I> Resume Methods.  </I></P
><P 

><I>Programs </I>can support additional user defined <I>Methods. </I>User defined<I> Methods </I>shall not change the behaviour of the base <I>Program Finite State Machine</I>. </P
><P 

><B>Table 4 &ndash; Program Control Methods </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Method Name </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Start </P
></TD
><TD  
 valign="top"
><P 

>Causes the <I>Program</I> to transition from the Ready state to the Running state. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Suspend </P
></TD
><TD  
 valign="top"
><P 

>Causes the <I>Program</I> to transition from the Running state to the Suspended state. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Resume </P
></TD
><TD  
 valign="top"
><P 

>Causes the <I>Program</I> to transition from the Suspended state to the Running state. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

>Causes the <I>Program</I> to transition from the Ready, Running or Suspended state to the Halted state. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Reset </P
></TD
><TD  
 valign="top"
><P 

>Causes the <I>Program</I> to transition from the Halted state to the Ready state. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><I>Program Control Methods </I>can include arguments that are used by the <I>Program.</I> For example, a Start <I>Method</I> may include an options argument that specifies dynamic options used to determine some program behaviour. The arguments can differ on each <I>ProgramType</I>. The <I>Method</I> <I>Call</I> service specified in <A href="#LinkTarget_1655" href="#">
Part 4</A>
:&ndash;, 5.11 defines a return status. This return status indicates the success of the <I>Program Control Method</I> or a reason for its failure. </P
><H3 
 ID="LinkTarget_2256"
><B> Program state transition effects </H3
><P 

></B>A <I>Program&rsquo;s </I>state transition generally has a cause and also yields an effect. The effect is a by product of a <I>Program</I> state transition that can be used by a <I>Client</I> to monitor the progress of the <I>Program</I>. Effects can be internal or external. An external effect of a state transition is the generation of an <I>Event</I> notification. Each <I>Program</I> state transition is associated with a unique <I>Event</I>. These <I>Events</I> reflect the progression and trajectory of the <I>Program</I> through its set of defined states. The internal effects of a state transition can be the performance of some programmatic action such as the generation of data.  </P
><H3 
 ID="LinkTarget_2258"
><B> Program result data </H3
><H4 
 ID="LinkTarget_2259"
>4.2.9.1 Overview </H4
><P 

></B>Result data is generated by a running <I>Program. </I>The result data can be intermediate or final. Result data may be associated with specific <I>Program </I>state transitions. </P
><H4 
 ID="LinkTarget_2261"
><B>4.2.9.2 Intermediate result data </H4
><P 

></B>Intermediate result data is transient and is generated by the <I>Program </I>in conjunction with non- terminal state transitions. The data items that compose the intermediate results are defined in association with specific <I>Program</I> state transitions. Their values are relevant only at the transition level.  </P
><P 

>Each <I>Program</I> state transition can be associated with different result data items. Alternately, a set of transitions can share a result data item. Percentage complete is an example of intermediate result data. The value of percentage complete is produced when the state transition occurs and is available to the <I>Client</I>. </P
><P 

><I>Clients</I> acquire intermediate result data by subscribing to <I>Program</I> state transition <I>Events</I>. The <I>Events</I> specify the data items for each transition. When the transition occurs, the generated <I>Event</I> conveys the result data values captured to the subscribed <I>Clients</I>. If no <I>Client</I> is monitoring the <I>Program</I>, intermediate result data may be discarded. </P
><H4 
 ID="LinkTarget_2265"
><B>4.2.9.3 Terminal result data  </H4
><P 

></B>Terminal result data is the final data generated by the <I>Program </I>as it ceases execution. Total execution time, number of widgets produced, and fault condition encountered are examples of terminal result data. When the <I>Program</I> enters the terminal state, this result data can be conveyed to the client by the transition <I>Event</I>. Terminal result data is also available within the <I>Program </I>to be read by a <I>Client</I> after the program stops. This data persists until the <I>Program</I> Instance is rerun or deleted. </P
><H4 
 ID="LinkTarget_2267"
><B>4.2.9.4 Monitoring Programs </H4
><P 

></B><I>Clients</I> can monitor the activities associated with a <I>Program&rsquo;s</I> execution. These activities include the invocation of the management <I>Methods</I>, the generation of result data, and the progression of the <I>Program</I> through its states. <I>Audit Events</I> are provided for <I>Method Calls</I> and </P
><P 

>state transitions. These <I>Events</I> allow a record to be maintained of the <I>Clients</I> that interacted with any <I>Program</I> and the <I>Program</I> state transitions that resulted from that interaction.  </P
><H3 
 ID="LinkTarget_2271"
><B> Program lifetime </H3
><H4 
 ID="LinkTarget_2272"
>4.2.10.1 Overview </H4
><P 

></B><I>Programs </I>can have<I> </I>different lifetimes. Some <I>Programs </I>may always be present on a <I>Server</I> while others are created and removed. Creation and removal can be controlled by a <I>Client</I> or may be restricted to local means. </P
><P 

>A <I>Program</I> can be <I>Client</I> creatable. If a <I>Program</I> is <I>Client</I> creatable, then the <I>Client</I> can add the <I>Program</I> to the <I>Server</I>. The <I>Object</I> <I>Create</I> <I>Method</I> defined in <A href="#LinkTarget_1649" href="#">
Part 3</A>
:&ndash;, 5.5.4, is used to create the <I>Program</I> instance. The initial state of the <I>Program</I> can be Halted or Ready<I>. </I>Some <I>Programs</I>, for example, may require that a resource becomes available after its creation and before it is ready to run. In this case, it would be initialized in the Halted state and transition to Ready when the resource is delivered.    </P
><P 

>A <I>Program</I> can be <I>Client</I> removable. If the <I>Program</I> is <I>Client</I> removable, then the <I>Client</I> can delete the <I>Program</I> instance from the <I>Server</I>. The <I>DeleteNodes</I> <I>Service</I> defined in  <A href="#LinkTarget_1655" href="#">
Part 4</A>
 is used to remove the <I>Program</I> Instance. The <I>Program</I> shall be in a Halted state to be removed. A <I>Program</I> may also be auto removable. An auto removable <I>Program</I> deletes itself when execution has terminated. </P
><H4 
 ID="LinkTarget_2286"
><B>4.2.10.2 Program instances </H4
><P 

></B><I>Programs</I> can be multiple instanced or single instanced. A <I>Server</I> can support multiple instances of a <I>Program </I>if these<I> Program </I>Instances<I> </I>can be run in parallel<I>. </I>For example<I>, </I>the <I>Program</I> may define a <I>Start</I> <I>Method</I> that has an input argument to specify which resource is acted upon by its functions. Each instance of the <I>Program </I>is then started designating use of different resources. The <I>Client</I> can discover all instances of a <I>Program</I> that are running on a <I>Server</I>. Each instance of a <I>Program</I> is uniquely identified on the <I>Server </I>and is managed independently by the <I>Client</I>.  </P
><H4 
 ID="LinkTarget_2288"
><B>4.2.10.3 Program recycling </H4
><P 

></B><I>Programs</I> can be run once or run multiple times (recycled). A <I>Program</I> that is run once will remain in the Halted<I> </I>state indefinitely once it has run. The normal course of action would be to delete it following the inspection of its terminal results.  </P
><P 

>Recyclable <I>Programs</I> may have a limited or unlimited cycle count. These <I>Programs</I> may require a reset step to transition from the Halted state to the Ready state. This allows for replenishing resources or reinitializing parameters prior to restarting the <I>Program</I>. The <I>Program Control Method</I> &ldquo;<I>Reset&rdquo;</I> triggers this state transition and any associated actions or effects.   </P
><H1 
 ID="LinkTarget_2291"
><FONT size="+1"><B>5 Model </H1
><H2 
 ID="LinkTarget_2292"
><FONT size="+1">5.1 General </H2
><P 

></B>The<I> Program </I>model extends the<I> FiniteStateMachineType and </I>basic<I> ObjectType </I>models presented in <A href="#LinkTarget_1656" href="#">
Part 5</A>
<I>. </I>Each<I> Program </I>has a <I>Type Definition</I> that is the subtype of the <I>FiniteStateMachineType. </I>The <I>ProgramType</I> describes the <I>Finite State Machine</I> model supported by any <I>Program Invocation</I> of that type<I>.</I> The <I>ProgramType</I> also defines the property set that characterizes specific aspects of that <I>Program&rsquo;s</I> behaviour such as lifetime and recycling as well as specifying the result data that is produced by the <I>Program</I>. </P
><P 

> <DIV class="Sect" 
 Alt=""
>MyProgramStatesMethodMethodMethodsMyProgramTypeProgramTypeHasSubtypeStateMachineObjectTypeHasSubtypeHasComponentsStatesTransitions</DIV
></P
><P 

><B>Figure 4 &ndash; Program Type </P
><P 

></B>The base <I>ProgramType</I> defines the standard <I>Finite State Machine</I> specified for all <I>Programs</I>. This includes the states, transitions, and transition causes (<I>Methods</I>) and effects (<I>Events</I>). Subtypes of the base <I>ProgramType</I> can be defined to extend or more specifically characterize the behaviour of an individual <I>Program</I> as illustrated with &ldquo;MyProgramType&rdquo; in <A href="#LinkTarget_2303" href="#">
Figure 4</A>
. </P
><H2 
 ID="LinkTarget_2310"
><B>5.2 ProgramType </H2
><H3 
 ID="LinkTarget_2311"
> Overview </H3
><P 

></B>The additional properties and components that compose the <I>ProgramType</I> are listed in  <A href="#LinkTarget_2319" href="#">
Table 5</A>
. No <I>ProgramType </I>specific semantics are assigned to the other base <I>ObjectType</I> or <I>FiniteStateMachineType Attributes</I> or <I>Properties</I>.  </P
><P 

><B>Table 5 &ndash; ProgramType </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>Includes all attributes specified for the FiniteStateMachineType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ProgramType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Data Type </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>Creatable </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>Deletabe </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>AutoDelete </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>RecycleCount </P
></TD
><TD  
 valign="top"
><P 

>Int32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InstanceCount </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxInstanceCount </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxRecycleCount </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ProgramDiagnostic </P
></TD
><TD  
 valign="top"
><P 

>ProgramDiagnosticDataType </P
></TD
><TD  
 valign="top"
><P 

>ProgramDiagnosticType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>HaltedToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>RunningToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>ReadyToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Start </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Suspend </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Reset </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Resume </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>FinalResultData </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>BaseObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_2816"
><FONT size="+1"><B> ProgramType Properties </H3
><P 

></B>The <I>Creatable</I> <I>Property</I> is a boolean that specifies if <I>Program</I> <I>Invocations</I> of this <I>ProgramType </I>can be created by a <I>Client</I>. If False, these <I>Program</I> <I>Invocations</I> are persistent or may only be created by the <I>Server</I>. </P
><P 

>The <I>Deletable</I> <I>Property</I> is a boolean that specifies if a <I>Program</I> <I>Invocation</I> of this <I>ProgramType </I>can be deleted by a <I>Client</I>. If False, these <I>Program</I> <I>Invocations</I> can only be deleted by the <I>Server</I>. </P
><P 

>The <I>AutoDelete</I> <I>Property</I> is a boolean that specifies if <I>Program</I> <I>Invocations</I> of this <I>ProgramType </I>are removed by the <I>Server </I>when execution terminates. If False, these <I>Program</I> <I>Invocations</I> persist on the <I>Server </I>until they are deleted by the <I>Client</I>. When the <I>Program</I> <I>Invocation</I> is deleted, any result data associated with the instance is also removed. </P
><P 

>The <I>RecycleCount</I> <I>Property</I> is an unsigned integer that specifies the number of times a <I>Program</I> <I>Invocation</I> of this type has been recycled or restarted from its starting point (not resumed). Note that the Reset Method may be required to prepare a <I>Program</I> to be restarted. </P
><P 

>The <I>MaxRecycleCount</I> <I>Property</I> is an integer that specifies the maximum number of times a <I>Program</I> <I>Invocation</I> of this type can be recycled or restarted from its starting point (not resumed). If the value is less than 0, then there is no limit to the number of restarts. If the value is zero, then the Program may not be recycled or restarted. </P
><P 

>The <I>InstanceCount</I> <I>Property</I> is an unsigned integer that specifies the number of <I>Program Invocations</I> of this type that currently exist. </P
><P 

>The <I>MaxInstanceCount</I> <I>Property</I> is an integer that specifies the maximum number of <I>Program Invocations</I> of this type that can exist simultaneously on this <I>Server</I>. If the value is less than 0, then there is no limit.  </P
><H3 
 ID="LinkTarget_2825"
><B> ProgramType components </H3
><H4 
 ID="LinkTarget_2826"
>5.2.3.1 Overview </H4
><P 

></B>The <I>ProgramType</I> components consist of a set of <I>References</I> to the <I>Object</I> instances of <I>StateTypes</I>, <I>TransitionTypes</I>, <I>EventTypes</I> and the <I>Methods</I> that collectively define the <I>Program</I> <I>FiniteStateMachine.</I>   </P
><P 

> <DIV class="Sect" 
 Alt=""
>Start FromStateToStateHasEffectHas CauseTransitionTypeStateTypeReadyToRunningRunningReadyBaseEventTypeTransitionEventType</DIV
></P
><P 

><B>Figure 5 &ndash; Program FSM References </P
><P 

><A href="#LinkTarget_2831" href="#">
</B>Figure 5</A>
 illustrates the component<I> References</I> that define the associations between two of the <I>ProgramType&rsquo;s</I> states, Ready and Running. The complementary ReferenceTypes have been omitted to simplify the illustration. </P
><H4 
 ID="LinkTarget_2837"
><B>5.2.3.2 ProgramType states  </H4
><P 

><A href="#LinkTarget_2849" href="#">
</B>Table 6</A>
 specifies the <I>ProgramType</I><I>&rsquo;</I><I>s</I> state <I>Objects</I>. These <I>Objects</I> are instances of the <I>StateType</I> defined in <A href="#LinkTarget_1656" href="#">
Part 5</A>
:&ndash;, Annex B. Each state is assigned a unique <I>StateNumber </I>value. </P
><P 

>Subtypes of the <I>ProgramType</I> can add references from any state to a subordinate or nested <I>StateMachine Object </I>to extend the<I> FiniteStateMachine</I>.    </P
><P 

><B>Table 6 &ndash; Program states </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>NOTES </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

>States </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Halted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>HaltedToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>ReadyToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>HaltedToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>RunningToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>ReadyToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>RunningToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToReady </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The<I> </I>Halted<I> </I>state is the idle state for a <I>Program</I>. It can be an initial state or a terminal state. As an initial state, the <I>Program</I> <I>Invocation</I> cannot begin execution due to conditions at the <I>Server</I>. As a terminal state, Halted can indicate either a failed or completed <I>Program</I>. A subordinate state or result can be used to distinguish the nature of the termination. The Halted state references four <I>Transition</I> <I>Objects</I>, which identify the allowed state transitions to the Ready state and from the Ready, Running, and Suspended states.  </P
><P 

>The Ready state indicates that the <I>Program</I> is prepared to begin execution. <I>Programs </I>that are ready to begin upon their creation may transition immediately to the Ready state. The Ready state references four <I>Transition Objects, </I>which identify the allowed state transitions to the Running and Halted states and from the Halted and Ready states.  </P
><P 

>The Running state indicates that the <I>Program</I> is actively performing its function. The Running state references five <I>Transition Objects, </I>which identify the allowed state transitions to the Halted, Ready, and Suspended states and from the Ready and Suspended states.  </P
><P 

>The Suspended state indicates that the <I>Program </I>has stopped performing its function, but retains the ability to resume the function at the point at which it was executing when suspended. The Suspended state references four <I>Transition</I> <I>Objects</I>, which identify the allowed state transitions to the Ready, Running, and Halted state and from the Ready<I> </I>state.  </P
><H4 
 ID="LinkTarget_3211"
><B>5.2.3.3 ProgramType<I> </I>transitions<I> </I></H4
><P 

></B><I>ProgramType </I>Transitions are instances of the <I>TransitionType</I> defined in <A href="#LinkTarget_1656" href="#">
Part 5</A>
 which also includes the definitions of the ToState, FromState, HasCause, and HasEffect references used. <A href="#LinkTarget_3223" href="#">
Table 7</A>
 specifies the transitions defined for the <I>ProgramType. </I>Each transition is assigned a unique <I>TransitionNumber</I>. The Notes column indicates when a cause is referencing <I>Methods</I> and when effects are optional. </P
><P 

><B>Table 7 &ndash; Program transitions </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>Notes </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

>Transitions </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HaltedToReady </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Reset </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Start </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>RunningToReady </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Runnning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>5 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Suspend </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><B>BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>Notes </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Resume </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>7 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SuspendedToReady </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>8 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Reset </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadyToHalted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>9 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The<I> HaltedToReady </I>transition specifies the transition from the Halted to Ready states. It may be caused by the <I>Reset</I> <I>Method.</I> </P
><P 

>The<I> ReadyToRunning </I>transition specifies the transition from the Ready to <I>Running</I> states. It is caused by the <I>Start</I> <I>Method. </I> </P
><P 

>The<I> RunningToHalted </I>transition specifies the transition from the <I>Running</I> to Halted states. It is caused by the <I>Halt</I> <I>Method. </I> </P
><P 

>The<I> RunningToReady </I>transition specifies the transition from the Running to Ready states. The<I> RunningToSuspended </I>transition specifies the Transition from the Running to Suspended states. It is caused by the <I>Suspend</I> <I>Method. </I> </P
><P 

>The<I> SuspendedToRunning </I>transition specifies the transition from the Suspended to Running states. It is caused by the <I>Resume</I> <I>Method. </I> </P
><P 

>The<I> SuspendedToHalted </I>transition specifies the transition from the Suspended to Halted states. It is caused by the <I>Halt</I> <I>Method. </I> </P
><P 

>The<I> SuspendedToReady </I>transition specifies the transition from the Suspended to Ready states. It is caused internally<I>. </I> </P
><P 

>The<I> ReadyToHalted </I>transition specifies the transition from the Ready to Halted states. It is caused by the <I>Halt</I> <I>Method. </I> </P
><P 

>Two <I>HasEffect</I> references are specified for each <I>Program</I> transition. These effects are <I>Events</I> of <I>ProgramTransitionEventType</I> and <I>AuditProgramTransitionEventType </I>defined in <A href="#LinkTarget_4411" href="#">
5.2.5</A>
<I>. </I>The </P
><P 

><I>ProgramTransitionEventType</I> notifies <I>Clients</I> of the <I>Program</I> transition and conveys result data. The <I>AuditProgramTransitionEventType</I> is used to audit transitions that result from <I>Program Control Methods</I>. The &ldquo;<I>Audit Server Facet</I>&rdquo; <I>Profile</I> defined in <A href="#LinkTarget_1657" href="#">
Part 7</A>
 requires support of the <I>AuditProgramTransitionEventType</I>. </P
><P 

> <DIV class="Sect" 
 Alt=""
>StartHasEffectStartInputArgumentsHasPropertyStartOutputArgumentsHas PropertyReadyToRunningHasCauseTransitionEventTypeIntermediateResultDataTransitionTypeMyVariableProgramTransitionEventType</DIV
></P
><P 

><B>Figure 6 &ndash; ProgramType causes and effects </P
><H3 
 ID="LinkTarget_4141"
> ProgramType causes (Methods) </H3
><H4 
 ID="LinkTarget_4142"
>5.2.4.1 Overview </H4
><P 

></B>The <I>ProgramType</I> includes references to the Causes of specific <I>Program</I> state transitions. These causes refer to <I>Method </I>instances<I>. Programs </I>that<I> </I>do not support<I> a Program Control Method </I>will omit the Causes reference to that <I>Method</I> from the <I>ProgramType </I>references. If a <I>Method</I><I>&rsquo;s Causes</I> reference is omitted from the <I>ProgramType</I> then a <I>Client</I> cannot cause the associated state transition. The <I>Method</I> instances referenced by the <I>ProgramType</I> identify the <I>InputArguments</I> and <I>OutputArguments</I> required for the <I>Method</I> calls to <I>Program</I> <I>Invocations</I> of that <I>ProgramType</I>. <A href="#LinkTarget_4153" href="#">
Table 8</A>
 specifies the <I>Methods </I>defined as Causes for<I> ProgramTypes</I>. <A href="#LinkTarget_4140" href="#">
Figure 6</A>
 illustrates the <I>References</I> associating the components and <I>Properties</I> of <I>Methods</I> and <I>Events</I> with Program transitions<I>.</I>  </P
><P 

><B>Table 8 &ndash; ProgramType causes </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>NOTES </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

>Causes  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Start </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Suspend </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><B>BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>NOTES </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Resume </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Reset </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>InputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>OutputArguments </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The <I>Start</I> <I>Method</I> causes the <I>ReadyToRunning</I> <I>Program </I>transition.  </P
><P 

>The <I>Suspend</I> <I>Method</I> causes the <I>RunningToSuspended Program </I>transition. </P
><P 

>The <I>Resume</I> <I>Method</I> causes the <I>SuspendedToRunning Program </I>transition. </P
><P 

>The <I>Halt</I> <I>Method</I> causes the <I>RunningToHalted, SuspendedToHalted, or ReadyToHalted   Program </I>transition<I> </I>depending on the<I> </I>current state<I> </I>of the<I> Program</I>. </P
><P 

>The <I>Reset</I> <I>Method</I> causes the <I>HaltedToReady Program </I>transition. </P
><H4 
 ID="LinkTarget_4405"
><B>5.2.4.2 Standard attributes </H4
><P 

></B>The<I> Executable</I> <I>Method</I> attribute indicates if a method can currently be executed. For <I>Program Control Methods</I>, this means that the owning <I>Program</I> has a current state<I> </I>that supports the transition caused by the <I>Method.</I> </P
><H4 
 ID="LinkTarget_4407"
><B>5.2.4.3 Standard properties </H4
><H5 
 ID="LinkTarget_4408"
>5.2.4.3.1 Overview </H5
><P 

></B><I>Methods</I> can reference a set of <I>InputArguments.</I> For each <I>ProgramType</I>, a set of <I>InputArguments</I> may be defined for the supported <I>Program Control Methods</I>. The data passed in the arguments supplements the information required by the <I>Program</I> to perform its function. All calls to a <I>Program Control Method</I> for each <I>Program Invocation</I> of that <I>ProgramType</I> shall pass the specified arguments.   </P
><P 

><I>Methods</I> can reference a set of <I>OutputArguments</I>. For each <I>ProgramType</I>, a set of <I>OutputArguments</I> is defined for the supported <I>Program Control Methods</I>. All calls to a <I>Program Control Method</I> for each <I>Program Invocation</I> of that <I>ProgramType</I> shall pass the specified arguments. <I> </I></P
><H3 
 ID="LinkTarget_4411"
><B> ProgramType effects (Events) </H3
><H4 
 ID="LinkTarget_4412"
>5.2.5.1 Overview </H4
><P 

></B>The <I>ProgramType</I> includes component references to the Effects of each of the <I>Program</I><I>&rsquo;s</I> state transitions. These Effects<I> </I>are<I> Events. </I>Each<I> Transition</I> shall have a <I>HasEffect</I> <I>Reference</I> to a <I>ProgramTransitionEventType </I>and can have an<I> AuditProgramTransitionEventType. </I>When the transition occurs, <I>Event</I> notifications of the referenced type are generated for subscribed <I>Clients.</I> The <I>Program</I> <I>Invocation</I> may serve as the <I>EventNotifier</I> for these <I>Events</I> or an owning <I>Object</I> or the <I>Server Object </I>may provide the notifications<I>. </I></P
><P 

><I>ProgramTransitionEventTypes </I>provide the means for delivering result data and confirming state transitions for subscribed <I>Clients</I> on each defined<I> Program State Transition.</I> The <I>AuditProgramTransitionEventType</I> allows the auditing of changes to the <I>Program</I>&rsquo;s state in conjunction with <I>Client</I> <I>Method</I> <I>Calls.</I> </P
><H4 
 ID="LinkTarget_4415"
><B>5.2.5.2 ProgramTransitionEventType </H4
><P 

></B>The<I> ProgramTransitionEventType</I> is a subtype of the <I>TransitionEventType</I>. It is used with <I>Programs</I> to acquire intermediate or final results or other data associated with a state transition. A <I>Program</I> can have a unique <I>ProgramTransitionEventType</I> definition for any transition. Each <I>ProgramTransitionEventType</I> specifies the <I>IntermediateResult</I> data specific to the designated state transition on that <I>ProgramType</I>. Each transition can yield different intermediate result data. <A href="#LinkTarget_4428" href="#">
Table 9</A>
 specifies the <I>ProgramTransitionEventType</I>. </P
><P 

><A href="#LinkTarget_4491" href="#">
Table 10</A>
 identifies the <I>ProgramTransitionEventTypes</I> that are specified for <I>ProgramTypes</I>. </P
><P 

><B>Table 9 &ndash; ProgramTransitionEventType </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the base <I>TransitionEventType</I> defined in <A href="#LinkTarget_1656" href="#">
Part 5</A>
:&ndash;, B.4.16. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResult </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>BaseObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><I>TransitionNumber</I> identifies the <I>Program</I> transition that triggered the <I>Event</I>. </P
><P 

><I>FromStateNumber</I> identifies the state before the <I>Program</I> transition. </P
><P 

><I>ToStateNumber</I> identifies the state after the <I>Program</I> transition.  </P
><P 

>The <I>IntermediateResult</I> is an <I>Object</I> that aggregates a set of <I>Variables</I> whose values are relevant for the <I>Program</I> at the instant of the associated transition. The <I>ObjectType</I> for the <I>IntermediateResult</I> specifies the collection of <I>Variables</I> using a set of <I>HasComponent</I> <I>References</I>.    </P
><P 

><B>Table 10 &ndash; ProgramTransitionEvents </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>Notes </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

>Effects   </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HaltedToReadyEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadyToRunningEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>RunningToHaltedEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>RunningToReadyEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>RunningToSuspendedEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>5 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SuspendedToRunningEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SuspendedToHaltedEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>7 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><B>BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>Notes </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B>SuspendedToReadyEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>8 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>4 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadyToHaltedEvent </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>9 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>FromStateNumber </P
></TD
><TD  
 valign="top"
><P 

>2 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>ToStateNumber </P
></TD
><TD  
 valign="top"
><P 

>1 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ObjectType </P
></TD
><TD  
 valign="top"
><P 

>Optional </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5273"
><FONT size="+1"><B> AuditProgramTransitionEventType </H3
><P 

></B>The <I>AuditProgramTransitionEventType</I> is a subtype of the <I>AuditUpdateStateEventType</I>. It is used with <I>Programs</I> to provide a means to audit the <I>Program State </I>transitions<I> </I>associated with any <I>Client</I> invoked <I>Program Control Method</I>. <I>Servers</I> shall generate <I>AuditProgramTransitionEvents</I> if they support the <I>Audit Server Facet Profile</I> defined in <A href="#LinkTarget_1657" href="#">
Part 7</A>
. </P
><P 

><A href="#LinkTarget_5285" href="#">
Table 11</A>
 specifies the definition of the <I>AuditProgramTransitionEventType.</I> </P
><P 

><B>Table 11 &ndash; AuditProgramTransitionEventType </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the <I>AuditUpdateStateEventType</I> defined in <A href="#LinkTarget_1656" href="#">
Part 5</A>
:&ndash;, B.4.17.  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">This <I>EventType</I> inherits all <I>Properties</I> of the <I>AuditUpdateStateEventType </I>defined in <A href="#LinkTarget_1656" href="#">
Part 5</A>
:&ndash;, B.4.17, except as noted below. </P
><P 

>The <I>Status</I> <I>Property,</I> specified in <A href="#LinkTarget_1656" href="#">
Part 5</A>
:&ndash;, 6.4.3,, identifies whether the state transition resulted from a Program Control Method call (set <I>Status</I> to TRUE) or not (set <I>Status</I> to FALSE). </P
><P 

>The <I>SourceName</I> specified in <A href="#LinkTarget_1656" href="#">
Part 5</A>
:&ndash;, 6.4.2, identifies the <I>Method</I> causing the <I>Program </I>transition when it is the result of a <I>Client</I> invoked <I>ProgramControlMethod</I>. The <I>SourceName</I> is prefixed with &ldquo;Method/&rdquo; and the name of the <I>ProgramControlMethod</I>, &ldquo;Method/Start&rdquo; for example.  </P
><P 

>The <I>ClientUserId Property,</I> specified in <A href="#LinkTarget_1656" href="#">
Part 5</A>
:&ndash;, 6.4.3, identifies the user of the <I>Client</I> that issued the <I>Program Control Method</I> if it is associated with this <I>Program </I>state transition.  </P
><P 

>The <I>ActionTimeStamp Property,</I> specified in <A href="#LinkTarget_1656" href="#">
Part 5</A>
, clause 6.4.3 &ldquo;AuditEventType&rdquo;, identifies when the time the <I>Program </I>state transition that resulted in the <I>Event</I> being generated occurred.  </P
><P 

>The <I>TransitionNumber</I> <I>Property</I> is a <I>Variable</I> that identifies the transition that triggered the <I>Event</I>. </P
><H3 
 ID="LinkTarget_5374"
><B> FinalResultData </H3
><P 

></B>The <I>FinalResultData</I> <I>ObjectType</I> specifies the <I>VariableTypes</I> that are preserved when the <I>Program</I> has completed its function. The <I>ObjectType </I>includes<I> a HasComponent </I>for a <I>VariableType</I> of each <I>Variable</I> that comprises the final result data. </P
><H3 
 ID="LinkTarget_5377"
><B> ProgramDiagnostic DataType </H3
><P 

></B>This structure contains elements that chronicle the <I>Program Invocation</I><I>&rsquo;</I><I>s</I> activity and can be used to aid in the diagnosis of <I>Program</I> problems. Its composition is defined in <A href="#LinkTarget_5384" href="#">
Table 12</A>
. </P
><P 

><B>Table 12 &ndash; ProgramDiagnosticDataType structure </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Description </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>ProgramDiagnosticDataType </P
></TD
><TD  
 valign="top"
><P 

>structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> createSessionId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>The <I>Create</I><I>SessionId</I> contains the <I>SessionId</I> of the <I>Session</I>on which the call to the <I>Create</I> <I>Method </I>was issued to create the <I>Program Invocation</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> createClientName  </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>The <I>Create</I><I>ClientName</I> is the name of the client of the <I>Session</I>that created the <I>Program</I><I> </I><I>Invocation</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> invocationCreationTime </P
></TD
><TD  
 valign="top"
><P 

>UTCTime </P
></TD
><TD  
 valign="top"
><P 

>The <I>InvocationCreationTime</I> identifies the time the <I>Program Invocation</I> was created. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> lastTransitionTime </P
></TD
><TD  
 valign="top"
><P 

>UTCTime </P
></TD
><TD  
 valign="top"
><P 

>The <I>LastTransitionTime</I> identifies the time of the last <I>Program </I>state transition that occurred. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> lastMethodCall </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>The <I>LastMethodCall</I> identifies the last <I>Program</I> <I>Method</I> called on the <I>Program Invocation</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> lastMethodSessionId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>The <I>LastMethod</I><I>SessionId</I> contains the <I>SessionId</I> of the <I>Session</I>on which the last Program Control Method call to the <I>Program Invocation</I> was issued. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> lastMethodInputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[] </P
></TD
><TD  
 valign="top"
><P 

>The <I>LastMethodInputArguments</I> preserves the values of the input arguments on the last <I>Program</I> <I>Meth</I><I>od</I> call. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> lastMethodOutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[] </P
></TD
><TD  
 valign="top"
><P 

>The <I>LastMethodOutputArguments</I> preserves the values of the output arguments on the last <I>Program</I> <I>Method</I> call. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> lastMethodCallTime </P
></TD
><TD  
 valign="top"
><P 

>UTCTime </P
></TD
><TD  
 valign="top"
><P 

>The <I>LastMethodCall</I><I>Time</I> identifies the time of the last Method call to the <I>Program Invocation</I>. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> lastMethodReturnStatus </P
></TD
><TD  
 valign="top"
><P 

>StatusResult </P
></TD
><TD  
 valign="top"
><P 

>The <I>LastMethodReturnStatus</I><I> </I>preserves the value of the return status<I> </I>for the last <I>Program Control Method </I>requested for<I> </I><I>this Program </I><I>Invocation</I><I>.</I> </P
></TD
></TR
></TABLE
><P 

> </P
><P 

><FONT size="+1">Its representation in the <I>AddressSpace</I> is defined in <A href="#LinkTarget_5489" href="#">
Table 13</A>
. </P
><P 

><B>Table 13 &ndash; ProgramDiagnosticDataType definition </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attributes </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ProgramDiagnosticDataType </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5504"
><B> ProgramDiagnosticType VariableType </H3
><P 

></B>This <I>VariableType</I> aggregates simple <I>Variables</I> using simple <I>DataTypes</I> that reflect the elements of the ProgramDiagnosticDataType structure. Its <I>DataVariables</I> have the same semantic as defined in in <A href="#LinkTarget_5377" href="#">
5.2.8</A>
. The <I>VariableType</I> is formally defined in <A href="#LinkTarget_5516" href="#">
Table 14</A>
. </P
><P 

><B>Table 14 &ndash; ProgramDiagnosticType VariableType </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>ProgramDiagnosticType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DataType / TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Subtype of the BaseDataVariableType defined in <A href="#LinkTarget_1656" href="#">
Part 5</A>
. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CreateSessionId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>CreateClientName </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InvocationCreationTime </P
></TD
><TD  
 valign="top"
><P 

>UTCTime </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastTransitionTime </P
></TD
><TD  
 valign="top"
><P 

>UTCTime </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastMethodCall </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastMethodSessionId </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastMethodInputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[] </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastMethodOutputArguments </P
></TD
><TD  
 valign="top"
><P 

>Argument[] </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastMethodCallTime </P
></TD
><TD  
 valign="top"
><P 

>UTCTime </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>LastMethodReturnStatus </P
></TD
><TD  
 valign="top"
><P 

>StatusResult </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

> </P
><H1 
 ID="LinkTarget_5681"
><FONT size="+1"><B>Annex A </B>(informative)<B>  Program example  </H1
><H2 
 ID="LinkTarget_5683"
><FONT size="+1">A.1 Overview </H2
><P 

><FONT size="+1"></B>This example illustrates the use of a <I>Program</I> to manage a domain download into a control system as depicted in Figure A.1. The download requires the segmented transfer of control operation data from a secondary storage device to the local memory within a control system.  </P
><P 

> </P
><IMG Alt="" width="593" height="461"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_41.jpg" ><P 

><B>Figure A.1 &ndash; Program example  </P
><P 

></B>The domain download has a source and a target location which are identified when the download is initiated. Each time a segment of the domain is successfully transferred the client is notified and informed of the amount of data that has been downloaded. The client is also notified when the download is finished. The percentage of the total data received is reported periodically while the download continues. If the download fails, the cause of the failure is reported. At the completion of the download, the performance information is kept at the <I>Server</I>. </P
><H2 
 ID="LinkTarget_5722"
><FONT size="+1"><B>A.2 DomainDownload Program </H2
><H3 
 ID="LinkTarget_5723"
><FONT size="+1">A.2.1 General </H3
><P 

></B>The <I>Client</I> uses the &ldquo;DomainDownload&rdquo; <I>Program </I>to manage and monitor the download of a domain at the <I>Server</I>. </P
><H3 
 ID="LinkTarget_5725"
><B>A.2.2 DomainDownload states </H3
><P 

></B>The basic state model for the DomainDownload <I>Program</I> is presented in <A href="#LinkTarget_5735" href="#">
Figure A.2</A>
. The <I>Program</I> has three primary states, Ready, Running, and Halted which are aligned with the standard states of a <I>ProgramType</I>. Additionally, the <I>DomainDownloadType</I> extends the <I>ProgramType</I> by defining subordinate state machines for the <I>Program&rsquo;s</I> Running and Halted </P
><P 

>states. The subordinate states describe the download operations in greater detail and allow the <I>Client</I> to monitor the activity of the download at a finer resolution.  </P
><P 

>An instance (<I>Program</I> <I>Invocation</I>) of a DomainDownload <I>Program</I> is created by the <I>Client</I> each time a download is to be performed. The instance exists until explicitly removed by the <I>Client</I>. The initial state of the <I>Program</I> is Ready and the terminal state is Halted. The DomainDownload can be temporarily suspended and then resumed or aborted. Once halted, the program may not be restarted.  </P
><P 

> </P
><IMG width="4159" height="3587"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_42.jpg" ><P 

><B>Figure A.2 &ndash; DomainDownload state diagram </P
><P 

></B>The sequence of state transitions is illustrated in <A href="#LinkTarget_5735" href="#">
Figure A.2</A>
. Once the download is started, The <I>Program</I> progresses to the Opening state. After the source of the data is opened, a sequence of transfers occurs in the Sending state.  When the transfer completes the <I>Objects</I> are closed in the Closing state. If the transfer is terminated before all of the data is downloaded or an error is encountered then the download is halted and the <I>Program</I> transitions to the Aborted state; otherwise the <I>Program</I> halts in the Completed state. The states are presented in <A href="#LinkTarget_5763" href="#">
Table A.1</A>
 along with the state transitions. </P
><H3 
 ID="LinkTarget_5752"
><B>A.2.3 DomainDownload transitions </H3
><P 

></B>The valid state transitions specified for the DomainDownload <I>Program </I>are specified in<I>  </I><A href="#LinkTarget_5763" href="#">
Table A.1</A>
<I>.</I> Each of the transitions defines a start state and end state for the transition and is identified by a unique number. Five of the transitions are from the base <I>ProgramType</I> and retain the transition identifier numbers specified for <I>Programs</I>. The additional transitions relate the base <I>Program </I>states with the subordinate states defined for the DomainDownload. </P
><P 

>These states have been assigned unique transition identifier numbers that distinguish them from the base <I>Program</I> transition identifiers. In cases where transitions occur between substates and the <I>Program&rsquo;s</I> base states, two transitions are specified. One transition identifies the base state change and a second sub-state change. For example, Ready to Running and to Opening occurs at the same time.  </P
><P 

>The table also specifies the defined states, causes for the transitions, and the effects of each transition. <I>Program</I> <I>Control Methods</I> are used by the <I>Client</I> to &ldquo;run&rdquo; the DomainDownload. The <I>Methods</I> cause or trigger the specified transitions. The transition effects are the specified <I>EventTypes</I> which notify the <I>Client</I> of <I>Program</I> activity.  </P
><P 

><B>Table A.1 &ndash; DomainDownload states </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">No. </P
></TD
><TD  
 valign="top"
><P 

>Transition name </P
></TD
><TD  
 valign="top"
><P 

>Cause </P
></TD
><TD  
 valign="top"
><P 

>From State </P
></TD
><TD  
 valign="top"
><P 

>To State  </P
></TD
><TD  
 valign="top"
><P 

>Effect </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>2 </P
></TD
><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

>Start Method </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 2 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>3 </P
></TD
><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

>Halt Method/Error or Internal. </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 3 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>5 </P
></TD
><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

>Suspend Method </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 5 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

>Resume Method </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Running </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 6 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>7 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

>Halt Method </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Halted </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 7 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>10  </P
></TD
><TD  
 valign="top"
><P 

>OpeningToSending </P
></TD
><TD  
 valign="top"
><P 

>Internal </P
></TD
><TD  
 valign="top"
><P 

>Opening </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 10 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>11 </P
></TD
><TD  
 valign="top"
><P 

>SendingToSending </P
></TD
><TD  
 valign="top"
><P 

>Internal </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 11 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>12 </P
></TD
><TD  
 valign="top"
><P 

>SendingToClosing </P
></TD
><TD  
 valign="top"
><P 

>Internal </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

>Closing </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 12 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>13 </P
></TD
><TD  
 valign="top"
><P 

>SendingToAborted </P
></TD
><TD  
 valign="top"
><P 

>Halt Method/Error </P
></TD
><TD  
 valign="top"
><P 

>Opening </P
></TD
><TD  
 valign="top"
><P 

>Aborted </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 13 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>14 </P
></TD
><TD  
 valign="top"
><P 

>ClosingToCompleted </P
></TD
><TD  
 valign="top"
><P 

>Internal </P
></TD
><TD  
 valign="top"
><P 

>Closing </P
></TD
><TD  
 valign="top"
><P 

>Completed </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 14 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>15 </P
></TD
><TD  
 valign="top"
><P 

>SendingToSuspended </P
></TD
><TD  
 valign="top"
><P 

>Suspend Method </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 16 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>16 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToSending </P
></TD
><TD  
 valign="top"
><P 

>Resume Method </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 17 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>18 </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToAborted </P
></TD
><TD  
 valign="top"
><P 

>Halt Method </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

>Aborted </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 18 Event/Result </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>17 </P
></TD
><TD  
 valign="top"
><P 

>ToOpening </P
></TD
><TD  
 valign="top"
><P 

>Internal </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

>Opening </P
></TD
><TD  
 valign="top"
><P 

>Report Transition 19 Event/Result </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><H3 
 ID="LinkTarget_5979"
><FONT size="+1"><B>A.2.4 DomainDownload Methods </H3
><H4 
 ID="LinkTarget_5980"
>A.2.4.1 General </H4
><P 

></B>Four standard <I>Program</I> <I>Methods</I> are specified for running the DomainDownload <I>Program, Start, Suspend, Resume, and Halt. </I>No additional <I>Methods </I>are specified<I>. </I>The<I> </I>base behaviours of these <I>Methods </I>are defined by the<I> ProgramType. </I>The <I>Start</I> <I>Method</I> initiates the download activity and passes the source and destination locations for the transfer. The <I>Suspend</I> <I>Method</I> is used to pause the activity temporarily. The <I>Resume</I> <I>Method</I> reinitiates the download, when paused. The <I>Halt</I> <I>Method</I> aborts the download. Each of the <I>Methods </I>causes a <I>Program</I> state transition and a sub state transition. The specific state transition depends on the current state at the time the <I>Method</I> is called. If a <I>Method</I> <I>Call</I> is made when the DomainDownload is in a state for which that <I>Method </I>has no associated transition, the <I>Method</I> returns an error status indicating invalid state for the <I>Method</I>. </P
><H4 
 ID="LinkTarget_5982"
><B>A.2.4.2 Method Arguments </H4
><P 

></B>The <I>Start Method</I> specifies three input arguments to be passed when it is called: Domain Name, DomainSource, and DomainDestination. The other <I>Methods</I> require no input arguments. No output arguments are specified for the DomainDownload <I>Methods</I>. The resultant error status for the <I>Program</I> is part of the<I> Call Service.</I> </P
><H3 
 ID="LinkTarget_5984"
><B>A.2.5 DomainDownload Events </H3
><H4 
 ID="LinkTarget_5985"
>A.2.5.1 General </H4
><P 

></B>A <I>ProgramTransitionEventType</I> is specified for each of the DomainDownload <I>Program</I> transitions. The <I>EventTypes</I> trigger a specific <I>Event</I> notification to the <I>Client</I> when the </P
><P 

>associated state transition occurs in the running <I>Program</I> Instance. The <I>Event</I> notification identifies the transition. The SendingToSending state transition also includes intermediate result data. </P
><H4 
 ID="LinkTarget_5989"
><B>A.2.5.2 Event information </H4
><P 

></B>The SendingToSending <I>Program</I> transition <I>Event</I> relays intermediate result data to the <I>Client</I> along with the notification. Each time the transition occurs, data items describing the amount and percentage of data transferred are sent to the <I>Client</I>. </P
><H4 
 ID="LinkTarget_5991"
><B>A.2.5.3 Final result data  </H4
><P 

></B>The DomainDownload <I>Program</I> retains final result data following a completed or aborted download. The data includes the total transaction time and the size of the domain. In the event of an aborted download, the reason for the termination is retained. </P
><H3 
 ID="LinkTarget_5993"
><B>A.2.6 DomainDownload model  </H3
><H4 
 ID="LinkTarget_5994"
>A.2.6.1 Overview </H4
><P 

></B>The OPC UA model for the DomainDownload <I>Program</I> is presented in the following tables and figures. Collectively they define the components that constitute this <I>Program</I>. For clarity, the figures present a progression of portions of the model that complement the contents of the tables and illustrate the <I>Program&rsquo;s</I> composition.   </P
><P 

>The type definition for the DomainDownload <I>Program</I> precisely represents the behaviour of the <I>Program</I> in terms of OPC UA components. These components can be browsed by a <I>Client</I> to interpret or validate the actions of the <I>Program</I>. </P
><H4 
 ID="LinkTarget_5997"
><B>A.2.6.2 DomainDownloadType </H4
><P 

></B>The DomainDownloadType is a subtype derived from the <I>ProgramType</I>. It specifies the use or non-use of optional <I>ProgramType</I> components, valid extensions such as subordinate state machines, and constrained attribute values applied to instances of DomainDownload <I>Programs</I>. </P
><P 

><A href="#LinkTarget_6004" href="#">
Table A.2</A>
 specifies the optional and extended components defined by the DomainDownload Type. Note the references to two sub <I>State Machine Types</I>, <I>TransferStateMachine</I> and <I>FinishStateMachine</I>. The DomainDownloadType omits references to the <I>Reset Program Control Method</I> and its associated state transition (HaltedToReady), which it does not support. </P
><P 

><B>Table A.2 &ndash; DomainDownload Type </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>Includes all non-optional attributes specified for the ProgramType  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>DomainDownloadType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Data Type </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasComponent  </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>TransferStateMachine </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateMachineType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent  </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>FinishStateMachine </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateMachineType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>ProgramDiagnostic </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ProgramDiagnosticType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>ReadyToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>RunningToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>RunningToSuspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToRunning </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToHalted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Start </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Suspend </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Resume </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>FinalResultData </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>BaseObjectType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><A href="#LinkTarget_6235" href="#">
<FONT size="+1">Table A.3</A>
 specifies the <I>Transfer State Machine type</I> that is a sub state machine of the DomainDownload <I>Program Type</I>. This definition identifies the <I>StateTypes</I> that compose the sub states for the <I>Program&rsquo;s</I> Running <I>StateType</I>. </P
><P 

><B>Table A.3 &ndash; Transfer State Machine Type </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>Includes all attributes specified for the FiniteStateMachineType  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>TransferStateMachineType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Data Type </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Opening </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Closing </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>ReadyToOpening </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>OpeningToSending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SendingToClosing </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SendingToAborted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SendingToSuspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>SuspendedToSending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Start </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Suspend </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
><TD  
 valign="top"
><P 

>Resume </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><A href="#LinkTarget_6235" href="#">
<FONT size="+1">Table A.3</A>
 specifies the <I>StateTypes</I> associated with the Transfer State Machine Type. All of these states are sub states of the <I>Running</I> state of the base <I>ProgramType</I>.  </P
><P 

>The Opening state is the preparation state for the domain download.  </P
><P 

>The Sending state is the activity state for the transfer in which the data is moved from the source to destination.  </P
><P 

>The Closing state is the cleanup phase of the download. </P
><P 

><A href="#LinkTarget_6499" href="#">
Table A.4</A>
 defines the states of the <I>TransferStateMachineType</I>. </P
><P 

><B>Table A.4 &ndash; Transfer State Machine &ndash; states </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">BrowseName </P
></TD
><TD  
 valign="top"
><P 

>References </P
></TD
><TD  
 valign="top"
><P 

>Target BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
><TD  
 valign="top"
><P 

>Target TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>NOTES </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>States </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Opening </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>5 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>OpeningToSending   </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>ToOpening       </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>OpeningToSending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>6 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>OpeningToSending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>SendingToSending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>SendingToClosing </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>SendingToSuspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>ToSending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Closing </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>7 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>ClosingToCompleted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToTransition </P
></TD
><TD  
 valign="top"
><P 

>ClosingToAborted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>SendingToClosing </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><A href="#LinkTarget_6751" href="#">
<FONT size="+1">Table A.5</A>
 specifies the <I>Finish State Machine Type</I> that is a sub state machine of the DomainDownload <I>ProgramType</I>. This definition identifies the <I>StateTypes</I> that compose the sub states for the <I>Program&rsquo;s</I> Halted <I>StateType</I>. </P
><P 

><B>Table A.5 &ndash; Finish State Machine Type </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>Includes all attributes specified for the FiniteStateMachineType  </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>TransferStateMachineType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Data </P
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling </P
><P 

>Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Completed </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Object </P
></TD
><TD  
 valign="top"
><P 

>Aborted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><A href="#LinkTarget_6847" href="#">
<FONT size="+1">Table A.6</A>
 specifies the <I>StateTypes</I> associated with the <I>Finish State Machine Type</I>. Note these are final states and that they have no associated transitions between them. </P
><P 

><B>Table A.6 &ndash; Finish State Machine &ndash; states </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">BrowseName </P
></TD
><TD  
 valign="top"
><P 

>References </P
></TD
><TD  
 valign="top"
><P 

>Target BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
><TD  
 valign="top"
><P 

>Target TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>NOTES </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>States </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Aborted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>8 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>OpeningToAborted       </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>ClosingToAborted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Completed </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>StateNumber </P
></TD
><TD  
 valign="top"
><P 

>9 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromTransition </P
></TD
><TD  
 valign="top"
><P 

>ClosingToCompleted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>TransitionType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The Aborted state is the terminal state that indicates an incomplete or failed domain download operation. </P
><P 

>The Completed state<I> </I>is the terminal state that indicates a successful domain download. </P
><P 

><A href="#LinkTarget_6960" href="#">
Table A.7</A>
 specifies the constraining behaviour of a DomainDownload.  </P
><P 

><B>Table A.7 &ndash; DomainDownload Type Property Attributes variable values </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Data </P
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Data Value </P
></TD
><TD  
 valign="top"
><P 

>Modelling </P
><P 

>Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Variable </P
></TD
><TD  
 valign="top"
><P 

>Creatable </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>Deletable </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>True </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>AutoDelete </P
></TD
><TD  
 valign="top"
><P 

>Boolean </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>RecycleCount </P
></TD
><TD  
 valign="top"
><P 

>Int32 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InstanceCount </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxInstanceCount </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>500 </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>MaxRecycleCount </P
></TD
><TD  
 valign="top"
><P 

>UInt32 </P
></TD
><TD  
 valign="top"
><P 

>0 </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

>A DomainDownload <I>Program</I> <I>Invocation</I> can be created and also destroyed by a <I>Client</I>. The <I>Program Invocation</I> will not delete itself when halted, but will persist until explicitly removed by the <I>Client</I>. A DomainDownload <I>Program Invocation</I> cannot be reset to restart. The <I>Server</I> will support up to 500 concurrent DomainDownload <I>Program Invocation</I>s.  </P
><P 

><A href="#LinkTarget_7073" href="#">
Figure A.3</A>
 presents a partial DomainDownloadType model that illustrates the association between the states and the DomainDownload, Transfer, and Finish State Machines. Note that the current state number for the sub state machines is only valid when the DomainDownload active base state references the sub state machine, Running for the Transfer current state and Halted for the Finish current state. </P
><P 

> <DIV class="Sect" 
 Alt=""
>DomainDownloadReadyRunningHaltedDomainDownloadCurrentStateContains the current state of the DownloadDomain Program State Machine (SM)TransferStateMachineOpeningTransferStateMachineCurrentStateContains the current state of Transfer SM if Download-Domain is in the Running State otherwise invalid.HasSubStateMachineSendingClosingAbortedCompletedSuspendedHasSubStateMachineFinishStateMachineCurrentStateContains the current state of Finish SM if Download-Domain is in the Halted State otherwise invalid. FinishStateMachineTransferStateMachineFinishStateMachineProgram Control Methods and State Transitions are omitted for clarity.StateType</DIV
></P
><P 

><B>Figure A.3 &ndash; DomainDownloadType partial state model </P
><P 

><A href="#LinkTarget_7086" href="#">
</B>Table A.8</A>
 specifies the <I>ProgramTransitionTypes</I> that are defined in addition to the <I>ProgramTransitionTypes </I>specified for <I>Programs </I>in<I> </I><A href="#LinkTarget_3223" href="#">
Table 7</A>
<I>. </I>These<I> </I>types<I> </I>associate the Transfer and Finish sub state machine states with the states of the base <I>Program.</I> </P
><P 

><B>Table A.8 &ndash; Additional DomainDownload transition types </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><FONT size="+1">BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>NOTES </P
></TH
></TR
><TR  

><TH 
 valign="top"
><P 

>Transitions </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ToSending </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>10 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Opening </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Start </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SendingToSending </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>11 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SendingToClosing </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>12 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Closing </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SendingToAborted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>13 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Aborted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Halt </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ClosingToCompleted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>14 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Completed </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Closing </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SendingToSuspended </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>15 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Suspend  </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SuspendedToSending </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>16 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Sending </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

><B>BrowseName </P
></TH
><TH 
 valign="top"
><P 

>References </P
></TH
><TH 
 valign="top"
><P 

>Target BrowseName  </P
></TH
><TH 
 valign="top"
><P 

>Value </P
></TH
><TH 
 valign="top"
><P 

>Target TypeDefinition </P
></TH
><TH 
 valign="top"
><P 

>NOTES </P
></TH
></TR
></TABLE
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TH 
 valign="top"
><P 

>Transitions </P
></TH
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Resume  </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>SuspendedToAborted </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>18 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Aborted </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Suspended </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Halt  </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>ReadyToOpening </P
></TD
><TD  
 valign="top"
><P 

>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>TransitionNumber </P
></TD
><TD  
 valign="top"
><P 

>17 </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>ToState </P
></TD
><TD  
 valign="top"
><P 

>Opening </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>FromState </P
></TD
><TD  
 valign="top"
><P 

>Ready </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>StateType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasCause </P
></TD
><TD  
 valign="top"
><P 

>Start  </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>Method </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>ProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

>HasEffect </P
></TD
><TD  
 valign="top"
><P 

>AuditProgramTransitionEventType </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><A href="#LinkTarget_7958" href="#">
<FONT size="+1">Figure A.4</A>
 through <A href="#LinkTarget_8636" href="#">
Figure A.10</A>
 illustrate portions of the DomainDownloadType model. In each figure, the referenced tates, <I>Methods</I>, transitions, and <I>EventTypes</I> are identified for one or two state transitions.   </P
><P 

> <DIV class="Sect" 
 Alt=""
>ReadyRunningOpeningReady To RunningStartHasCauseHasEffectPartial DomainDownloadType Model Part 1ToStateHasCauseTransitionEventType19HasEffectToStateTo OpeningTransitionEventType2StateTypeTransitionTypeStateTypeStartInputArgumentsHasPropertyInputArgumentsFromState</DIV
></P
><P 

><B>Figure A.4 &ndash; Ready To Running model </P
><P 

><A href="#LinkTarget_7958" href="#">
</B>Figure A.4</A>
 illustrates the model for the ReadyToRunning <I>Program</I> transition. The transition is caused by the <I>Start Method</I>. The <I>Start Method</I> requires three input arguments. The <I>Method</I> <I>Call</I> service is used by the <I>Client</I> to invoke the <I>Start Method </I>and pass the arguments. When successful, the <I>Program</I> <I>Invocation</I> enters the Running state and the subordinate Transfer Opening state. The <I>Server</I> issues two <I>Event</I> notifications, ReadyToRunning (2), and ToOpening (19). </P
><P 

><B>Table A.9 &ndash; Start Method additions </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>Start </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>DataType </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>ModellingRule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasProperty </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>InputArgument </P
></TD
><TD  
 valign="top"
><P 

>Argument[] </P
></TD
><TD  
 valign="top"
><P 

>PropertyType </P
></TD
><TD  
 valign="top"
><P 

>-- </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><A href="#LinkTarget_7968" href="#">
<FONT size="+1">Table A.9</A>
 specifies that the <I>Start</I> <I>Method</I> for the <I>DomainDownloadType</I> requires input arguments. <A href="#LinkTarget_8029" href="#">
Table A.10</A>
 identifies the <I>Start</I> <I>Arguments</I> required. </P
><P 

><B>Table A.10 &ndash; StartArguments </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Name </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Argument 1 </P
></TD
><TD  
 valign="top"
><P 

>structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> name </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>SourcePath </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> dataType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>StringNodeId </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> valueRank </P
></TD
><TD  
 valign="top"
><P 

>Int32 </P
></TD
><TD  
 valign="top"
><P 

>-1 (-1 = scalar) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> arrayDimensions </P
></TD
><TD  
 valign="top"
><P 

>UInt32[] </P
></TD
><TD  
 valign="top"
><P 

>null </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> description </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText </P
></TD
><TD  
 valign="top"
><P 

>The source specifier for the domain </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Argument 2 </P
></TD
><TD  
 valign="top"
><P 

>structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Name </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>DesinationPath </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> dataType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>StringNodeId </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> valueRank </P
></TD
><TD  
 valign="top"
><P 

>Int32 </P
></TD
><TD  
 valign="top"
><P 

>-1  (-1 = scalar) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> arrayDimensions </P
></TD
><TD  
 valign="top"
><P 

>UInt32[] </P
></TD
><TD  
 valign="top"
><P 

>null </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> description </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText </P
></TD
><TD  
 valign="top"
><P 

>The destination specifier for the domain </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Argument 3 </P
></TD
><TD  
 valign="top"
><P 

>structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> name </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>DomainName </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> dataType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>StringNodeId </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> arrayDimensions </P
></TD
><TD  
 valign="top"
><P 

>UInt32[] </P
></TD
><TD  
 valign="top"
><P 

>null </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> valueRank </P
></TD
><TD  
 valign="top"
><P 

>Int32 </P
></TD
><TD  
 valign="top"
><P 

>-1  (-1 = scalar) </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> description </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText </P
></TD
><TD  
 valign="top"
><P 

>The name of the domain </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><A href="#LinkTarget_8206" href="#">
<FONT size="+1">Figure A.5</A>
 illustrates the model for the Opening To Sending and the Sending to Closing <I>Program</I> transitions. As specified in the transition table, these state transitions require no <I>Methods</I> to occur, but rather are driven by the internal actions of the <I>Server</I>. <I>Events</I> are generated for each state transition (10 to 12), when they occur. </P
><P 

> <DIV class="Sect" 
 Alt=""
>OpeningFromStateClosingOpeningToSendingHasEffectToStateTransitionEventType12HasEffectToStateSendingToClosingTransitionEventType10StateTypeTransitionTypeSendingToSendingToStateToStateFromStateHasEffectProgramTransitionEventType 11IntermediateResultDataPercentCompleteSendingFromStateStateTypePartial DomainDownloadType Model Part 2</DIV
></P
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Figure A.5 &ndash; Opening To Sending To Closing model </P
><P 

></B>Notice that a state transition can initiate and terminate at the same state (Sending). In this case the transition serves a purpose. The <I>ProgramTransitionEventType</I> effect referenced by   the SendingToSending state transition has an <I>IntermediateResultData</I> <I>Object</I> <I>Reference</I>. The <I>IntermediateResultData</I> <I>Object</I> serves to identify two <I>Variables</I> whose values are obtained each time the state transition occurs. The values are sent to the <I>Client</I> with the <I>Event</I> notification. <A href="#LinkTarget_8220" href="#">
Table A.11</A>
 defines the <I>IntermediateResults</I> <I>ObjectType</I> and <A href="#LinkTarget_8470" href="#">
Table A.13</A>
 defines the <I>Variables</I> of the <I>ObjectType</I>. </P
><P 

><B>Table A.11 &ndash; IntermediateResults Object </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>Includes all attributes specified for the ObjectType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>IntermediateResults </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Data </P
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling </P
><P 

>Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>AmountTransferred </P
></TD
><TD  
 valign="top"
><P 

>Long </P
></TD
><TD  
 valign="top"
><P 

>VariableType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>PercentageTransferred </P
></TD
><TD  
 valign="top"
><P 

>Long </P
></TD
><TD  
 valign="top"
><P 

>VariableType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Table A.12 &ndash; Intermediate result data Variables </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Intermediate Result Variables </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Variable 1  </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Name </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>AmountTransferred </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> dataType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>StringNodeId </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> description </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText </P
></TD
><TD  
 valign="top"
><P 

>Bytes of domain data transferred. </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable 2 </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Name </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>PercentageTransferred </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> dataType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>StringNodeId </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> description </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText </P
></TD
><TD  
 valign="top"
><P 

>Percentage of domain data transferred. </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The model for the Running To Suspended state transition is illustrated in<B> <A href="#LinkTarget_8400" href="#">
</B>Figure A.6</A>
. The cause for this transition is the <I>Suspend Method.</I> The <I>Client</I> can pause the download of domain data to the control. The transition from Running to Suspended invokes the <I>Event</I> generation for <I>TransitionEventTypes</I> 5 and 16. Note that there is no longer a valid current state for the Transfer State Machine.  </P
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"> <DIV class="Sect" 
 Alt=""
>RunningSuspendedSendingRunningToSuspendedSuspendHasCauseHasEffectToStateHasCauseTransitionEventType16HasEffectFromStateSendingToSuspendedTransitionEventType5StateTypeTransitionTypeStateTypeFromStatePartial DomainDownloadType Model Part 3</DIV
></P
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Figure A.6 &ndash; Running To Suspended model </P
><P 

></B>The model for the SuspendedToRunning state transition is illustrated in <A href="#LinkTarget_8416" href="#">
Figure A.7</A>
. The cause for this transition is the <I>Resume Method.</I> The <I>Client</I> can resume the download of domain data to the control. The transition from Suspended to Running generates the <I>Event</I> for <I>TransitionEventTypes</I> 6 and 17. Now that the Running state is active, the Sending state of the Transfer State Machine is again specified for the <I>CurrentStateNumber</I>. </P
><P 

> <DIV class="Sect" 
 Alt=""
>RunningSuspendedSendingSuspendedToRunningResumeHasCauseHasEffectFromStateHasCauseTransitionEventType17HasEffectToStateSuspendedToSendingTransitionEventType6StateTypeTransitionTypeStateTypeToStatePartial DomainDownloadType Model Part 4</DIV
></P
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Figure A.7 &ndash; Suspended To Running model </P
><P 

></B>The model for the Running To Halted state transition for an abnormal termination of the domain download is illustrated in <A href="#LinkTarget_8432" href="#">
Figure A.8</A>
. The cause for this transition is the <I>Halt Method.</I> The <I>Client</I> can terminate the download of domain data to the control. The transition from Running To Halted generates the <I>Event</I> for <I>TransitionEventTypes</I> 3 and 15. The <I>TransitionEventType</I> 15 indicates the transition from the Sending state as the Running State ends and then to the Aborted state as the Halted state is entered. </P
><P 

> <DIV class="Sect" 
 Alt=""
>HaltedRunningRunningToHaltedHaltHasCauseHasEffectPartial DomainDownloadType Model Part 5FromStateHasCauseTransitionEventType15HasEffectFromStateSendingToAbortedTransitionEventType3StateTypeTransitionTypeStateTypeToStateAbortedToStateSending</DIV
></P
><P 

><B>Figure A.8 &ndash; Running To Halted &ndash; Aborted model </P
><P 

><A href="#LinkTarget_8447" href="#">
</B>Figure A.9</A>
 illustrates the model for the Suspended To Halted state transition for an abnormal termination of the domain download. The cause for this transition is the <I>Halt Method.</I> The <I>Client</I> can terminate the download of domain data to the control while it is suspended. The transition from SuspendedToHalted invokes the <I>Event</I> notifiers for <I>TransitionEventTypes</I> 7 and 18.  </P
><P 

> </P
><P 

> <DIV class="Sect" 
 Alt=""
>HaltedSuspendedSuspendedToHaltedHaltHasCauseHasEffectFromStateHasCauseTransitionEventType18HasEffectFromStateSuspendedToAbortedTransitionEventType7StateTypeTransitionTypeStateTypeToStateAbortedToStateSuspendedPartial DomainDownloadType Model Part 7</DIV
></P
><P 

><B>Figure A.9 &ndash; Suspended To Aborted model </P
><P 

></B>The model for the Running To Completed state transition for a normal termination of the domain download is illustrated in <A href="#LinkTarget_8636" href="#">
Figure A.10</A>
. The cause for this transition is internal. The transition from Closing To Halted generates the Event for <I>TransitionEventTypes</I> 3 and 14. The <I>TransitionEventType</I> 14 indicates the transition from the Closing state as the Running state ends and then to the Completed state as the Halted state is entered. </P
><P 

>The DomainDownloadType includes a component reference to a <I>FInalResultData</I> <I>Object</I>. This <I>Object</I> references <I>Variables</I> that persists information about the domain download once it has completed. This data can be read by <I>Clients</I> who are not subscribed to <I>Event</I> notifications. The result data is described in <A href="#LinkTarget_8470" href="#">
Table A.13</A>
 and the <I>Variables</I> in <A href="#LinkTarget_8549" href="#">
Table A.14</A>
. </P
><P 

><B>Table A.13 &ndash; FinalResultData </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Attribute </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B> </P
></TD
><TD  
 valign="top"
><P 

>Includes all attributes specified for the ObjectType </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>BrowseName </P
></TD
><TD  
 valign="top"
><P 

>FinalResultData </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>IsAbstract </P
></TD
><TD  
 valign="top"
><P 

>False </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

><B>References </P
></TD
><TD  
 valign="top"
><P 

>NodeClass </P
></TD
><TD  
 valign="top"
><P 

>BrowseName  </P
></TD
><TD  
 valign="top"
><P 

>Data </P
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>TypeDefinition </P
></TD
><TD  
 valign="top"
><P 

>Modelling </P
><P 

>Rule </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>DownloadPerformance </P
></TD
><TD  
 valign="top"
><P 

>Long </P
></TD
><TD  
 valign="top"
><P 

>VariableType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>HasComponent </P
></TD
><TD  
 valign="top"
><P 

>Variable </P
></TD
><TD  
 valign="top"
><P 

>FailureDetails </P
></TD
><TD  
 valign="top"
><P 

>Long </P
></TD
><TD  
 valign="top"
><P 

>VariableType </P
></TD
><TD  
 valign="top"
><P 

>Mandatory </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1">The Domain Download net transfer data rate and detailed reason for aborted downloads is retained as final result data for each <I>Program Invocation</I>. </P
><P 

><B>Table A.14 &ndash; Final result Variables </P
><TABLE 
 border=0 cellspacing=0 cellpadding=2
><TR  

><TD  
 valign="top"
><P 

><FONT size="+1">Final Result Variables </P
></TD
><TD  
 valign="top"
><P 

>Type </P
></TD
><TD  
 valign="top"
><P 

>Value </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

></B>Variable 1  </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Name </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>DownloadPerformance </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> dataType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>Double </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> description </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText </P
></TD
><TD  
 valign="top"
><P 

>Data rate for domain data transferred </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

>Variable 2 </P
></TD
><TD  
 valign="top"
><P 

>Structure </P
></TD
><TD  
 valign="top"
><P 

> </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> Name </P
></TD
><TD  
 valign="top"
><P 

>String </P
></TD
><TD  
 valign="top"
><P 

>FailureDetails </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> dataType </P
></TD
><TD  
 valign="top"
><P 

>NodeId </P
></TD
><TD  
 valign="top"
><P 

>StringNodeId </P
></TD
></TR
><TR  

><TD  
 valign="top"
><P 

> description </P
></TD
><TD  
 valign="top"
><P 

>LocalizedText </P
></TD
><TD  
 valign="top"
><P 

>Description of reason for abort </P
></TD
></TR
></TABLE
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"> </P
><P 

> <DIV class="Sect" 
 Alt=""
>HaltedRunningRunningToHaltedHasEffectPartial DomainDownloadType Model Part 6FromStateTransitionEventType14HasEffectFromStateClosingToCompletedTransitionEventType3StateTypeTransitionTypeStateTypeToStateCompletedToStateClosingFinalResultDataDownloadPerformanceDomainDownloadType</DIV
></P
><P 

><FONT size="+1"> </P
><P 

><FONT size="+1"><B>Figure A.10 &ndash; Running To Completed model </P
><H4 
 ID="LinkTarget_8640"
>A.2.6.3 Sequence of operations </H4
><P 

><A href="#LinkTarget_8761" href="#">
</B>Figure A.11</A>
 illustrates a normal sequence of service exchanges between a <I>Client</I> and <I>Server</I> that would occur during the life cycle of a DomainDownloadType <I>Program Invocation</I>. </P
><P 

> </P
><IMG width="6" height="768"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_43.jpg" ><IMG width="5" height="768"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_44.jpg" ><IMG width="125" height="25"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_45.jpg" ><IMG width="125" height="25"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_46.jpg" ><IMG width="125" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_47.jpg" ><IMG width="108" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_48.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_49.jpg" ><IMG width="125" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_50.jpg" ><IMG width="108" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_51.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_52.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_53.jpg" ><IMG width="171" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_54.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_55.jpg" ><IMG width="172" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_56.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_57.jpg" ><IMG width="172" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_58.jpg" ><IMG width="125" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_59.jpg" ><IMG width="108" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_60.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_61.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_62.jpg" ><IMG width="170" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_63.jpg" ><IMG width="125" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_64.jpg" ><IMG width="108" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_65.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_66.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_67.jpg" ><IMG width="168" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_68.jpg" ><IMG width="346" height="31"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_69.jpg" ><IMG width="167" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_70.jpg" ><IMG width="346" height="31"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_71.jpg" ><IMG width="168" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_72.jpg" ><IMG width="346" height="31"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_73.jpg" ><IMG width="169" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_74.jpg" ><IMG width="346" height="31"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_75.jpg" ><IMG width="169" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_76.jpg" ><IMG width="346" height="31"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_77.jpg" ><IMG width="171" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_78.jpg" ><IMG width="346" height="31"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_79.jpg" ><IMG width="169" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_80.jpg" ><IMG width="125" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_81.jpg" ><IMG width="113" height="9"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_82.jpg" ><IMG width="346" height="30"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_83.jpg" ><IMG width="610" height="5"
 src="images/OPC UA Part 10 - Programs 1.03 Specification_img_84.jpg" ><P 

><B>Figure A.11 &ndash; Sequence of operations </P
><P 

></B>____________ </P
></BODY>
</HTML>
